{"version":3,"sources":["src/calc-parse.js"," [synthetic:util/global] ","src/css-parse.js","src/style-settings.js","src/common-regex.js","src/unscoped-style-handler.js","src/style-util.js","src/style-transformer.js","src/scoping-shim.js","src/document-watcher.js","src/style-properties.js","src/style-info.js","src/style-placeholder.js","src/style-cache.js","src/template-map.js","src/apply-shim-utils.js","src/common-utils.js","entrypoints/scoping-shim.js"],"names":["$jscomp.global","CALC_REGEXP","visitCssExpressions","expressions","depth","map","exp","kind","CssCalcExpression","children","CssOtherExpression","text","join","parseCalc","input","offset","flushReadBuffer","reading","readBuffer","length","syntax","push","span","pos","readingStartCursor","end","cursor","slice","ignore","next","peekIndex","positions","leftParensCount","nextPeek","innerSpan","constructor","StyleNode","parse","replace","RX$$module$src$css_parse.comments","RX$$module$src$css_parse.port","parseCss","root","n","i","l","OPEN_BRACE","p","previous","CLOSE_BRACE","node","t","substring","trim","ss","_expandUnicodeEscapes","RX$$module$src$css_parse.multipleSpaces","lastIndexOf","s","indexOf","AT_START","MEDIA_START","types$$module$src$css_parse.MEDIA_RULE","match","RX$$module$src$css_parse.keyframesRule","types$$module$src$css_parse.KEYFRAMES_RULE","split","pop","VAR_START","types$$module$src$css_parse.MIXIN_RULE","types$$module$src$css_parse.STYLE_RULE","r$","r","code","repeat","stringify","preserveProperties","cssText","rules","RX$$module$src$css_parse.customProp","RX$$module$src$css_parse.mixinProp","RX$$module$src$css_parse.mixinApply","RX$$module$src$css_parse.varApply","calcMatch","expression","parseResults","STYLE_RULE","KEYFRAMES_RULE","MEDIA_RULE","MIXIN_RULE","comments","port","customProp","mixinProp","mixinApply","varApply","keyframesRule","multipleSpaces","nativeShadow","window","nativeCssVariables_","calcCssVariables","settings","navigator","userAgent","CSS","supports","cssBuild","ShadyCSS","undefined","disableRuntime","nativeCss","nativeCssVariables","module$src$style_settings.cssBuild","VAR_ASSIGN","MIXIN_MATCH","VAR_CONSUMED","ANIMATION_MATCH","MEDIA_MATCH","BRACKETED","styleTextSet","Set","toCssText","callback","forEachRule","rulesForStyle","style","textContent","isKeyframesSelector","rule","styleRuleCallback","keyframesRuleCallback","onlyActiveRules","skipRules","type","matchMedia","matches","applyCss","moniker","target","contextNode","document","createElement","setAttribute","applyStyle","lastHeadApplyNode","applyStylePlaceHolder","placeHolder","createComment","scope","head","insertBefore","after","firstChild","nextSibling","compareDocumentPosition","position","Node","DOCUMENT_POSITION_PRECEDING","findMatchingParen","start","level","processVariableAndFallback","str","inner","prefix","suffix","comma","value","fallback","setElementClassRaw","element","call","wrap","getIsExtends","localName","typeExtension","is","getAttribute","extends","splitSelectorList","selector","parts","part","getCssBuild","__cssBuild","attrValue","CSS_BUILD_ATTR","buildComment","content","Comment","commentParts","parentNode","removeChild","isOptimalCssBuild","StyleTransformer","domAddScope","_transformDom","fn","startNode","transformer","nodeType","ELEMENT_NODE","c$","childNodes","_content","shouldRemoveScope","classList","remove","SCOPE_NAME","add","c","CLASS","newValue","domReplaceScope","oldScope","newScope","domRemoveScope","elementStyles","styleRules","css","ext","hostScope","_calcHostScope","_calcElementScope","CSS_CLASS_PREFIX","isScoped","_transformRule","transformedSelector","_transformRuleCss","_transformComplexSelector","p$","filter","COMPLEX_SELECTOR_SEP","_twiddleNthPlus","NTH","m","inside","_preserveMatchesPseudo","MATCHES","index","Error","MATCHES_REPLACEMENT","_replaceMatchesPseudo","reduce","acc","cur","idx","stop","isNth","test","isMatches","SLOTTED_START","SIMPLE_SELECTOR_SEP","info","_transformCompoundSelector","combinator","DIR_PAREN","before","dir","slottedIndex","SLOTTED","HOST","_transformHostSelector","_transformSimpleSelector","slotted","SLOTTED_PAREN","paren","attributes","output","PSEUDO_PREFIX","HOST_PAREN","SIMPLE_SELECTOR_PREFIX","host","SELECTOR_NO_MATCH","normalizeRootSelector","ROOT","_transformDocumentSelector","SCOPE_DOC_SELECTOR","$jscomp.global.Object.defineProperties","$jscompDefaultExport","StyleInfo","ast","placeholder","ownStylePropertyNames","overrideStyleProperties","customStyle","scopeSelector","styleProperties","get","set","styleInfo","_getStyleRules","prototype","matchesSelector","method","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","IS_IE","StyleProperties","decorateStyles","props","keyframes","ruleIndex","decorateRule","propertyInfo","collectPropertiesInCssText","exec","name","onKeyframesRule","_keyframes","names","properties","collectProperties","collectCssText","collectConsumingCssText","Object","assign","any","valueForProperty","property","valueForProperties","propertyValue","lastIndex","colon","pp","propertyDataFromStyles","o","selectorToMatch","parseInt","key","whenHostOrRootRule","parsedSelector","isRoot","isHost","hostAndRootPropertiesForScope","hostProps","rootProps","_element","transformStyles","hostSelector","hostRx","RegExp","StyleInfo$$module$src$style_info.get","keyframeTransforms","_elementKeyframeTransforms","applyProperties","applyKeyframeTransforms","hasAnimations","keyframeNamesToTransform","keyframe","transform","_scopeSelector","keyframesRules","keyframesNameRx","_scopeKeyframes","transformedKeyframesName","scopeId","_keyframesRuleTransformer","applyCustomStyle","XSCOPE_NAME","placeholderMap","ce","origDefine","wrappedDefine","clazz","options","StyleCache","cache","store","tagname","styleElement","list","typeMax","shift","flush","scopeRegExp","getCurrentScope","getOwnerScope","ownerRoot","getRootNode","ownerDocument","handler","mxns","x","mxn","documentElement","addedNodes","currentScope","ShadowRoot","j","unscopedNodes","unscopedNode","scopeForPreviouslyUnscopedNode","observer","MutationObserver","observe","childList","subtree","delayedStart","body","requestAnimationFrame","readyState","listener","removeEventListener","addEventListener","takeRecords","module$src$document_watcher.flush","templateMap","promise","Promise","resolve","invalidate","elementName","template","templateIsValid","startValidatingTemplate","_validating","then","adoptedCssTextMap","styleCache","ScopingShim","_scopeCounter","_documentOwner","_documentOwnerStyleInfo","StyleInfo$$module$src$style_info.set","_elementsHaveApplied","_customStyleInterface","_applyShim","flush.prototype","getStyleAst.prototype","getStyleAst","styleAstToString.prototype","styleAstToString","prepareTemplate.prototype","prepareTemplate","prepareTemplateDom","prepareTemplateStyles","prepareTemplateStyles.prototype","_prepared","optimalBuild","styleTextParts","styles","querySelectorAll","hasAttribute","scopingAttribute","has","newStyle","cloneNode","appendChild","_gatherStyles","_ensure","hasMixins","ownPropertyNames","_generateStaticStyle","shadowroot","_style","_ownPropertyNames","prepareAdoptedCssText.prototype","prepareAdoptedCssText","cssTextArray","prepareTemplateDom.prototype","_domPrepared","_prepareHost","_ensureCustomStyleInterface","CustomStyleInterface","transformCustomStyleForDocument","flushCustomStyles","_ensureApplyShim","ApplyShim","flushCustomStyles.prototype","customStyles","_revalidateCustomStyleApplyShim","_revalidateApplyShim","_updateProperties","_applyCustomStyles","styleDocument","styleElement.prototype","overrideProps","_mixOverrideStyleProps","styleElementNativeVariables","styleElementShimVariables","_applyStyleProperties","cacheEntry","fetch","entry","_validate","pn","cachedStyle","oldScopeSelector","id","_generateScopeSelector","applyElementStyle","shadowRoot","applyElementScopeSelector","v","removeProperty","setProperty","querySelector","_styleOwnerForNode","owner","ownerStyleInfo","ownerProperties","create","hostAndRootProps","propertiesMatchingHost","_mixinOverrideStyles","overrides","reify","getOwnPropertyNames","styleDocument.prototype","styleSubtree","styleSubtree.prototype","wrappedHost","shadowChildren","transformCustomStyleForDocument.prototype","documentRule","getComputedStyleValue.prototype","getComputedStyleValue","getComputedStyle","getPropertyValue","setElementClass.prototype","setElementClass","classString","classes","scopeName","classAttr","k$","_styleInfoForNode.prototype","_styleInfoForNode","scopeNode.prototype","scopeNode","unscopeNode.prototype","unscopeNode","scopeForNode.prototype","scopeForNode","currentScopeForNode.prototype","currentScopeForNode","defineProperties","scopingShim","elementExtends"],"mappings":"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","file":"scoping-shim.min.js","sourcesContent":["/**\n @license\n Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n Code distributed by Google as part of the polymer project is also\n subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n'use strict';\n\n/** @enum {string} */\nconst CssExpressionKind = {\n\tCssCalcExpression: 'CssCalcExpression',\n\tCssOtherExpression: 'CssOtherExpression'\n};\n\n/** @typedef {{pos: number, end: number}} */\nlet TextSpan; // eslint-disable-line no-unused-vars\n\n/** @typedef {{kind: CssExpressionKind, text: string, span: Text}} */\nlet CssOtherExpression; // eslint-disable-line no-unused-vars\n\n/** @typedef {{kind: CssExpressionKind, text: string, span: Text, children: Array<CssExpression>}} */\nlet CssCalcExpression; // eslint-disable-line no-unused-vars\n\n/** @typedef {CssOtherExpression|CssCalcExpression} */\nlet CssExpression; // eslint-disable-line no-unused-vars\n\n/**\n * A Regular Expression that matches the string 'calc('\n * @const\n * @type {RegExp}\n */\nconst CALC_REGEXP = /calc\\(/g;\n\n/**\n * Visits and stringifies the given CssCalcExpression\n * @param {CssCalcExpression} expression\n * @param {number} depth\n * @returns {string}\n */\nfunction visitCssCalcExpression (expression, depth) {\n\treturn depth === 0\n\t\t? `calc(${visitCssExpressions(expression.children, depth + 1)})`\n\t\t: `(${visitCssExpressions(expression.children, depth + 1)})`;\n}\n\n/**\n * Visits and stringifies the given CSSOtherExpression\n * @param {CssOtherExpression} expression\n * @returns {string}\n */\nfunction visitCssOtherExpression (expression) {\n\treturn expression.text;\n}\n\n/**\n * Visits and stringifies the given CSSExpression\n * @param {CssExpression} expression\n * @param {number} depth\n * @returns {string}\n */\nfunction visitCssExpression (expression, depth) {\n\tswitch (expression.kind) {\n\t\tcase CssExpressionKind.CssCalcExpression:\n\t\t\treturn visitCssCalcExpression( /** @type {CssCalcExpression} */ (expression), depth);\n\t\tcase CssExpressionKind.CssOtherExpression:\n\t\t\treturn visitCssOtherExpression(/** @type {CssOtherExpression} */ (expression));\n\t\tdefault:\n\t\t\treturn '';\n\t}\n}\n\n/**\n * Visits the given CSSExpressions and stringifies them\n * @param {Array<CssExpression>} expressions\n * @param {number} [depth=0]\n * @returns {string}\n */\nfunction visitCssExpressions (expressions, depth = 0) {\n\treturn expressions.map(exp => visitCssExpression(exp, /** @type {number} */ (depth))).join('');\n}\n\n/**\n * A minimal parser that checks CSS declaration values for 'calc' expressions and generates a syntax tree\n * @param {string} input\n * @param {TextSpan} offset\n * @returns {Array<CssExpression>}\n */\nfunction parseCalc (input, offset = {pos: 0, end: input.length}) {\n\tlet cursor = offset.pos + -1;\n\tconst syntax = [];\n\n\tconst isEOF = () => cursor >= input.length || cursor >= offset.end;\n\tconst nextToken = () => input[++cursor];\n\tconst peek = positions => input[cursor + positions];\n\n\t/** @type {Array<string>} */\n\tlet readBuffer = [];\n\tlet readingStartCursor = cursor;\n\tlet reading = false;\n\tlet ignore = false;\n\n\tconst startReading = () => {\n\t\treadingStartCursor = cursor;\n\t\treading = true;\n\t};\n\n\tconst flushReadBuffer = () => {\n\t\treading = false;\n\t\tif (readBuffer.length > 0) {\n\t\t\tsyntax.push({\n\t\t\t\tkind: CssExpressionKind.CssOtherExpression,\n\t\t\t\tspan: {\n\t\t\t\t\tpos: readingStartCursor,\n\t\t\t\t\tend: cursor\n\t\t\t\t},\n\t\t\t\ttext: input.slice(readingStartCursor, cursor)\n\t\t\t});\n\t\t}\n\t\treadBuffer = [];\n\t\treadingStartCursor = cursor;\n\t};\n\n\twhile (!isEOF()) {\n\t\tconst next = nextToken();\n\n\t\tlet peekIndex = 0;\n\n\t\t// Check if the next token leads to a 'calc' expression\n\t\tif (\n\t\t\t!ignore &&\n\t\t\tnext === 'c' &&\n\t\t\tpeek(++peekIndex) === 'a' &&\n\t\t\tpeek(++peekIndex) === 'l' &&\n\t\t\tpeek(++peekIndex) === 'c' &&\n\t\t\tpeek(++peekIndex) === '('\n\t\t) {\n\t\t\tflushReadBuffer();\n\n\t\t\tlet leftParensCount = 0;\n\t\t\twhile (peekIndex < input.length) {\n\t\t\t\tconst nextPeek = peek(peekIndex++);\n\t\t\t\tif (nextPeek === '(') {\n\t\t\t\t\tleftParensCount++;\n\t\t\t\t} else if (nextPeek === ')') {\n\t\t\t\t\tleftParensCount--;\n\n\t\t\t\t\tif (leftParensCount === 0) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst span = {\n\t\t\t\tpos: cursor,\n\t\t\t\tend: cursor + peekIndex\n\t\t\t};\n\n\t\t\tconst innerSpan = {\n\t\t\t\tpos: span.pos + 'calc('.length,\n\t\t\t\tend: span.end - 1\n\t\t\t};\n\n\t\t\tsyntax.push({\n\t\t\t\tkind: CssExpressionKind.CssCalcExpression,\n\t\t\t\tspan,\n\t\t\t\ttext: input.slice(span.pos, span.end),\n\t\t\t\tchildren: parseCalc(input, innerSpan)\n\t\t\t});\n\n\t\t\tcursor = span.end;\n\t\t\treadingStartCursor = span.end;\n\t\t\treading = true;\n\t\t} else {\n\t\t\t// The next char may be the beginning of a comment\n\t\t\tif (\n\t\t\t\tnext === '/' &&\n\t\t\t\tpeek(1) === '*'\n\t\t\t) {\n\t\t\t\tignore = true;\n\t\t\t}\n\n\t\t\t// The next char may be the beginning of the end of a comment\n\t\t\telse if (\n\t\t\t\tnext === '*' &&\n\t\t\t\tpeek(1) === '/'\n\t\t\t) {\n\t\t\t\tignore = false;\n\t\t\t}\n\n\t\t\t// Read the input and add to the read buffer\n\t\t\tif (!reading) {\n\t\t\t\tstartReading();\n\t\t\t}\n\n\t\t\tif (next != null) {\n\t\t\t\treadBuffer.push(next);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Stop reading\n\tflushReadBuffer();\n\treturn syntax;\n}\n\n/**\n * Reduces 'calc(...)'s inside the given expression which can cssText, a CSS declaration, or a ruleset\n * @param {string} expression\n * @return {string}\n */\nexport function reduceCalc (expression) {\n\t// This heuristic takes a fast path if possible\n\tconst calcMatch = expression.match(CALC_REGEXP);\n\n\t// If the expression doesn't include 'calc' or if it only includes one, there's nothing to reduce here.\n\tif (calcMatch == null || calcMatch.length < 2) {\n\t\treturn expression;\n\t}\n\n\t// Otherwise, parse the expression into a syntax tree before reducing it\n\tconst parseResults = parseCalc(expression);\n\treturn visitCssExpressions(parseResults);\n}",null,"/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n\n'use strict';\n\nimport {reduceCalc} from './calc-parse.js';\n\n/** @unrestricted */\nclass StyleNode {\n  constructor() {\n    /** @type {number} */\n    this['start'] = 0;\n    /** @type {number} */\n    this['end'] = 0;\n    /** @type {StyleNode} */\n    this['previous'] = null;\n    /** @type {StyleNode} */\n    this['parent'] = null;\n    /** @type {Array<StyleNode>} */\n    this['rules'] = null;\n    /** @type {string} */\n    this['parsedCssText'] = '';\n    /** @type {string} */\n    this['cssText'] = '';\n    /** @type {boolean} */\n    this['atRule'] = false;\n    /** @type {number} */\n    this['type'] = 0;\n    /** @type {string} */\n    this['keyframesName'] = '';\n    /** @type {string} */\n    this['selector'] = '';\n    /** @type {string} */\n    this['parsedSelector'] = '';\n  }\n}\n\nexport {StyleNode}\n\n// given a string of css, return a simple rule tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nexport function parse(text) {\n  text = clean(text);\n  return parseCss(lex(text), text);\n}\n\n// remove stuff we don't care about that may hinder parsing\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction clean(cssText) {\n  return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n\n// super simple {...} lexer that returns a node tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nfunction lex(text) {\n  let root = new StyleNode();\n  root['start'] = 0;\n  root['end'] = text.length\n  let n = root;\n  for (let i = 0, l = text.length; i < l; i++) {\n    if (text[i] === OPEN_BRACE) {\n      if (!n['rules']) {\n        n['rules'] = [];\n      }\n      let p = n;\n      let previous = p['rules'][p['rules'].length - 1] || null;\n      n = new StyleNode();\n      n['start'] = i + 1;\n      n['parent'] = p;\n      n['previous'] = previous;\n      p['rules'].push(n);\n    } else if (text[i] === CLOSE_BRACE) {\n      n['end'] = i + 1;\n      n = n['parent'] || root;\n    }\n  }\n  return root;\n}\n\n// add selectors/cssText to node tree\n/**\n * @param {StyleNode} node\n * @param {string} text\n * @return {StyleNode}\n */\nfunction parseCss(node, text) {\n  let t = text.substring(node['start'], node['end'] - 1);\n  node['parsedCssText'] = node['cssText'] = t.trim();\n  if (node['parent']) {\n    let ss = node['previous'] ? node['previous']['end'] : node['parent']['start'];\n    t = text.substring(ss, node['start'] - 1);\n    t = _expandUnicodeEscapes(t);\n    t = t.replace(RX.multipleSpaces, ' ');\n    // TODO(sorvell): ad hoc; make selector include only after last ;\n    // helps with mixin syntax\n    t = t.substring(t.lastIndexOf(';') + 1);\n    let s = node['parsedSelector'] = node['selector'] = t.trim();\n    node['atRule'] = (s.indexOf(AT_START) === 0);\n    // note, support a subset of rule types...\n    if (node['atRule']) {\n      if (s.indexOf(MEDIA_START) === 0) {\n        node['type'] = types.MEDIA_RULE;\n      } else if (s.match(RX.keyframesRule)) {\n        node['type'] = types.KEYFRAMES_RULE;\n        node['keyframesName'] =\n          node['selector'].split(RX.multipleSpaces).pop();\n      }\n    } else {\n      if (s.indexOf(VAR_START) === 0) {\n        node['type'] = types.MIXIN_RULE;\n      } else {\n        node['type'] = types.STYLE_RULE;\n      }\n    }\n  }\n  let r$ = node['rules'];\n  if (r$) {\n    for (let i = 0, l = r$.length, r;\n      (i < l) && (r = r$[i]); i++) {\n      parseCss(r, text);\n    }\n  }\n  return node;\n}\n\n/**\n * conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n * expanded form that doesn't require trailing space `\\000033`\n * @param {string} s\n * @return {string}\n */\nfunction _expandUnicodeEscapes(s) {\n  return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function() {\n    let code = arguments[1],\n      repeat = 6 - code.length;\n    while (repeat--) {\n      code = '0' + code;\n    }\n    return '\\\\' + code;\n  });\n}\n\n/**\n * stringify parsed css.\n * @param {StyleNode} node\n * @param {boolean=} preserveProperties\n * @param {string=} text\n * @return {string}\n */\nexport function stringify(node, preserveProperties, text = '') {\n  // calc rule cssText\n  let cssText = '';\n  if (node['cssText'] || node['rules']) {\n    let r$ = node['rules'];\n    if (r$ && !_hasMixinRules(r$)) {\n      for (let i = 0, l = r$.length, r;\n        (i < l) && (r = r$[i]); i++) {\n        cssText = stringify(r, preserveProperties, cssText);\n      }\n    } else {\n      cssText = preserveProperties ? node['cssText'] :\n        reduceCalc(removeCustomProps(node['cssText']));\n      cssText = cssText.trim();\n      if (cssText) {\n        cssText = '  ' + cssText + '\\n';\n      }\n    }\n  }\n  // emit rule if there is cssText\n  if (cssText) {\n    if (node['selector']) {\n      text += node['selector'] + ' ' + OPEN_BRACE + '\\n';\n    }\n    text += cssText;\n    if (node['selector']) {\n      text += CLOSE_BRACE + '\\n\\n';\n    }\n  }\n  return text;\n}\n\n/**\n * @param {Array<StyleNode>} rules\n * @return {boolean}\n */\nfunction _hasMixinRules(rules) {\n  let r = rules[0];\n  return Boolean(r) && Boolean(r['selector']) && r['selector'].indexOf(VAR_START) === 0;\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomProps(cssText) {\n  cssText = removeCustomPropAssignment(cssText);\n  return removeCustomPropApply(cssText);\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nexport function removeCustomPropAssignment(cssText) {\n  return cssText\n    .replace(RX.customProp, '')\n    .replace(RX.mixinProp, '');\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomPropApply(cssText) {\n  return cssText\n    .replace(RX.mixinApply, '')\n    .replace(RX.varApply, '');\n}\n\n/** @enum {number} */\nexport const types = {\n  STYLE_RULE: 1,\n  KEYFRAMES_RULE: 7,\n  MEDIA_RULE: 4,\n  MIXIN_RULE: 1000\n}\n\nconst OPEN_BRACE = '{';\nconst CLOSE_BRACE = '}';\n\n// helper regexp's\nconst RX = {\n  comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n  port: /@import[^;]*;/gim,\n  customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n  mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n  mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n  varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n  keyframesRule: /^@[^\\s]*keyframes/,\n  multipleSpaces: /\\s+/g\n}\n\nconst VAR_START = '--';\nconst MEDIA_START = '@media';\nconst AT_START = '@';\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport const nativeShadow = !(window['ShadyDOM'] && window['ShadyDOM']['inUse']);\nlet nativeCssVariables_;\n\n/**\n * @param {(ShadyCSSOptions | ShadyCSSInterface)=} settings\n */\nfunction calcCssVariables(settings) {\n  if (settings && settings['shimcssproperties']) {\n    nativeCssVariables_ = false;\n  } else {\n    // chrome 49 has semi-working css vars, check if box-shadow works\n    // safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\n    // However, shim css custom properties are only supported with ShadyDOM enabled,\n    // so fall back on native if we do not detect ShadyDOM\n    // Edge 15: custom properties used in ::before and ::after will also be used in the parent element\n    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12414257/\n    nativeCssVariables_ = nativeShadow || Boolean(!navigator.userAgent.match(/AppleWebKit\\/601|Edge\\/15/) &&\n      window.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)'));\n  }\n}\n\n/** @type {string | undefined} */\nexport let cssBuild;\nif (window.ShadyCSS && window.ShadyCSS.cssBuild !== undefined) {\n  cssBuild = window.ShadyCSS.cssBuild;\n}\n\n/** @type {boolean} */\nexport const disableRuntime = Boolean(window.ShadyCSS && window.ShadyCSS.disableRuntime);\n\nif (window.ShadyCSS && window.ShadyCSS.nativeCss !== undefined) {\n  nativeCssVariables_ = window.ShadyCSS.nativeCss;\n} else if (window.ShadyCSS) {\n  calcCssVariables(window.ShadyCSS);\n  // reset window variable to let ShadyCSS API take its place\n  window.ShadyCSS = undefined;\n} else {\n  calcCssVariables(window['WebComponents'] && window['WebComponents']['flags']);\n}\n\n// Hack for type error under new type inference which doesn't like that\n// nativeCssVariables is updated in a function and assigns the type\n// `function(): ?` instead of `boolean`.\nexport const nativeCssVariables = /** @type {boolean} */(nativeCssVariables_);","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nexport const VAR_ASSIGN = /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};{])+)|\\{([^}]*)\\}(?:(?=[;\\s}])|$))/gi;\nexport const MIXIN_MATCH = /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi;\nexport const VAR_CONSUMED = /(--[\\w-]+)\\s*([:,;)]|$)/gi;\nexport const ANIMATION_MATCH = /(animation\\s*:)|(animation-name\\s*:)/;\nexport const MEDIA_MATCH = /@media\\s(.*)/;\nexport const IS_VAR = /^--/;\nexport const BRACKETED = /\\{[^}]*\\}/g;\nexport const HOST_PREFIX = '(?:^|[^.#[:])';\nexport const HOST_SUFFIX = '($|[.:[\\\\s>+~])';\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/** @type {!Set<string>} */\nconst styleTextSet = new Set();\n\nexport const scopingAttribute = 'shady-unscoped';\n\n/**\n * Add a specifically-marked style to the document directly, and only one copy of that style.\n *\n * @param {!HTMLStyleElement} style\n * @return {undefined}\n */\nexport function processUnscopedStyle(style) {\n  const text = style.textContent;\n  if (!styleTextSet.has(text)) {\n    styleTextSet.add(text);\n    const newStyle = style.cloneNode(true);\n    document.head.appendChild(newStyle);\n  }\n}\n\n/**\n * Check if a style is supposed to be unscoped\n * @param {!HTMLStyleElement} style\n * @return {boolean} true if the style has the unscoping attribute\n */\nexport function isUnscopedStyle(style) {\n  return style.hasAttribute(scopingAttribute);\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow, nativeCssVariables, cssBuild} from './style-settings.js';\nimport {parse, stringify, types, StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\nimport {MEDIA_MATCH} from './common-regex.js';\nimport {processUnscopedStyle, isUnscopedStyle} from './unscoped-style-handler.js';\n\n/**\n * @param {string|StyleNode} rules\n * @param {function(StyleNode)=} callback\n * @return {string}\n */\nexport function toCssText (rules, callback) {\n  if (!rules) {\n    return '';\n  }\n  if (typeof rules === 'string') {\n    rules = parse(rules);\n  }\n  if (callback) {\n    forEachRule(rules, callback);\n  }\n  return stringify(rules, nativeCssVariables);\n}\n\n/**\n * @param {HTMLStyleElement} style\n * @return {StyleNode}\n */\nexport function rulesForStyle(style) {\n  if (!style['__cssRules'] && style.textContent) {\n    style['__cssRules'] = parse(style.textContent);\n  }\n  return style['__cssRules'] || null;\n}\n\n// Tests if a rule is a keyframes selector, which looks almost exactly\n// like a normal selector but is not (it has nothing to do with scoping\n// for example).\n/**\n * @param {StyleNode} rule\n * @return {boolean}\n */\nexport function isKeyframesSelector(rule) {\n  return Boolean(rule['parent']) &&\n  rule['parent']['type'] === types.KEYFRAMES_RULE;\n}\n\n/**\n * @param {StyleNode} node\n * @param {Function=} styleRuleCallback\n * @param {Function=} keyframesRuleCallback\n * @param {boolean=} onlyActiveRules\n */\nexport function forEachRule(node, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {\n  if (!node) {\n    return;\n  }\n  let skipRules = false;\n  let type = node['type'];\n  if (onlyActiveRules) {\n    if (type === types.MEDIA_RULE) {\n      let matchMedia = node['selector'].match(MEDIA_MATCH);\n      if (matchMedia) {\n        // if rule is a non matching @media rule, skip subrules\n        if (!window.matchMedia(matchMedia[1]).matches) {\n          skipRules = true;\n        }\n      }\n    }\n  }\n  if (type === types.STYLE_RULE) {\n    styleRuleCallback(node);\n  } else if (keyframesRuleCallback &&\n    type === types.KEYFRAMES_RULE) {\n    keyframesRuleCallback(node);\n  } else if (type === types.MIXIN_RULE) {\n    skipRules = true;\n  }\n  let r$ = node['rules'];\n  if (r$ && !skipRules) {\n    for (let i=0, l=r$.length, r; (i<l) && (r=r$[i]); i++) {\n      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);\n    }\n  }\n}\n\n// add a string of cssText to the document.\n/**\n * @param {string} cssText\n * @param {string} moniker\n * @param {Node} target\n * @param {Node} contextNode\n * @return {HTMLStyleElement}\n */\nexport function applyCss(cssText, moniker, target, contextNode) {\n  let style = createScopeStyle(cssText, moniker);\n  applyStyle(style, target, contextNode);\n  return style;\n}\n\n/**\n * @param {string} cssText\n * @param {string} moniker\n * @return {HTMLStyleElement}\n */\nexport function createScopeStyle(cssText, moniker) {\n  let style = /** @type {HTMLStyleElement} */(document.createElement('style'));\n  if (moniker) {\n    style.setAttribute('scope', moniker);\n  }\n  style.textContent = cssText;\n  return style;\n}\n\n/**\n * Track the position of the last added style for placing placeholders\n * @type {Node}\n */\nlet lastHeadApplyNode = null;\n\n// insert a comment node as a styling position placeholder.\n/**\n * @param {string} moniker\n * @return {!Comment}\n */\nexport function applyStylePlaceHolder(moniker) {\n  let placeHolder = document.createComment(' Shady DOM styles for ' +\n    moniker + ' ');\n  let after = lastHeadApplyNode ?\n    lastHeadApplyNode['nextSibling'] : null;\n  let scope = document.head;\n  scope.insertBefore(placeHolder, after || scope.firstChild);\n  lastHeadApplyNode = placeHolder;\n  return placeHolder;\n}\n\n/**\n * @param {HTMLStyleElement} style\n * @param {?Node} target\n * @param {?Node} contextNode\n */\nexport function applyStyle(style, target, contextNode) {\n  target = target || document.head;\n  let after = (contextNode && contextNode.nextSibling) ||\n    target.firstChild;\n  target.insertBefore(style, after);\n  if (!lastHeadApplyNode) {\n    lastHeadApplyNode = style;\n  } else {\n    // only update lastHeadApplyNode if the new style is inserted after the old lastHeadApplyNode\n    let position = style.compareDocumentPosition(lastHeadApplyNode);\n    if (position === Node.DOCUMENT_POSITION_PRECEDING) {\n      lastHeadApplyNode = style;\n    }\n  }\n}\n\n/**\n * @param {string} buildType\n * @return {boolean}\n */\nexport function isTargetedBuild(buildType) {\n  return nativeShadow ? buildType === 'shadow' : buildType === 'shady';\n}\n\n/**\n * Walk from text[start] matching parens and\n * returns position of the outer end paren\n * @param {string} text\n * @param {number} start\n * @return {number}\n */\nexport function findMatchingParen(text, start) {\n  let level = 0;\n  for (let i=start, l=text.length; i < l; i++) {\n    if (text[i] === '(') {\n      level++;\n    } else if (text[i] === ')') {\n      if (--level === 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\n/**\n * @param {string} str\n * @param {function(string, string, string, string)} callback\n */\nexport function processVariableAndFallback(str, callback) {\n  // find 'var('\n  let start = str.indexOf('var(');\n  if (start === -1) {\n    // no var?, everything is prefix\n    return callback(str, '', '', '');\n  }\n  //${prefix}var(${inner})${suffix}\n  let end = findMatchingParen(str, start + 3);\n  let inner = str.substring(start + 4, end);\n  let prefix = str.substring(0, start);\n  // suffix may have other variables\n  let suffix = processVariableAndFallback(str.substring(end + 1), callback);\n  let comma = inner.indexOf(',');\n  // value and fallback args should be trimmed to match in property lookup\n  if (comma === -1) {\n    // variable, no fallback\n    return callback(prefix, inner.trim(), '', suffix);\n  }\n  // var(${value},${fallback})\n  let value = inner.substring(0, comma).trim();\n  let fallback = inner.substring(comma + 1).trim();\n  return callback(prefix, value, fallback, suffix);\n}\n\n/**\n * @param {Element} element\n * @param {string} value\n */\nexport function setElementClassRaw(element, value) {\n  // use native setAttribute provided by ShadyDOM when setAttribute is patched\n  if (nativeShadow) {\n    element.setAttribute('class', value);\n  } else {\n    window['ShadyDOM']['nativeMethods']['setAttribute'].call(element, 'class', value);\n  }\n}\n\n/**\n * @type {function(*):*}\n */\nexport const wrap = window['ShadyDOM'] && window['ShadyDOM']['wrap'] || ((node) => node);\n\n/**\n * @param {Element | {is: string, extends: string}} element\n * @return {{is: string, typeExtension: string}}\n */\nexport function getIsExtends(element) {\n  let localName = element['localName'];\n  let is = '', typeExtension = '';\n  /*\n  NOTE: technically, this can be wrong for certain svg elements\n  with `-` in the name like `<font-face>`\n  */\n  if (localName) {\n    if (localName.indexOf('-') > -1) {\n      is = localName;\n    } else {\n      typeExtension = localName;\n      is = (element.getAttribute && element.getAttribute('is')) || '';\n    }\n  } else {\n    is = /** @type {?} */(element).is;\n    typeExtension = /** @type {?} */(element).extends;\n  }\n  return {is, typeExtension};\n}\n\n/**\n * @param {Element|DocumentFragment} element\n * @return {string}\n */\nexport function gatherStyleText(element) {\n  /** @type {!Array<string>} */\n  const styleTextParts = [];\n  const styles = /** @type {!NodeList<!HTMLStyleElement>} */(element.querySelectorAll('style'));\n  for (let i = 0; i < styles.length; i++) {\n    const style = styles[i];\n    if (isUnscopedStyle(style)) {\n      if (!nativeShadow) {\n        processUnscopedStyle(style);\n        style.parentNode.removeChild(style);\n      }\n    } else {\n      styleTextParts.push(style.textContent);\n      style.parentNode.removeChild(style);\n    }\n  }\n  return styleTextParts.join('').trim();\n}\n\n/**\n * Split a selector separated by commas into an array in a smart way\n * @param {string} selector\n * @return {!Array<string>}\n */\nexport function splitSelectorList(selector) {\n  const parts = [];\n  let part = '';\n  for (let i = 0; i >= 0 && i < selector.length; i++) {\n    // A selector with parentheses will be one complete part\n    if (selector[i] === '(') {\n      // find the matching paren\n      const end = findMatchingParen(selector, i);\n      // push the paren block into the part\n      part += selector.slice(i, end + 1);\n      // move the index to after the paren block\n      i = end;\n    } else if (selector[i] === ',') {\n      parts.push(part);\n      part = '';\n    } else {\n      part += selector[i];\n    }\n  }\n  // catch any pieces after the last comma\n  if (part) {\n    parts.push(part);\n  }\n  return parts;\n}\n\nconst CSS_BUILD_ATTR = 'css-build';\n\n/**\n * Return the polymer-css-build \"build type\" applied to this element\n *\n * @param {!HTMLElement} element\n * @return {string} Can be \"\", \"shady\", or \"shadow\"\n */\nexport function getCssBuild(element) {\n  if (cssBuild !== undefined) {\n    return /** @type {string} */(cssBuild);\n  }\n  if (element.__cssBuild === undefined) {\n    // try attribute first, as it is the common case\n    const attrValue = element.getAttribute(CSS_BUILD_ATTR);\n    if (attrValue) {\n      element.__cssBuild = attrValue;\n    } else {\n      const buildComment = getBuildComment(element);\n      if (buildComment !== '') {\n        // remove build comment so it is not needlessly copied into every element instance\n        removeBuildComment(element);\n      }\n      element.__cssBuild = buildComment;\n    }\n  }\n  return element.__cssBuild || '';\n}\n\n/**\n * Check if the given element, either a <template> or <style>, has been processed\n * by polymer-css-build.\n *\n * If so, then we can make a number of optimizations:\n * - polymer-css-build will decompose mixins into individual CSS Custom Properties,\n * so the ApplyShim can be skipped entirely.\n * - Under native ShadowDOM, the style text can just be copied into each instance\n * without modification\n * - If the build is \"shady\" and ShadyDOM is in use, the styling does not need\n * scoping beyond the shimming of CSS Custom Properties\n *\n * @param {!HTMLElement} element\n * @return {boolean}\n */\nexport function elementHasBuiltCss(element) {\n  return getCssBuild(element) !== '';\n}\n\n/**\n * For templates made with tagged template literals, polymer-css-build will\n * insert a comment of the form `<!--css-build:shadow-->`\n *\n * @param {!HTMLElement} element\n * @return {string}\n */\nexport function getBuildComment(element) {\n  const buildComment = element.localName === 'template' ?\n      /** @type {!HTMLTemplateElement} */ (element).content.firstChild :\n      element.firstChild;\n  if (buildComment instanceof Comment) {\n    const commentParts = buildComment.textContent.trim().split(':');\n    if (commentParts[0] === CSS_BUILD_ATTR) {\n      return commentParts[1];\n    }\n  }\n  return '';\n}\n\n/**\n * Check if the css build status is optimal, and do no unneeded work.\n *\n * @param {string=} cssBuild CSS build status\n * @return {boolean} css build is optimal or not\n */\nexport function isOptimalCssBuild(cssBuild = '') {\n  // CSS custom property shim always requires work\n  if (cssBuild === '' || !nativeCssVariables) {\n    return false;\n  }\n  return nativeShadow ? cssBuild === 'shadow' : cssBuild === 'shady';\n}\n\n/**\n * @param {!HTMLElement} element\n */\nfunction removeBuildComment(element) {\n  const buildComment = element.localName === 'template' ?\n      /** @type {!HTMLTemplateElement} */ (element).content.firstChild :\n      element.firstChild;\n  buildComment.parentNode.removeChild(buildComment);\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\nimport * as StyleUtil from './style-util.js';\nimport {nativeShadow} from './style-settings.js';\n\n/* Transforms ShadowDOM styling into ShadyDOM styling\n\n* scoping:\n\n  * elements in scope get scoping selector class=\"x-foo-scope\"\n  * selectors re-written as follows:\n\n    div button -> div.x-foo-scope button.x-foo-scope\n\n* :host -> scopeName\n\n* :host(...) -> scopeName...\n\n* ::slotted(...) -> scopeName > ...\n\n* ...:dir(ltr|rtl) -> [dir=\"ltr|rtl\"] ..., ...[dir=\"ltr|rtl\"]\n\n* :host(:dir[rtl]) -> scopeName:dir(rtl) -> [dir=\"rtl\"] scopeName, scopeName[dir=\"rtl\"]\n\n*/\nconst SCOPE_NAME = 'style-scope';\n\nclass StyleTransformer {\n  get SCOPE_NAME() {\n    return SCOPE_NAME;\n  }\n  /**\n   * Given a node and scope name, add a scoping class to each node\n   * in the tree. This facilitates transforming css into scoped rules.\n   * @param {!Node} node\n   * @param {string} scope\n   * @param {boolean=} shouldRemoveScope\n   * @deprecated\n   */\n  dom(node, scope, shouldRemoveScope) {\n    const fn = (node) => {\n      this.element(node, scope || '', shouldRemoveScope);\n    };\n    this._transformDom(node, fn);\n  }\n\n  /**\n   * Given a node and scope name, add a scoping class to each node in the tree.\n   * @param {!Node} node\n   * @param {string} scope\n   */\n  domAddScope(node, scope) {\n    const fn = (node) => {\n      this.element(node, scope || '');\n    };\n    this._transformDom(node, fn);\n  }\n\n  /**\n   * @param {!Node} startNode\n   * @param {!function(!Node)} transformer\n   */\n  _transformDom(startNode, transformer) {\n    if (startNode.nodeType === Node.ELEMENT_NODE) {\n      transformer(startNode)\n    }\n    let c$;\n    if (startNode.localName === 'template') {\n      const template = /** @type {!HTMLTemplateElement} */ (startNode);\n      // In case the template is in svg context, fall back to the node\n      // since it won't be an HTMLTemplateElement with a .content property\n      c$ = (template.content || template._content || template).childNodes;\n    } else {\n      c$ = /** @type {!ParentNode} */ (startNode).children ||\n          startNode.childNodes;\n    }\n    if (c$) {\n      for (let i = 0; i < c$.length; i++) {\n        this._transformDom(c$[i], transformer);\n      }\n    }\n  }\n\n  /**\n   * @param {?} element\n   * @param {?} scope\n   * @param {?=} shouldRemoveScope\n   */\n  element(element, scope, shouldRemoveScope) {\n    // note: if using classes, we add both the general 'style-scope' class\n    // as well as the specific scope. This enables easy filtering of all\n    // `style-scope` elements\n    if (scope) {\n      // note: svg on IE does not have classList so fallback to class\n      if (element.classList) {\n        if (shouldRemoveScope) {\n          element.classList.remove(SCOPE_NAME);\n          element.classList.remove(scope);\n        } else {\n          element.classList.add(SCOPE_NAME);\n          element.classList.add(scope);\n        }\n      } else if (element.getAttribute) {\n        let c = element.getAttribute(CLASS);\n        if (shouldRemoveScope) {\n          if (c) {\n            let newValue = c.replace(SCOPE_NAME, '').replace(scope, '');\n            StyleUtil.setElementClassRaw(element, newValue);\n          }\n        } else {\n          let newValue = (c ? c + ' ' : '') + SCOPE_NAME + ' ' + scope;\n          StyleUtil.setElementClassRaw(element, newValue);\n        }\n      }\n    }\n  }\n\n  /**\n   * Given a node, replace the scoping class to each subnode in the tree.\n   * @param {!Node} node\n   * @param {string} oldScope\n   * @param {string} newScope\n   */\n  domReplaceScope(node, oldScope, newScope) {\n    const fn = (node) => {\n      this.element(node, oldScope, true);\n      this.element(node, newScope);\n    };\n    this._transformDom(node, fn);\n  }\n  /**\n   * Given a node, remove the scoping class to each subnode in the tree.\n   * @param {!Node} node\n   * @param {string} oldScope\n   */\n  domRemoveScope(node, oldScope) {\n    const fn = (node) => {\n      this.element(node, oldScope || '', true);\n    };\n    this._transformDom(node, fn);\n  }\n\n  /**\n   * @param {?} element\n   * @param {?} styleRules\n   * @param {?=} callback\n   * @param {string=} cssBuild\n   * @param {string=} cssText\n   * @return {string}\n   */\n  elementStyles(element, styleRules, callback, cssBuild = '', cssText = '') {\n    // no need to shim selectors if settings.useNativeShadow, also\n    // a shady css build will already have transformed selectors\n    // NOTE: This method may be called as part of static or property shimming.\n    // When there is a targeted build it will not be called for static shimming,\n    // but when the property shim is used it is called and should opt out of\n    // static shimming work when a proper build exists.\n    if (cssText === '') {\n      if (nativeShadow || cssBuild === 'shady') {\n        cssText = StyleUtil.toCssText(styleRules, callback);\n      } else {\n        let {is, typeExtension} = StyleUtil.getIsExtends(element);\n        cssText = this.css(styleRules, is, typeExtension, callback) + '\\n\\n';\n      }\n    }\n    return cssText.trim();\n  }\n\n  // Given a string of cssText and a scoping string (scope), returns\n  // a string of scoped css where each selector is transformed to include\n  // a class created from the scope. ShadowDOM selectors are also transformed\n  // (e.g. :host) to use the scoping selector.\n  css(rules, scope, ext, callback) {\n    let hostScope = this._calcHostScope(scope, ext);\n    scope = this._calcElementScope(scope);\n    let self = this;\n    return StyleUtil.toCssText(rules, function(/** StyleNode */rule) {\n      if (!rule.isScoped) {\n        self.rule(rule, scope, hostScope);\n        rule.isScoped = true;\n      }\n      if (callback) {\n        callback(rule, scope, hostScope);\n      }\n    });\n  }\n\n  _calcElementScope(scope) {\n    if (scope) {\n      return CSS_CLASS_PREFIX + scope;\n    } else {\n      return '';\n    }\n  }\n\n  _calcHostScope(scope, ext) {\n    return ext ? `[is=${scope}]` : scope;\n  }\n\n  rule(rule, scope, hostScope) {\n    this._transformRule(rule, this._transformComplexSelector,\n      scope, hostScope);\n  }\n\n  /**\n   * transforms a css rule to a scoped rule.\n   *\n   * @param {StyleNode} rule\n   * @param {Function} transformer\n   * @param {string=} scope\n   * @param {string=} hostScope\n   */\n  _transformRule(rule, transformer, scope, hostScope) {\n    // NOTE: save transformedSelector for subsequent matching of elements\n    // against selectors (e.g. when calculating style properties)\n    rule['selector'] = rule.transformedSelector =\n      this._transformRuleCss(rule, transformer, scope, hostScope);\n  }\n\n  /**\n   * @param {StyleNode} rule\n   * @param {Function} transformer\n   * @param {string=} scope\n   * @param {string=} hostScope\n   */\n  _transformRuleCss(rule, transformer, scope, hostScope) {\n    let p$ = StyleUtil.splitSelectorList(rule['selector']);\n    // we want to skip transformation of rules that appear in keyframes,\n    // because they are keyframe selectors, not element selectors.\n    if (!StyleUtil.isKeyframesSelector(rule)) {\n      for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\n        p$[i] = transformer.call(this, p, scope, hostScope);\n      }\n    }\n    return p$.filter((part) => Boolean(part)).join(COMPLEX_SELECTOR_SEP);\n  }\n\n  /**\n   * @param {string} selector\n   * @return {string}\n   */\n  _twiddleNthPlus(selector) {\n    return selector.replace(NTH, (m, type, inside) => {\n      if (inside.indexOf('+') > -1) {\n        inside = inside.replace(/\\+/g, '___');\n      } else if (inside.indexOf('___') > -1) {\n        inside = inside.replace(/___/g, '+');\n      }\n      return `:${type}(${inside})`;\n    });\n  }\n\n  /**\n   * Preserve `:matches()` selectors by replacing them with MATCHES_REPLACMENT\n   * and returning an array of `:matches()` selectors.\n   * Use `_replacesMatchesPseudo` to replace the `:matches()` parts\n   *\n   * @param {string} selector\n   * @return {{selector: string, matches: !Array<string>}}\n   */\n  _preserveMatchesPseudo(selector) {\n    /** @type {!Array<string>} */\n    const matches = [];\n    let match;\n    while ((match = selector.match(MATCHES))) {\n      const start = match.index;\n      const end = StyleUtil.findMatchingParen(selector, start);\n      if (end === -1) {\n        throw new Error(`${match.input} selector missing ')'`)\n      }\n      const part = selector.slice(start, end + 1);\n      selector = selector.replace(part, MATCHES_REPLACEMENT);\n      matches.push(part);\n    }\n    return {selector, matches};\n  }\n\n  /**\n   * Replace MATCHES_REPLACMENT character with the given set of `:matches()`\n   * selectors.\n   *\n   * @param {string} selector\n   * @param {!Array<string>} matches\n   * @return {string}\n   */\n  _replaceMatchesPseudo(selector, matches) {\n    const parts = selector.split(MATCHES_REPLACEMENT);\n    return matches.reduce((acc, cur, idx) => acc + cur + parts[idx + 1], parts[0]);\n  }\n\n/**\n * @param {string} selector\n * @param {string} scope\n * @param {string=} hostScope\n */\n  _transformComplexSelector(selector, scope, hostScope) {\n    let stop = false;\n    selector = selector.trim();\n    // Remove spaces inside of selectors like `:nth-of-type` because it confuses SIMPLE_SELECTOR_SEP\n    let isNth = NTH.test(selector);\n    if (isNth) {\n      selector = selector.replace(NTH, (m, type, inner) => `:${type}(${inner.replace(/\\s/g, '')})`)\n      selector = this._twiddleNthPlus(selector);\n    }\n    // Preserve selectors like `:-webkit-any` so that SIMPLE_SELECTOR_SEP does\n    // not get confused by spaces inside the pseudo selector\n    const isMatches = MATCHES.test(selector);\n    /** @type {!Array<string>} */\n    let matches;\n    if (isMatches) {\n      ({selector, matches} = this._preserveMatchesPseudo(selector));\n    }\n    selector = selector.replace(SLOTTED_START, `${HOST} $1`);\n    selector = selector.replace(SIMPLE_SELECTOR_SEP, (m, c, s) => {\n      if (!stop) {\n        let info = this._transformCompoundSelector(s, c, scope, hostScope);\n        stop = stop || info.stop;\n        c = info.combinator;\n        s = info.value;\n      }\n      return c + s;\n    });\n    // replace `:matches()` selectors\n    if (isMatches) {\n      selector = this._replaceMatchesPseudo(selector, matches);\n    }\n    if (isNth) {\n      selector = this._twiddleNthPlus(selector);\n    }\n    selector = selector.replace(DIR_PAREN, (m, before, dir, after) =>\n      `[dir=\"${dir}\"] ${before}${after}, ${before}[dir=\"${dir}\"]${after}`);\n    return selector;\n  }\n\n  _transformCompoundSelector(selector, combinator, scope, hostScope) {\n    // replace :host with host scoping class\n    let slottedIndex = selector.indexOf(SLOTTED);\n    if (selector.indexOf(HOST) >= 0) {\n      selector = this._transformHostSelector(selector, hostScope);\n    // replace other selectors with scoping class\n    } else if (slottedIndex !== 0) {\n      selector = scope ? this._transformSimpleSelector(selector, scope) :\n        selector;\n    }\n    // mark ::slotted() scope jump to replace with descendant selector + arg\n    // also ignore left-side combinator\n    let slotted = false;\n    if (slottedIndex >= 0) {\n      combinator = '';\n      slotted = true;\n    }\n    // process scope jumping selectors up to the scope jump and then stop\n    let stop;\n    if (slotted) {\n      stop = true;\n      if (slotted) {\n        // .zonk ::slotted(.foo) -> .zonk.scope > .foo\n        selector = selector.replace(SLOTTED_PAREN, (m, paren) => ` > ${paren}`);\n      }\n    }\n    return {value: selector, combinator, stop};\n  }\n\n  _transformSimpleSelector(selector, scope) {\n    const attributes = selector.split(/(\\[.+?\\])/);\n\n    const output = [];\n    for (let i = 0; i < attributes.length; i++) {\n      // Do not attempt to transform any attribute selector content\n      if ((i % 2) === 1) {\n        output.push(attributes[i]);\n      } else {\n        const part = attributes[i];\n\n        if (!(part === '' && i === attributes.length - 1)) {\n          let p$ = part.split(PSEUDO_PREFIX);\n          p$[0] += scope;\n          output.push(p$.join(PSEUDO_PREFIX));\n        }\n      }\n    }\n\n    return output.join('');\n  }\n\n  // :host(...) -> scopeName...\n  _transformHostSelector(selector, hostScope) {\n    let m = selector.match(HOST_PAREN);\n    let paren = m && m[2].trim() || '';\n    if (paren) {\n      if (!paren[0].match(SIMPLE_SELECTOR_PREFIX)) {\n        // paren starts with a type selector\n        let typeSelector = paren.split(SIMPLE_SELECTOR_PREFIX)[0];\n        // if the type selector is our hostScope then avoid pre-pending it\n        if (typeSelector === hostScope) {\n          return paren;\n        // otherwise, this selector should not match in this scope so\n        // output a bogus selector.\n        } else {\n          return SELECTOR_NO_MATCH;\n        }\n      } else {\n        // make sure to do a replace here to catch selectors like:\n        // `:host(.foo)::before`\n        return selector.replace(HOST_PAREN, function(m, host, paren) {\n          return hostScope + paren;\n        });\n      }\n    // if no paren, do a straight :host replacement.\n    // TODO(sorvell): this should not strictly be necessary but\n    // it's needed to maintain support for `:host[foo]` type selectors\n    // which have been improperly used under Shady DOM. This should be\n    // deprecated.\n    } else {\n      return selector.replace(HOST, hostScope);\n    }\n  }\n\n  /**\n   * @param {StyleNode} rule\n   */\n  documentRule(rule) {\n    // reset selector in case this is redone.\n    rule['selector'] = rule['parsedSelector'];\n    this.normalizeRootSelector(rule);\n    this._transformRule(rule, this._transformDocumentSelector);\n  }\n\n  /**\n   * @param {StyleNode} rule\n   */\n  normalizeRootSelector(rule) {\n    if (rule['selector'] === ROOT) {\n      rule['selector'] = 'html';\n    }\n  }\n\n/**\n * @param {string} selector\n */\n  _transformDocumentSelector(selector) {\n    if (selector.match(HOST)) {\n      // remove ':host' type selectors in document rules\n      return '';\n    } else if (selector.match(SLOTTED)) {\n      return this._transformComplexSelector(selector, SCOPE_DOC_SELECTOR)\n    } else {\n      return this._transformSimpleSelector(selector.trim(), SCOPE_DOC_SELECTOR);\n    }\n  }\n}\n\nconst NTH = /:(nth[-\\w]+)\\(([^)]+)\\)/;\nconst SCOPE_DOC_SELECTOR = `:not(.${SCOPE_NAME})`;\nconst COMPLEX_SELECTOR_SEP = ',';\nconst SIMPLE_SELECTOR_SEP = /(^|[\\s>+~]+)((?:\\[.+?\\]|[^\\s>+~=[])+)/g;\nconst SIMPLE_SELECTOR_PREFIX = /[[.:#*]/;\nconst HOST = ':host';\nconst ROOT = ':root';\nconst SLOTTED = '::slotted';\nconst SLOTTED_START = new RegExp(`^(${SLOTTED})`);\n// NOTE: this supports 1 nested () pair for things like\n// :host(:not([selected]), more general support requires\n// parsing which seems like overkill\nconst HOST_PAREN = /(:host)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\n// similar to HOST_PAREN\nconst SLOTTED_PAREN = /(?:::slotted)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\nconst DIR_PAREN = /(.*):dir\\((?:(ltr|rtl))\\)(.*)/;\nconst CSS_CLASS_PREFIX = '.';\nconst PSEUDO_PREFIX = ':';\nconst CLASS = 'class';\nconst SELECTOR_NO_MATCH = 'should_not_match';\nconst MATCHES = /:(?:matches|any|-(?:webkit|moz)-any)/;\nconst MATCHES_REPLACEMENT = '\\u{e000}';\n\nexport default new StyleTransformer()\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {parse, StyleNode} from './css-parse.js';\nimport {nativeShadow, nativeCssVariables, disableRuntime} from './style-settings.js';\nimport StyleTransformer from './style-transformer.js';\nimport * as StyleUtil from './style-util.js';\nimport StyleProperties from './style-properties.js';\nimport {ensureStylePlaceholder, getStylePlaceholder} from './style-placeholder.js';\nimport StyleInfo from './style-info.js';\nimport StyleCache from './style-cache.js';\nimport {flush as watcherFlush, getOwnerScope, getCurrentScope} from './document-watcher.js';\nimport templateMap from './template-map.js';\nimport * as ApplyShimUtils from './apply-shim-utils.js';\nimport {updateNativeProperties, detectMixin} from './common-utils.js';\nimport {CustomStyleInterfaceInterface} from './custom-style-interface.js'; // eslint-disable-line no-unused-vars\n\n/** @type {!Object<string, string>} */\nconst adoptedCssTextMap = {};\n\n/**\n * @const {StyleCache}\n */\nconst styleCache = new StyleCache();\n\nexport default class ScopingShim {\n  constructor() {\n    this._scopeCounter = {};\n    this._documentOwner = /** @type {!HTMLElement} */(document.documentElement);\n    let ast = new StyleNode();\n    ast['rules'] = [];\n    this._documentOwnerStyleInfo = StyleInfo.set(this._documentOwner, new StyleInfo(ast));\n    this._elementsHaveApplied = false;\n    /** @type {?Object} */\n    this._applyShim = null;\n    /** @type {?CustomStyleInterfaceInterface} */\n    this._customStyleInterface = null;\n  }\n  flush() {\n    watcherFlush();\n  }\n  _generateScopeSelector(name) {\n    let id = this._scopeCounter[name] = (this._scopeCounter[name] || 0) + 1;\n    return `${name}-${id}`;\n  }\n  getStyleAst(style) {\n    return StyleUtil.rulesForStyle(style);\n  }\n  styleAstToString(ast) {\n    return StyleUtil.toCssText(ast);\n  }\n  _gatherStyles(template) {\n    return StyleUtil.gatherStyleText(template.content);\n  }\n  /**\n   * Prepare the styling and template for the given element type\n   *\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} typeExtension\n   */\n  prepareTemplate(template, elementName, typeExtension) {\n    this.prepareTemplateDom(template, elementName);\n    this.prepareTemplateStyles(template, elementName, typeExtension);\n  }\n  /**\n   * Prepare styling for the given element type\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} typeExtension\n   */\n  prepareTemplateStyles(template, elementName, typeExtension) {\n    if (template._prepared || disableRuntime) {\n      return;\n    }\n    // style placeholders are only used when ShadyDOM is active\n    if (!nativeShadow) {\n      ensureStylePlaceholder(elementName);\n    }\n    template._prepared = true;\n    template.name = elementName;\n    template.extends = typeExtension;\n    templateMap[elementName] = template;\n    let cssBuild = StyleUtil.getCssBuild(template);\n    const optimalBuild = StyleUtil.isOptimalCssBuild(cssBuild);\n    let info = {\n      is: elementName,\n      extends: typeExtension,\n    };\n    let cssText = this._gatherStyles(template) + (adoptedCssTextMap[elementName] || '');\n    // check if the styling has mixin definitions or uses\n    this._ensure();\n    if (!optimalBuild) {\n      let hasMixins = !cssBuild && detectMixin(cssText);\n      let ast = parse(cssText);\n      // only run the applyshim transforms if there is a mixin involved\n      if (hasMixins && nativeCssVariables && this._applyShim) {\n        this._applyShim['transformRules'](ast, elementName);\n      }\n      template['_styleAst'] = ast;\n    }\n    let ownPropertyNames = [];\n    if (!nativeCssVariables) {\n      ownPropertyNames = StyleProperties.decorateStyles(template['_styleAst']);\n    }\n    if (!ownPropertyNames.length || nativeCssVariables) {\n      let root = nativeShadow ? template.content : null;\n      let placeholder = getStylePlaceholder(elementName);\n      let style = this._generateStaticStyle(info, template['_styleAst'], root, placeholder, cssBuild, optimalBuild ? cssText : '');\n      template._style = style;\n    }\n    template._ownPropertyNames = ownPropertyNames;\n  }\n\n  /**\n   * @param {!Array<string>} cssTextArray\n   * @param {string} elementName\n   */\n  prepareAdoptedCssText(cssTextArray, elementName) {\n    adoptedCssTextMap[elementName] = cssTextArray.join(' ');\n  }\n  /**\n   * Prepare template for the given element type\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   */\n  prepareTemplateDom(template, elementName) {\n    if (disableRuntime) {\n      return;\n    }\n    const cssBuild = StyleUtil.getCssBuild(template);\n    if (!nativeShadow && cssBuild !== 'shady' && !template._domPrepared) {\n      template._domPrepared = true;\n      StyleTransformer.domAddScope(template.content, elementName);\n    }\n  }\n  /**\n   * @param {!{is: string, extends: (string|undefined)}} info\n   * @param {!StyleNode} rules\n   * @param {DocumentFragment} shadowroot\n   * @param {Node} placeholder\n   * @param {string} cssBuild\n   * @param {string=} cssText\n   * @return {?HTMLStyleElement}\n   */\n  _generateStaticStyle(info, rules, shadowroot, placeholder, cssBuild, cssText) {\n    cssText = StyleTransformer.elementStyles(info, rules, null, cssBuild, cssText);\n    if (cssText.length) {\n      return StyleUtil.applyCss(cssText, info.is, shadowroot, placeholder);\n    }\n    return null;\n  }\n  _prepareHost(host) {\n    const {is, typeExtension} = StyleUtil.getIsExtends(host);\n    const placeholder = getStylePlaceholder(is);\n    const template = templateMap[is];\n    if (!template) {\n      return;\n    }\n    const ast = template['_styleAst'];\n    const ownStylePropertyNames = template._ownPropertyNames;\n    const cssBuild = StyleUtil.getCssBuild(template);\n    const styleInfo = new StyleInfo(\n      ast,\n      placeholder,\n      ownStylePropertyNames,\n      is,\n      typeExtension,\n      cssBuild\n    );\n    StyleInfo.set(host, styleInfo);\n    return styleInfo;\n  }\n  _ensureApplyShim() {\n    if (this._applyShim) {\n      return;\n    } else if (window.ShadyCSS && window.ShadyCSS.ApplyShim) {\n      this._applyShim = /** @type {!Object} */ (window.ShadyCSS.ApplyShim);\n      this._applyShim['invalidCallback'] = ApplyShimUtils.invalidate;\n    }\n  }\n  _ensureCustomStyleInterface() {\n    if (this._customStyleInterface) {\n      return;\n    } else if (window.ShadyCSS && window.ShadyCSS.CustomStyleInterface) {\n      this._customStyleInterface = /** @type {!CustomStyleInterfaceInterface} */(window.ShadyCSS.CustomStyleInterface);\n      /** @type {function(!HTMLStyleElement)} */\n      this._customStyleInterface['transformCallback'] = (style) => {this.transformCustomStyleForDocument(style)};\n      this._customStyleInterface['validateCallback'] = () => {\n        requestAnimationFrame(() => {\n          if (this._customStyleInterface['enqueued'] || this._elementsHaveApplied) {\n            this.flushCustomStyles();\n          }\n        })\n      };\n    }\n  }\n  _ensure() {\n    this._ensureApplyShim();\n    this._ensureCustomStyleInterface();\n  }\n  /**\n   * Flush and apply custom styles to document\n   */\n  flushCustomStyles() {\n    if (disableRuntime) {\n      return;\n    }\n    this._ensure();\n    if (!this._customStyleInterface) {\n      return;\n    }\n    let customStyles = this._customStyleInterface['processStyles']();\n    // early return if custom-styles don't need validation\n    if (!this._customStyleInterface['enqueued']) {\n      return;\n    }\n    // bail if custom styles are built optimally\n    if (StyleUtil.isOptimalCssBuild(this._documentOwnerStyleInfo.cssBuild)) {\n      return;\n    }\n    if (!nativeCssVariables) {\n      this._updateProperties(this._documentOwner, this._documentOwnerStyleInfo);\n      this._applyCustomStyles(customStyles);\n      if (this._elementsHaveApplied) {\n        // if custom elements have upgraded and there are no native css variables, we must recalculate the whole tree\n        this.styleDocument();\n      }\n    } else if (!this._documentOwnerStyleInfo.cssBuild) {\n      this._revalidateCustomStyleApplyShim(customStyles);\n    }\n    this._customStyleInterface['enqueued'] = false;\n  }\n  /**\n   * Apply styles for the given element\n   *\n   * @param {!HTMLElement} host\n   * @param {Object=} overrideProps\n   */\n  styleElement(host, overrideProps) {\n    if (disableRuntime) {\n      if (overrideProps) {\n        if (!StyleInfo.get(host)) {\n          StyleInfo.set(host, new StyleInfo(null));\n        }\n        const styleInfo = /** @type {!StyleInfo} */(StyleInfo.get(host));\n        this._mixOverrideStyleProps(styleInfo, overrideProps);\n        this.styleElementNativeVariables(host, styleInfo);\n      }\n      return;\n    }\n    const styleInfo = StyleInfo.get(host) || this._prepareHost(host);\n    // if there is no style info at this point, bail\n    if (!styleInfo) {\n      return;\n    }\n    // Only trip the `elementsHaveApplied` flag if a node other that the root document has `applyStyle` called\n    if (!this._isRootOwner(host)) {\n      this._elementsHaveApplied = true;\n    }\n    if (overrideProps) {\n      this._mixOverrideStyleProps(styleInfo, overrideProps);\n    }\n    if (!nativeCssVariables) {\n      this.styleElementShimVariables(host, styleInfo);\n    } else {\n      this.styleElementNativeVariables(host, styleInfo);\n    }\n  }\n  /**\n   * @param {!StyleInfo} styleInfo\n   * @param {Object} overrideProps\n   */\n  _mixOverrideStyleProps(styleInfo, overrideProps) {\n    styleInfo.overrideStyleProperties =\n      styleInfo.overrideStyleProperties || {};\n    Object.assign(styleInfo.overrideStyleProperties, overrideProps);\n  }\n  /**\n   * @param {!HTMLElement} host\n   * @param {!StyleInfo} styleInfo\n   */\n  styleElementShimVariables(host, styleInfo) {\n    this.flush();\n    this._updateProperties(host, styleInfo);\n    if (styleInfo.ownStylePropertyNames && styleInfo.ownStylePropertyNames.length) {\n      this._applyStyleProperties(host, styleInfo);\n    }\n  }\n  /**\n   * @param {!HTMLElement} host\n   * @param {!StyleInfo} styleInfo\n   */\n  styleElementNativeVariables(host, styleInfo) {\n    const { is } = StyleUtil.getIsExtends(host);\n    if (styleInfo.overrideStyleProperties) {\n      updateNativeProperties(host, styleInfo.overrideStyleProperties);\n    }\n    const template = templateMap[is];\n    // bail early if there is no shadowroot for this element\n    if (!template && !this._isRootOwner(host)) {\n      return;\n    }\n    // bail early if the template was built with polymer-css-build\n    if (template && StyleUtil.elementHasBuiltCss(template)) {\n      return;\n    }\n    if (template && template._style && !ApplyShimUtils.templateIsValid(template)) {\n      // update template\n      if (!ApplyShimUtils.templateIsValidating(template)) {\n        this._ensure();\n        this._applyShim && this._applyShim['transformRules'](template['_styleAst'], is);\n        template._style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n        ApplyShimUtils.startValidatingTemplate(template);\n      }\n      // update instance if native shadowdom\n      if (nativeShadow) {\n        let root = host.shadowRoot;\n        if (root) {\n          let style = root.querySelector('style');\n          if (style) {\n            style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          }\n        }\n      }\n      styleInfo.styleRules = template['_styleAst'];\n    }\n  }\n  _styleOwnerForNode(node) {\n    let root = StyleUtil.wrap(node).getRootNode();\n    let host = root.host;\n    if (host) {\n      if (StyleInfo.get(host) || this._prepareHost(host)) {\n        return host;\n      } else {\n        return this._styleOwnerForNode(host);\n      }\n    }\n    return this._documentOwner;\n  }\n  _isRootOwner(node) {\n    return (node === this._documentOwner);\n  }\n  _applyStyleProperties(host, styleInfo) {\n    let is = StyleUtil.getIsExtends(host).is;\n    let cacheEntry = styleCache.fetch(is, styleInfo.styleProperties, styleInfo.ownStylePropertyNames);\n    let cachedScopeSelector = cacheEntry && cacheEntry.scopeSelector;\n    let cachedStyle = cacheEntry ? cacheEntry.styleElement : null;\n    let oldScopeSelector = styleInfo.scopeSelector;\n    // only generate new scope if cached style is not found\n    styleInfo.scopeSelector = cachedScopeSelector || this._generateScopeSelector(is);\n    let style = StyleProperties.applyElementStyle(host, styleInfo.styleProperties, styleInfo.scopeSelector, cachedStyle);\n    if (!nativeShadow) {\n      StyleProperties.applyElementScopeSelector(host, styleInfo.scopeSelector, oldScopeSelector);\n    }\n    if (!cacheEntry) {\n      styleCache.store(is, styleInfo.styleProperties, style, styleInfo.scopeSelector);\n    }\n    return style;\n  }\n  _updateProperties(host, styleInfo) {\n    let owner = this._styleOwnerForNode(host);\n    let ownerStyleInfo = StyleInfo.get(owner);\n    let ownerProperties = ownerStyleInfo.styleProperties;\n    // style owner has not updated properties yet\n    // go up the chain and force property update,\n    // except if the owner is the document\n    if (owner !== this._documentOwner && !ownerProperties) {\n      this._updateProperties(owner, ownerStyleInfo);\n      ownerProperties = ownerStyleInfo.styleProperties;\n    }\n    let props = Object.create(ownerProperties || null);\n    let hostAndRootProps = StyleProperties.hostAndRootPropertiesForScope(host, styleInfo.styleRules, styleInfo.cssBuild);\n    let propertyData = StyleProperties.propertyDataFromStyles(ownerStyleInfo.styleRules, host);\n    let propertiesMatchingHost = propertyData.properties\n    Object.assign(\n      props,\n      hostAndRootProps.hostProps,\n      propertiesMatchingHost,\n      hostAndRootProps.rootProps\n    );\n    this._mixinOverrideStyles(props, styleInfo.overrideStyleProperties);\n    StyleProperties.reify(props);\n    styleInfo.styleProperties = props;\n  }\n  _mixinOverrideStyles(props, overrides) {\n    for (let p in overrides) {\n      let v = overrides[p];\n      // skip override props if they are not truthy or 0\n      // in order to fall back to inherited values\n      if (v || v === 0) {\n        props[p] = v;\n      }\n    }\n  }\n  /**\n   * Update styles of the whole document\n   *\n   * @param {Object=} properties\n   */\n  styleDocument(properties) {\n    this.styleSubtree(this._documentOwner, properties);\n  }\n  /**\n   * Update styles of a subtree\n   *\n   * @param {!HTMLElement} host\n   * @param {Object=} properties\n   */\n  styleSubtree(host, properties) {\n    const wrappedHost = StyleUtil.wrap(host);\n    let root = wrappedHost.shadowRoot;\n    if (root || this._isRootOwner(host)) {\n      this.styleElement(host, properties);\n    }\n    // process the shadowdom children of `host`\n    let shadowChildren =\n        root && (/** @type {!ParentNode} */ (root).children || root.childNodes);\n    if (shadowChildren) {\n      for (let i = 0; i < shadowChildren.length; i++) {\n        let c = /** @type {!HTMLElement} */(shadowChildren[i]);\n        this.styleSubtree(c);\n      }\n    } else {\n      // process the lightdom children of `host`\n      let children = wrappedHost.children || wrappedHost.childNodes;\n      if (children) {\n        for (let i = 0; i < children.length; i++) {\n          let c = /** @type {!HTMLElement} */(children[i]);\n          this.styleSubtree(c);\n        }\n      }\n    }\n  }\n  /* Custom Style operations */\n  _revalidateCustomStyleApplyShim(customStyles) {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      let s = this._customStyleInterface['getStyleForCustomStyle'](c);\n      if (s) {\n        this._revalidateApplyShim(s);\n      }\n    }\n  }\n  _applyCustomStyles(customStyles) {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      let s = this._customStyleInterface['getStyleForCustomStyle'](c);\n      if (s) {\n        StyleProperties.applyCustomStyle(s, this._documentOwnerStyleInfo.styleProperties);\n      }\n    }\n  }\n  transformCustomStyleForDocument(style) {\n    const cssBuild = StyleUtil.getCssBuild(style);\n    if (cssBuild !== this._documentOwnerStyleInfo.cssBuild) {\n      this._documentOwnerStyleInfo.cssBuild = cssBuild;\n    }\n    if (StyleUtil.isOptimalCssBuild(cssBuild)) {\n      return;\n    }\n    let ast = StyleUtil.rulesForStyle(style);\n    StyleUtil.forEachRule(ast, (rule) => {\n      if (nativeShadow) {\n        StyleTransformer.normalizeRootSelector(rule);\n      } else {\n        StyleTransformer.documentRule(rule);\n      }\n      if (nativeCssVariables && cssBuild === '') {\n        this._ensure();\n        this._applyShim && this._applyShim['transformRule'](rule);\n      }\n    });\n    if (nativeCssVariables) {\n      style.textContent = StyleUtil.toCssText(ast);\n    } else {\n      this._documentOwnerStyleInfo.styleRules['rules'].push(ast);\n    }\n  }\n  _revalidateApplyShim(style) {\n    if (nativeCssVariables && this._applyShim) {\n      let ast = StyleUtil.rulesForStyle(style);\n      this._ensure();\n      this._applyShim['transformRules'](ast);\n      style.textContent = StyleUtil.toCssText(ast);\n    }\n  }\n  getComputedStyleValue(element, property) {\n    let value;\n    if (!nativeCssVariables) {\n      // element is either a style host, or an ancestor of a style host\n      let styleInfo = StyleInfo.get(element) || StyleInfo.get(this._styleOwnerForNode(element));\n      value = styleInfo.styleProperties[property];\n    }\n    // fall back to the property value from the computed styling\n    value = value || window.getComputedStyle(element).getPropertyValue(property);\n    // trim whitespace that can come after the `:` in css\n    // example: padding: 2px -> \" 2px\"\n    return value ? value.trim() : '';\n  }\n  // given an element and a classString, replaces\n  // the element's class with the provided classString and adds\n  // any necessary ShadyCSS static and property based scoping selectors\n  setElementClass(element, classString) {\n    let root = StyleUtil.wrap(element).getRootNode();\n    let classes = classString ? classString.split(/\\s/) : [];\n    let scopeName = root.host && root.host.localName;\n    // If no scope, try to discover scope name from existing class.\n    // This can occur if, for example, a template stamped element that\n    // has been scoped is manipulated when not in a root.\n    if (!scopeName) {\n      var classAttr = element.getAttribute('class');\n      if (classAttr) {\n        let k$ = classAttr.split(/\\s/);\n        for (let i=0; i < k$.length; i++) {\n          if (k$[i] === StyleTransformer.SCOPE_NAME) {\n            scopeName = k$[i+1];\n            break;\n          }\n        }\n      }\n    }\n    if (scopeName) {\n      classes.push(StyleTransformer.SCOPE_NAME, scopeName);\n    }\n    if (!nativeCssVariables) {\n      let styleInfo = StyleInfo.get(element);\n      if (styleInfo && styleInfo.scopeSelector) {\n        classes.push(StyleProperties.XSCOPE_NAME, styleInfo.scopeSelector);\n      }\n    }\n    StyleUtil.setElementClassRaw(element, classes.join(' '));\n  }\n  _styleInfoForNode(node) {\n    return StyleInfo.get(node);\n  }\n  /**\n   * @param {!Element} node\n   * @param {string} scope\n   */\n  scopeNode(node, scope) {\n    StyleTransformer.element(node, scope);\n  }\n  /**\n   * @param {!Element} node\n   * @param {string} scope\n   */\n  unscopeNode(node, scope) {\n    StyleTransformer.element(node, scope, true);\n  }\n  /**\n   * @param {!Node} node\n   * @return {string}\n   */\n  scopeForNode(node) {\n    return getOwnerScope(node);\n  }\n  /**\n   * @param {!Element} node\n   * @return {string}\n   */\n  currentScopeForNode(node) {\n    return getCurrentScope(node);\n  }\n}\n\n/* exports */\n/* eslint-disable no-self-assign */\nScopingShim.prototype['flush'] = ScopingShim.prototype.flush;\nScopingShim.prototype['prepareTemplate'] = ScopingShim.prototype.prepareTemplate;\nScopingShim.prototype['styleElement'] = ScopingShim.prototype.styleElement;\nScopingShim.prototype['styleDocument'] = ScopingShim.prototype.styleDocument;\nScopingShim.prototype['styleSubtree'] = ScopingShim.prototype.styleSubtree;\nScopingShim.prototype['getComputedStyleValue'] = ScopingShim.prototype.getComputedStyleValue;\nScopingShim.prototype['setElementClass'] = ScopingShim.prototype.setElementClass;\nScopingShim.prototype['_styleInfoForNode'] = ScopingShim.prototype._styleInfoForNode;\nScopingShim.prototype['transformCustomStyleForDocument'] = ScopingShim.prototype.transformCustomStyleForDocument;\nScopingShim.prototype['getStyleAst'] = ScopingShim.prototype.getStyleAst;\nScopingShim.prototype['styleAstToString'] = ScopingShim.prototype.styleAstToString;\nScopingShim.prototype['flushCustomStyles'] = ScopingShim.prototype.flushCustomStyles;\nScopingShim.prototype['scopeNode'] = ScopingShim.prototype.scopeNode;\nScopingShim.prototype['unscopeNode'] = ScopingShim.prototype.unscopeNode;\nScopingShim.prototype['scopeForNode'] = ScopingShim.prototype.scopeForNode;\nScopingShim.prototype['currentScopeForNode'] = ScopingShim.prototype.currentScopeForNode;\nScopingShim.prototype['prepareAdoptedCssText'] = ScopingShim.prototype.prepareAdoptedCssText;\n/* eslint-enable no-self-assign */\nObject.defineProperties(ScopingShim.prototype, {\n  'nativeShadow': {\n    get() {\n      return nativeShadow;\n    }\n  },\n  'nativeCss': {\n    get() {\n      return nativeCssVariables;\n    }\n  }\n});\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow} from './style-settings.js';\nimport StyleTransformer from './style-transformer.js';\nimport {getIsExtends, elementHasBuiltCss, wrap} from './style-util.js';\n\nexport let flush = function() {};\n\n/**\n * @param {!Element} element\n * @return {string}\n */\nfunction getClasses(element) {\n  if (element.classList && element.classList.value) {\n    return element.classList.value;\n  } else {\n    // NOTE: className is patched to remove scoping classes in ShadyDOM\n    // use getAttribute('class') instead, which is unpatched\n    return element.getAttribute('class') || '';\n  }\n}\n\nconst scopeRegExp = new RegExp(`${StyleTransformer.SCOPE_NAME}\\\\s*([^\\\\s]*)`);\n\n/**\n * @param {!Element} element\n * @return {string}\n */\nexport function getCurrentScope(element) {\n  const match = getClasses(element).match(scopeRegExp);\n  if (match) {\n    return match[1];\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {!Node} node\n */\nexport function getOwnerScope(node) {\n  const ownerRoot = wrap(node).getRootNode();\n  if (ownerRoot === node || ownerRoot === node.ownerDocument) {\n    return '';\n  }\n  const host = /** @type {!ShadowRoot} */(ownerRoot).host;\n  if (!host) {\n    // this may actually be a document fragment\n    return '';\n  }\n  return getIsExtends(host).is;\n}\n\n/**\n * @param {!Element} element\n */\nexport function ensureCorrectScope(element) {\n  const currentScope = getCurrentScope(element);\n  const ownerRoot = wrap(element).getRootNode();\n  if (ownerRoot === element) {\n    return;\n  }\n  if (currentScope && ownerRoot === element.ownerDocument) {\n    // node was scoped, but now is in document\n    StyleTransformer.domRemoveScope(element, currentScope);\n  } else if (ownerRoot instanceof ShadowRoot) {\n    const ownerScope = getOwnerScope(element);\n    if (ownerScope !== currentScope) {\n      // node was scoped, but not by its current owner\n      StyleTransformer.domReplaceScope(element, currentScope, ownerScope);\n    }\n  }\n}\n\n/**\n * @param {!HTMLElement|!HTMLDocument} element\n */\nexport function ensureCorrectSubtreeScoping(element) {\n  // find unscoped subtree nodes\n  const unscopedNodes = window['ShadyDOM']['nativeMethods']['querySelectorAll'].call(\n    element, `:not(.${StyleTransformer.SCOPE_NAME})`);\n\n  for (let j = 0; j < unscopedNodes.length; j++) {\n    // it's possible, during large batch inserts, that nodes that aren't\n    // scoped within the current scope were added.\n    // To make sure that any unscoped nodes that were inserted in the current batch are correctly styled,\n    // query all unscoped nodes and force their style-scope to be applied.\n    // This could happen if a sub-element appended an unscoped node in its shadowroot and this function\n    // runs on a parent element of the host of that unscoped node:\n    // parent-element -> element -> unscoped node\n    // Here unscoped node should have the style-scope element, not parent-element.\n    const unscopedNode = unscopedNodes[j];\n    const scopeForPreviouslyUnscopedNode = getOwnerScope(unscopedNode);\n    if (scopeForPreviouslyUnscopedNode) {\n      StyleTransformer.element(unscopedNode, scopeForPreviouslyUnscopedNode);\n    }\n  }\n}\n\n/**\n * @param {HTMLElement} el\n * @return {boolean}\n */\nfunction isElementWithBuiltCss(el) {\n  if (el.localName === 'style' || el.localName === 'template') {\n    return elementHasBuiltCss(el);\n  }\n  return false;\n}\n\n/**\n * @param {Array<MutationRecord|null>|null} mxns\n */\nfunction handler(mxns) {\n  for (let x=0; x < mxns.length; x++) {\n    let mxn = mxns[x];\n    if (mxn.target === document.documentElement ||\n      mxn.target === document.head) {\n      continue;\n    }\n    for (let i=0; i < mxn.addedNodes.length; i++) {\n      let n = mxn.addedNodes[i];\n      if (n.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      n = /** @type {HTMLElement} */(n); // eslint-disable-line no-self-assign\n      let root = n.getRootNode();\n      let currentScope = getCurrentScope(n);\n      // node was scoped, but now is in document\n      // If this element has built css, we must not remove scoping as this node\n      // will be used as a template or style without re - applying scoping as an optimization\n      if (currentScope && root === n.ownerDocument && !isElementWithBuiltCss(n)) {\n        StyleTransformer.domRemoveScope(n, currentScope);\n      } else if (root instanceof ShadowRoot) {\n        const newScope = getOwnerScope(n);\n        // rescope current node and subtree if necessary\n        if (newScope !== currentScope) {\n          StyleTransformer.domReplaceScope(n, currentScope, newScope);\n        }\n        // make sure all the subtree elements are scoped correctly\n        ensureCorrectSubtreeScoping(n);\n      }\n    }\n  }\n}\n\n// if native Shadow DOM is being used, or ShadyDOM handles dynamic scoiping, do not activate the MutationObserver\nif (!nativeShadow && !(window['ShadyDOM'] && window['ShadyDOM']['handlesDynamicScoping'])) {\n  let observer = new MutationObserver(handler);\n  let start = (node) => {\n    observer.observe(node, {childList: true, subtree: true});\n  }\n  let nativeCustomElements = (window['customElements'] &&\n    !window['customElements']['polyfillWrapFlushCallback']);\n  // need to start immediately with native custom elements\n  // TODO(dfreedm): with polyfilled HTMLImports and native custom elements\n  // excessive mutations may be observed; this can be optimized via cooperation\n  // with the HTMLImports polyfill.\n  if (nativeCustomElements) {\n    start(document);\n  } else {\n    let delayedStart = () => {\n      start(document.body);\n    }\n    // use polyfill timing if it's available\n    if (window['HTMLImports']) {\n      window['HTMLImports']['whenReady'](delayedStart);\n    // otherwise push beyond native imports being ready\n    // which requires RAF + readystate interactive.\n    } else {\n      requestAnimationFrame(function() {\n        if (document.readyState === 'loading') {\n          let listener = function() {\n            delayedStart();\n            document.removeEventListener('readystatechange', listener);\n          }\n          document.addEventListener('readystatechange', listener);\n        } else {\n          delayedStart();\n        }\n      });\n    }\n  }\n\n  flush = function() {\n    handler(observer.takeRecords());\n  }\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {removeCustomPropAssignment, StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\nimport {nativeShadow} from './style-settings.js';\nimport StyleTransformer from './style-transformer.js';\nimport * as StyleUtil from './style-util.js';\nimport * as RX from './common-regex.js';\nimport StyleInfo from './style-info.js';\n\n// TODO: dedupe with shady\n/**\n * @param {string} selector\n * @return {boolean}\n * @this {Element}\n */\nconst matchesSelector = function(selector) {\n  const method = this.matches || this.matchesSelector ||\n    this.mozMatchesSelector || this.msMatchesSelector ||\n    this.oMatchesSelector || this.webkitMatchesSelector;\n  return method && method.call(this, selector);\n};\n\nconst IS_IE = navigator.userAgent.match('Trident');\n\nconst XSCOPE_NAME = 'x-scope';\n\nclass StyleProperties {\n  get XSCOPE_NAME() {\n    return XSCOPE_NAME;\n  }\n/**\n * decorates styles with rule info and returns an array of used style property names\n *\n * @param {StyleNode} rules\n * @return {Array<string>}\n */\n  decorateStyles(rules) {\n    let self = this, props = {}, keyframes = [], ruleIndex = 0;\n    StyleUtil.forEachRule(rules, function(rule) {\n      self.decorateRule(rule);\n      // mark in-order position of ast rule in styles block, used for cache key\n      rule.index = ruleIndex++;\n      self.collectPropertiesInCssText(rule.propertyInfo.cssText, props);\n    }, function onKeyframesRule(rule) {\n      keyframes.push(rule);\n    });\n    // Cache all found keyframes rules for later reference:\n    rules._keyframes = keyframes;\n    // return this list of property names *consumes* in these styles.\n    let names = [];\n    for (let i in props) {\n      names.push(i);\n    }\n    return names;\n  }\n\n  // decorate a single rule with property info\n  decorateRule(rule) {\n    if (rule.propertyInfo) {\n      return rule.propertyInfo;\n    }\n    let info = {}, properties = {};\n    let hasProperties = this.collectProperties(rule, properties);\n    if (hasProperties) {\n      info.properties = properties;\n      // TODO(sorvell): workaround parser seeing mixins as additional rules\n      rule['rules'] = null;\n    }\n    info.cssText = this.collectCssText(rule);\n    rule.propertyInfo = info;\n    return info;\n  }\n\n  // collects the custom properties from a rule's cssText\n  collectProperties(rule, properties) {\n    let info = rule.propertyInfo;\n    if (info) {\n      if (info.properties) {\n        Object.assign(properties, info.properties);\n        return true;\n      }\n    } else {\n      let m, rx = RX.VAR_ASSIGN;\n      let cssText = rule['parsedCssText'];\n      let value;\n      let any;\n      while ((m = rx.exec(cssText))) {\n        // note: group 2 is var, 3 is mixin\n        value = (m[2] || m[3]).trim();\n        // value of 'inherit' or 'unset' is equivalent to not setting the property here\n        if (value !== 'inherit' || value !== 'unset') {\n          properties[m[1].trim()] = value;\n        }\n        any = true;\n      }\n      return any;\n    }\n\n  }\n\n  // returns cssText of properties that consume variables/mixins\n  collectCssText(rule) {\n    return this.collectConsumingCssText(rule['parsedCssText']);\n  }\n\n  // NOTE: we support consumption inside mixin assignment\n  // but not production, so strip out {...}\n  collectConsumingCssText(cssText) {\n    return cssText.replace(RX.BRACKETED, '')\n      .replace(RX.VAR_ASSIGN, '');\n  }\n\n  collectPropertiesInCssText(cssText, props) {\n    let m;\n    while ((m = RX.VAR_CONSUMED.exec(cssText))) {\n      let name = m[1];\n      // This regex catches all variable names, and following non-whitespace char\n      // If next char is not ':', then variable is a consumer\n      if (m[2] !== ':') {\n        props[name] = true;\n      }\n    }\n  }\n\n  // turns custom properties into realized values.\n  reify(props) {\n    // big perf optimization here: reify only *own* properties\n    // since this object has __proto__ of the element's scope properties\n    let names = Object.getOwnPropertyNames(props);\n    for (let i=0, n; i < names.length; i++) {\n      n = names[i];\n      props[n] = this.valueForProperty(props[n], props);\n    }\n  }\n\n  // given a property value, returns the reified value\n  // a property value may be:\n  // (1) a literal value like: red or 5px;\n  // (2) a variable value like: var(--a), var(--a, red), or var(--a, --b) or\n  // var(--a, var(--b));\n  // (3) a literal mixin value like { properties }. Each of these properties\n  // can have values that are: (a) literal, (b) variables, (c) @apply mixins.\n  valueForProperty(property, props) {\n    // case (1) default\n    // case (3) defines a mixin and we have to reify the internals\n    if (property) {\n      if (property.indexOf(';') >=0) {\n        property = this.valueForProperties(property, props);\n      } else {\n        // case (2) variable\n        let self = this;\n        let fn = function(prefix, value, fallback, suffix) {\n          if (!value) {\n            return prefix + suffix;\n          }\n          let propertyValue = self.valueForProperty(props[value], props);\n          // if value is \"initial\", then the variable should be treated as unset\n          if (!propertyValue || propertyValue === 'initial') {\n            // fallback may be --a or var(--a) or literal\n            propertyValue = self.valueForProperty(props[fallback] || fallback, props) ||\n            fallback;\n          } else if (propertyValue === 'apply-shim-inherit') {\n            // CSS build will replace `inherit` with `apply-shim-inherit`\n            // for use with native css variables.\n            // Since we have full control, we can use `inherit` directly.\n            propertyValue = 'inherit';\n          }\n          return prefix + (propertyValue || '') + suffix;\n        };\n        property = StyleUtil.processVariableAndFallback(property, fn);\n      }\n    }\n    return property && property.trim() || '';\n  }\n\n  // note: we do not yet support mixin within mixin\n  valueForProperties(property, props) {\n    let parts = property.split(';');\n    for (let i=0, p, m; i<parts.length; i++) {\n      if ((p = parts[i])) {\n        RX.MIXIN_MATCH.lastIndex = 0;\n        m = RX.MIXIN_MATCH.exec(p);\n        if (m) {\n          p = this.valueForProperty(props[m[1]], props);\n        } else {\n          let colon = p.indexOf(':');\n          if (colon !== -1) {\n            let pp = p.substring(colon);\n            pp = pp.trim();\n            pp = this.valueForProperty(pp, props) || pp;\n            p = p.substring(0, colon) + pp;\n          }\n        }\n        parts[i] = (p && p.lastIndexOf(';') === p.length - 1) ?\n          // strip trailing ;\n          p.slice(0, -1) :\n          p || '';\n      }\n    }\n    return parts.join(';');\n  }\n\n  applyProperties(rule, props) {\n    let output = '';\n    // dynamically added sheets may not be decorated so ensure they are.\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (rule.propertyInfo.cssText) {\n      output = this.valueForProperties(rule.propertyInfo.cssText, props);\n    }\n    rule['cssText'] = output;\n  }\n\n  // Apply keyframe transformations to the cssText of a given rule. The\n  // keyframeTransforms object is a map of keyframe names to transformer\n  // functions which take in cssText and spit out transformed cssText.\n  applyKeyframeTransforms(rule, keyframeTransforms) {\n    let input = rule['cssText'];\n    let output = rule['cssText'];\n    if (rule.hasAnimations == null) {\n      // Cache whether or not the rule has any animations to begin with:\n      rule.hasAnimations = RX.ANIMATION_MATCH.test(input);\n    }\n    // If there are no animations referenced, we can skip transforms:\n    if (rule.hasAnimations) {\n      let transform;\n      // If we haven't transformed this rule before, we iterate over all\n      // transforms:\n      if (rule.keyframeNamesToTransform == null) {\n        rule.keyframeNamesToTransform = [];\n        for (let keyframe in keyframeTransforms) {\n          transform = keyframeTransforms[keyframe];\n          output = transform(input);\n          // If the transform actually changed the CSS text, we cache the\n          // transform name for future use:\n          if (input !== output) {\n            input = output;\n            rule.keyframeNamesToTransform.push(keyframe);\n          }\n        }\n      } else {\n        // If we already have a list of keyframe names that apply to this\n        // rule, we apply only those keyframe name transforms:\n        for (let i = 0; i < rule.keyframeNamesToTransform.length; ++i) {\n          transform = keyframeTransforms[rule.keyframeNamesToTransform[i]];\n          input = transform(input);\n        }\n        output = input;\n      }\n    }\n    rule['cssText'] = output;\n  }\n\n  // Test if the rules in these styles matches the given `element` and if so,\n  // collect any custom properties into `props`.\n  /**\n   * @param {StyleNode} rules\n   * @param {Element} element\n   */\n  propertyDataFromStyles(rules, element) {\n    let props = {};\n    // generates a unique key for these matches\n    let o = [];\n    // note: active rules excludes non-matching @media rules\n    StyleUtil.forEachRule(rules, (rule) => {\n      // TODO(sorvell): we could trim the set of rules at declaration\n      // time to only include ones that have properties\n      if (!rule.propertyInfo) {\n        this.decorateRule(rule);\n      }\n      // match element against transformedSelector: selector may contain\n      // unwanted uniquification and parsedSelector does not directly match\n      // for :host selectors.\n      let selectorToMatch = rule.transformedSelector || rule['parsedSelector'];\n      if (element && rule.propertyInfo.properties && selectorToMatch) {\n        if (matchesSelector.call(element, selectorToMatch)) {\n          this.collectProperties(rule, props);\n          // produce numeric key for these matches for lookup\n          addToBitMask(rule.index, o);\n        }\n      }\n    }, null, true);\n    return {properties: props, key: o};\n  }\n\n  /**\n   * @param {Element} scope\n   * @param {StyleNode} rule\n   * @param {string} cssBuild\n   * @param {function(Object)} callback\n   */\n  whenHostOrRootRule(scope, rule, cssBuild, callback) {\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (!rule.propertyInfo.properties) {\n      return;\n    }\n    let {is, typeExtension} = StyleUtil.getIsExtends(scope);\n    let hostScope = is ?\n      StyleTransformer._calcHostScope(is, typeExtension) :\n      'html';\n    let parsedSelector = rule['parsedSelector'];\n    let isRoot = (parsedSelector === ':host > *' || parsedSelector === 'html');\n    let isHost = parsedSelector.indexOf(':host') === 0 && !isRoot;\n    // build info is either in scope (when scope is an element) or in the style\n    // when scope is the default scope; note: this allows default scope to have\n    // mixed mode built and unbuilt styles.\n    if (cssBuild === 'shady') {\n      // :root -> x-foo > *.x-foo for elements and html for custom-style\n      isRoot = parsedSelector === (hostScope + ' > *.' + hostScope) || parsedSelector.indexOf('html') !== -1;\n      // :host -> x-foo for elements, but sub-rules have .x-foo in them\n      isHost = !isRoot && parsedSelector.indexOf(hostScope) === 0;\n    }\n    if (!isRoot && !isHost) {\n      return;\n    }\n    let selectorToMatch = hostScope;\n    if (isHost) {\n      // need to transform :host because `:host` does not work with `matches`\n      if (!rule.transformedSelector) {\n        // transform :host into a matchable selector\n        rule.transformedSelector =\n        StyleTransformer._transformRuleCss(\n          rule,\n          StyleTransformer._transformComplexSelector,\n          StyleTransformer._calcElementScope(is),\n          hostScope\n        );\n      }\n      selectorToMatch = rule.transformedSelector || hostScope;\n    }\n    callback({\n      selector: selectorToMatch,\n      isHost: isHost,\n      isRoot: isRoot\n    });\n  }\n/**\n * @param {Element} scope\n * @param {StyleNode} rules\n * @param {string} cssBuild\n * @return {Object}\n */\n  hostAndRootPropertiesForScope(scope, rules, cssBuild) {\n    let hostProps = {}, rootProps = {};\n    // note: active rules excludes non-matching @media rules\n    StyleUtil.forEachRule(rules, (rule) => {\n      // if scope is StyleDefaults, use _element for matchesSelector\n      this.whenHostOrRootRule(scope, rule, cssBuild, (info) => {\n        let element = scope._element || scope;\n        if (matchesSelector.call(element, info.selector)) {\n          if (info.isHost) {\n            this.collectProperties(rule, hostProps);\n          } else {\n            this.collectProperties(rule, rootProps);\n          }\n        }\n      });\n    }, null, true);\n    return {rootProps: rootProps, hostProps: hostProps};\n  }\n\n  /**\n   * @param {Element} element\n   * @param {Object} properties\n   * @param {string} scopeSelector\n   */\n  transformStyles(element, properties, scopeSelector) {\n    let self = this;\n    let {is, typeExtension} = StyleUtil.getIsExtends(element);\n    let hostSelector = StyleTransformer\n      ._calcHostScope(is, typeExtension);\n    let rxHostSelector = element.extends ?\n      '\\\\' + hostSelector.slice(0, -1) + '\\\\]' :\n      hostSelector;\n    let hostRx = new RegExp(RX.HOST_PREFIX + rxHostSelector +\n      RX.HOST_SUFFIX);\n    let {styleRules: rules, cssBuild} = StyleInfo.get(element);\n    let keyframeTransforms =\n      this._elementKeyframeTransforms(element, rules, scopeSelector);\n    return StyleTransformer.elementStyles(element, rules, function(rule) {\n      self.applyProperties(rule, properties);\n      if (!nativeShadow &&\n          !StyleUtil.isKeyframesSelector(rule) &&\n          rule['cssText']) {\n        // NOTE: keyframe transforms only scope munge animation names, so it\n        // is not necessary to apply them in ShadowDOM.\n        self.applyKeyframeTransforms(rule, keyframeTransforms);\n        self._scopeSelector(rule, hostRx, hostSelector, scopeSelector);\n      }\n    }, cssBuild);\n  }\n\n  /**\n   * @param {Element} element\n   * @param {StyleNode} rules\n   * @param {string} scopeSelector\n   * @return {Object}\n   */\n  _elementKeyframeTransforms(element, rules, scopeSelector) {\n    let keyframesRules = rules._keyframes;\n    let keyframeTransforms = {};\n    if (!nativeShadow && keyframesRules) {\n      // For non-ShadowDOM, we transform all known keyframes rules in\n      // advance for the current scope. This allows us to catch keyframes\n      // rules that appear anywhere in the stylesheet:\n      for (let i = 0, keyframesRule = keyframesRules[i];\n           i < keyframesRules.length;\n           keyframesRule = keyframesRules[++i]) {\n        this._scopeKeyframes(keyframesRule, scopeSelector);\n        keyframeTransforms[keyframesRule['keyframesName']] =\n            this._keyframesRuleTransformer(keyframesRule);\n      }\n    }\n    return keyframeTransforms;\n  }\n\n  // Generate a factory for transforming a chunk of CSS text to handle a\n  // particular scoped keyframes rule.\n  /**\n   * @param {StyleNode} keyframesRule\n   * @return {function(string):string}\n   */\n  _keyframesRuleTransformer(keyframesRule) {\n    return function(cssText) {\n      return cssText.replace(\n          keyframesRule.keyframesNameRx,\n          keyframesRule.transformedKeyframesName);\n    };\n  }\n\n/**\n * Transforms `@keyframes` names to be unique for the current host.\n * Example: @keyframes foo-anim -> @keyframes foo-anim-x-foo-0\n *\n * @param {StyleNode} rule\n * @param {string} scopeId\n */\n  _scopeKeyframes(rule, scopeId) {\n    // Animation names are of the form [\\w-], so ensure that the name regex does not partially apply\n    // to similarly named keyframe names by checking for a word boundary at the beginning and\n    // a non-word boundary or `-` at the end.\n    rule.keyframesNameRx = new RegExp(`\\\\b${rule['keyframesName']}(?!\\\\B|-)`, 'g');\n    rule.transformedKeyframesName = rule['keyframesName'] + '-' + scopeId;\n    rule.transformedSelector = rule.transformedSelector || rule['selector'];\n    rule['selector'] = rule.transformedSelector.replace(\n        rule['keyframesName'], rule.transformedKeyframesName);\n  }\n\n  // Strategy: x scope shim a selector e.g. to scope `.x-foo-42` (via classes):\n  // non-host selector: .a.x-foo -> .x-foo-42 .a.x-foo\n  // host selector: x-foo.wide -> .x-foo-42.wide\n  // note: we use only the scope class (.x-foo-42) and not the hostSelector\n  // (x-foo) to scope :host rules; this helps make property host rules\n  // have low specificity. They are overrideable by class selectors but,\n  // unfortunately, not by type selectors (e.g. overriding via\n  // `.special` is ok, but not by `x-foo`).\n  /**\n   * @param {StyleNode} rule\n   * @param {RegExp} hostRx\n   * @param {string} hostSelector\n   * @param {string} scopeId\n   */\n  _scopeSelector(rule, hostRx, hostSelector, scopeId) {\n    rule.transformedSelector = rule.transformedSelector || rule['selector'];\n    let selector = rule.transformedSelector;\n    let scope = '.' + scopeId;\n    let parts = StyleUtil.splitSelectorList(selector);\n    for (let i=0, l=parts.length, p; (i<l) && (p=parts[i]); i++) {\n      parts[i] = p.match(hostRx) ?\n        p.replace(hostSelector, scope) :\n        scope + ' ' + p;\n    }\n    rule['selector'] = parts.join(',');\n  }\n\n  /**\n   * @param {Element} element\n   * @param {string} selector\n   * @param {string} old\n   */\n  applyElementScopeSelector(element, selector, old) {\n    let c = element.getAttribute('class') || '';\n    let v = c;\n    if (old) {\n      v = c.replace(\n        new RegExp('\\\\s*' + XSCOPE_NAME + '\\\\s*' + old + '\\\\s*', 'g'), ' ');\n    }\n    v += (v ? ' ' : '') + XSCOPE_NAME + ' ' + selector;\n    if (c !== v) {\n      StyleUtil.setElementClassRaw(element, v);\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element\n   * @param {Object} properties\n   * @param {string} selector\n   * @param {HTMLStyleElement} style\n   * @return {HTMLStyleElement}\n   */\n  applyElementStyle(element, properties, selector, style) {\n    // calculate cssText to apply\n    let cssText = style ? style.textContent || '' :\n      this.transformStyles(element, properties, selector);\n    // if shady and we have a cached style that is not style, decrement\n    let styleInfo = StyleInfo.get(element);\n    let s = styleInfo.customStyle;\n    if (s && !nativeShadow && (s !== style)) {\n      s['_useCount']--;\n      if (s['_useCount'] <= 0 && s.parentNode) {\n        s.parentNode.removeChild(s);\n      }\n    }\n    // apply styling always under native or if we generated style\n    // or the cached style is not in document(!)\n    if (nativeShadow) {\n      // update existing style only under native\n      if (styleInfo.customStyle) {\n        styleInfo.customStyle.textContent = cssText;\n        style = styleInfo.customStyle;\n      // otherwise, if we have css to apply, do so\n      } else if (cssText) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        style = StyleUtil.applyCss(cssText, selector, element.shadowRoot,\n          styleInfo.placeholder);\n      }\n    } else {\n      // shady and no cache hit\n      if (!style) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        if (cssText) {\n          style = StyleUtil.applyCss(cssText, selector, null,\n            styleInfo.placeholder);\n        }\n      // shady and cache hit but not in document\n      } else if (!style.parentNode) {\n        if (IS_IE && cssText.indexOf('@media') > -1) {\n            // @media rules may be stale in IE 10 and 11\n            // refresh the text content of the style to revalidate them.\n          style.textContent = cssText;\n        }\n        StyleUtil.applyStyle(style, null, styleInfo.placeholder);\n      }\n    }\n    // ensure this style is our custom style and increment its use count.\n    if (style) {\n      style['_useCount'] = style['_useCount'] || 0;\n      // increment use count if we changed styles\n      if (styleInfo.customStyle != style) {\n        style['_useCount']++;\n      }\n      styleInfo.customStyle = style;\n    }\n    return style;\n  }\n\n  /**\n   * @param {Element} style\n   * @param {Object} properties\n   */\n  applyCustomStyle(style, properties) {\n    let rules = StyleUtil.rulesForStyle(/** @type {HTMLStyleElement} */(style));\n    let self = this;\n    style.textContent = StyleUtil.toCssText(rules, function(/** StyleNode */rule) {\n      let css = rule['cssText'] = rule['parsedCssText'];\n      if (rule.propertyInfo && rule.propertyInfo.cssText) {\n        // remove property assignments\n        // so next function isn't confused\n        // NOTE: we have 3 categories of css:\n        // (1) normal properties,\n        // (2) custom property assignments (--foo: red;),\n        // (3) custom property usage: border: var(--foo); @apply(--foo);\n        // In elements, 1 and 3 are separated for efficiency; here they\n        // are not and this makes this case unique.\n        css = removeCustomPropAssignment(/** @type {string} */(css));\n        // replace with reified properties, scenario is same as mixin\n        rule['cssText'] = self.valueForProperties(css, properties);\n      }\n    });\n  }\n}\n\n/**\n * @param {number} n\n * @param {Array<number>} bits\n */\nfunction addToBitMask(n, bits) {\n  let o = parseInt(n / 32, 10);\n  let v = 1 << (n % 32);\n  bits[o] = (bits[o] || 0) | v;\n}\n\nexport default new StyleProperties();","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\n\n/** @const {string} */\nconst infoKey = '__styleInfo';\n\nexport default class StyleInfo {\n  /**\n   * @param {Element} node\n   * @return {StyleInfo}\n   */\n  static get(node) {\n    if (node) {\n      return node[infoKey];\n    } else {\n      return null;\n    }\n  }\n  /**\n   * @param {!Element} node\n   * @param {StyleInfo} styleInfo\n   * @return {StyleInfo}\n   */\n  static set(node, styleInfo) {\n    node[infoKey] = styleInfo;\n    return styleInfo;\n  }\n  /**\n   * @param {StyleNode} ast\n   * @param {Node=} placeholder\n   * @param {Array<string>=} ownStylePropertyNames\n   * @param {string=} elementName\n   * @param {string=} typeExtension\n   * @param {string=} cssBuild\n   */\n  constructor(ast, placeholder, ownStylePropertyNames, elementName, typeExtension, cssBuild) {\n    /** @type {StyleNode} */\n    this.styleRules = ast || null;\n    /** @type {Node} */\n    this.placeholder = placeholder || null;\n    /** @type {!Array<string>} */\n    this.ownStylePropertyNames = ownStylePropertyNames || [];\n    /** @type {Object} */\n    this.overrideStyleProperties = null;\n    /** @type {string} */\n    this.elementName = elementName || '';\n    /** @type {string} */\n    this.cssBuild = cssBuild || '';\n    /** @type {string} */\n    this.typeExtension = typeExtension || '';\n    /** @type {Object<string, string>} */\n    this.styleProperties = null;\n    /** @type {?string} */\n    this.scopeSelector = null;\n    /** @type {HTMLStyleElement} */\n    this.customStyle = null;\n  }\n  _getStyleRules() {\n    return this.styleRules;\n  }\n}\n\n/* eslint-disable-next-line no-self-assign */\nStyleInfo.prototype['_getStyleRules'] = StyleInfo.prototype._getStyleRules;\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {applyStylePlaceHolder} from './style-util.js';\nimport {nativeShadow, disableRuntime} from './style-settings.js';\n\n/** @type {!Object<string, !Node>} */\nconst placeholderMap = {};\n\n/**\n * @param {string} elementName\n * @return {Node}\n */\nexport function getStylePlaceholder(elementName) {\n  return placeholderMap[elementName] || null;\n}\n\n/**\n * @param {string} elementName\n */\nexport function ensureStylePlaceholder(elementName) {\n  if (!placeholderMap[elementName]) {\n    placeholderMap[elementName] = applyStylePlaceHolder(elementName);\n  }\n}\n\n/**\n * @const {CustomElementRegistry}\n */\nconst ce = window['customElements'];\nif (ce && !nativeShadow && !disableRuntime) {\n  /**\n   * @const {function(this:CustomElementRegistry, string,function(new:HTMLElement),{extends: string}=)}\n   */\n  const origDefine = ce['define'];\n  /**\n   * @param {string} name\n   * @param {function(new:HTMLElement)} clazz\n   * @param {{extends: string}=} options\n   */\n  const wrappedDefine = (name, clazz, options) => {\n    ensureStylePlaceholder(name);\n    origDefine.call(/** @type {!CustomElementRegistry} */(ce), name, clazz, options);\n  };\n  ce['define'] = wrappedDefine;\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n'use strict';\n\nexport default class StyleCache {\n  constructor(typeMax = 100) {\n    // map element name -> [{properties, styleElement, scopeSelector}]\n    this.cache = {};\n    /** @type {number} */\n    this.typeMax = typeMax;\n  }\n\n  _validate(cacheEntry, properties, ownPropertyNames) {\n    for (let idx = 0; idx < ownPropertyNames.length; idx++) {\n      let pn = ownPropertyNames[idx];\n      if (cacheEntry.properties[pn] !== properties[pn]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  store(tagname, properties, styleElement, scopeSelector) {\n    let list = this.cache[tagname] || [];\n    list.push({properties, styleElement, scopeSelector});\n    if (list.length > this.typeMax) {\n      list.shift();\n    }\n    this.cache[tagname] = list;\n  }\n\n  fetch(tagname, properties, ownPropertyNames) {\n    let list = this.cache[tagname];\n    if (!list) {\n      return;\n    }\n    // reverse list for most-recent lookups\n    for (let idx = list.length - 1; idx >= 0; idx--) {\n      let entry = list[idx];\n      if (this._validate(entry, properties, ownPropertyNames)) {\n        return entry;\n      }\n    }\n  }\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/**\n * @const {!Object<string, !HTMLTemplateElement>}\n */\nconst templateMap = {};\nexport default templateMap;\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\nimport templateMap from './template-map.js';\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\n\n/*\n * Utilities for handling invalidating apply-shim mixins for a given template.\n *\n * The invalidation strategy involves keeping track of the \"current\" version of a template's mixins, and updating that count when a mixin is invalidated.\n * The template\n */\n\n/** @const {string} */\nconst CURRENT_VERSION = '_applyShimCurrentVersion';\n\n/** @const {string} */\nconst NEXT_VERSION = '_applyShimNextVersion';\n\n/** @const {string} */\nconst VALIDATING_VERSION = '_applyShimValidatingVersion';\n\n/**\n * @const {Promise<void>}\n */\nconst promise = Promise.resolve();\n\n/**\n * @param {string} elementName\n */\nexport function invalidate(elementName){\n  let template = templateMap[elementName];\n  if (template) {\n    invalidateTemplate(template);\n  }\n}\n\n/**\n * This function can be called multiple times to mark a template invalid\n * and signal that the style inside must be regenerated.\n *\n * Use `startValidatingTemplate` to begin an asynchronous validation cycle.\n * During that cycle, call `templateIsValidating` to see if the template must\n * be revalidated\n * @param {HTMLTemplateElement} template\n */\nexport function invalidateTemplate(template) {\n  // default the current version to 0\n  template[CURRENT_VERSION] = template[CURRENT_VERSION] || 0;\n  // ensure the \"validating for\" flag exists\n  template[VALIDATING_VERSION] = template[VALIDATING_VERSION] || 0;\n  // increment the next version\n  template[NEXT_VERSION] = (template[NEXT_VERSION] || 0) + 1;\n}\n\n/**\n * @param {string} elementName\n * @return {boolean}\n */\nexport function isValid(elementName) {\n  let template = templateMap[elementName];\n  if (template) {\n    return templateIsValid(template);\n  }\n  return true;\n}\n\n/**\n * @param {HTMLTemplateElement} template\n * @return {boolean}\n */\nexport function templateIsValid(template) {\n  return template[CURRENT_VERSION] === template[NEXT_VERSION];\n}\n\n/**\n * @param {string} elementName\n * @return {boolean}\n */\nexport function isValidating(elementName) {\n  let template = templateMap[elementName];\n  if (template) {\n    return templateIsValidating(template);\n  }\n  return false;\n}\n\n/**\n * Returns true if the template is currently invalid and `startValidating` has been called since the last invalidation.\n * If false, the template must be validated.\n * @param {HTMLTemplateElement} template\n * @return {boolean}\n */\nexport function templateIsValidating(template) {\n  return !templateIsValid(template) && template[VALIDATING_VERSION] === template[NEXT_VERSION];\n}\n\n/**\n * the template is marked as `validating` for one microtask so that all instances\n * found in the tree crawl of `applyStyle` will update themselves,\n * but the template will only be updated once.\n * @param {string} elementName\n*/\nexport function startValidating(elementName) {\n  let template = templateMap[elementName];\n  startValidatingTemplate(template);\n}\n\n/**\n * Begin an asynchronous invalidation cycle.\n * This should be called after every validation of a template\n *\n * After one microtask, the template will be marked as valid until the next call to `invalidateTemplate`\n * @param {HTMLTemplateElement} template\n */\nexport function startValidatingTemplate(template) {\n  // remember that the current \"next version\" is the reason for this validation cycle\n  template[VALIDATING_VERSION] = template[NEXT_VERSION];\n  // however, there only needs to be one async task to clear the counters\n  if (!template._validating) {\n    template._validating = true;\n    promise.then(function() {\n      // sync the current version to let future invalidations cause a refresh cycle\n      template[CURRENT_VERSION] = template[NEXT_VERSION];\n      template._validating = false;\n    });\n  }\n}\n\n/**\n * @return {boolean}\n */\nexport function elementsAreInvalid() {\n  for (let elementName in templateMap) {\n    let template = templateMap[elementName];\n    if (!templateIsValid(template)) {\n      return true;\n    }\n  }\n  return false;\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport { MIXIN_MATCH, VAR_ASSIGN } from './common-regex.js';\n\n/**\n * @param {Element} element\n * @param {Object=} properties\n */\nexport function updateNativeProperties(element, properties) {\n  // remove previous properties\n  for (let p in properties) {\n    // NOTE: for bc with shim, don't apply null values.\n    if (p === null) {\n      element.style.removeProperty(p);\n    } else {\n      element.style.setProperty(p, properties[p]);\n    }\n  }\n}\n\n/**\n * @param {Element} element\n * @param {string} property\n * @return {string}\n */\nexport function getComputedStyleValue(element, property) {\n  /**\n   * @const {string}\n   */\n  const value = window.getComputedStyle(element).getPropertyValue(property);\n  if (!value) {\n    return '';\n  } else {\n    return value.trim();\n  }\n}\n\n/**\n * return true if `cssText` contains a mixin definition or consumption\n * @param {string} cssText\n * @return {boolean}\n */\nexport function detectMixin(cssText) {\n  const has = MIXIN_MATCH.test(cssText) || VAR_ASSIGN.test(cssText);\n  // reset state of the regexes\n  MIXIN_MATCH.lastIndex = 0;\n  VAR_ASSIGN.lastIndex = 0;\n  return has;\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport ScopingShim from '../src/scoping-shim.js';\nimport {nativeCssVariables, nativeShadow, cssBuild, disableRuntime} from '../src/style-settings.js';\n\n/** @const {ScopingShim} */\nconst scopingShim = new ScopingShim();\n\nlet ApplyShim, CustomStyleInterface;\n\nif (window['ShadyCSS']) {\n  ApplyShim = window['ShadyCSS']['ApplyShim'];\n  CustomStyleInterface = window['ShadyCSS']['CustomStyleInterface'];\n}\n\nwindow.ShadyCSS = {\n  ScopingShim: scopingShim,\n  /**\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} elementExtends\n   */\n  prepareTemplate(template, elementName, elementExtends) {\n    scopingShim.flushCustomStyles();\n    scopingShim.prepareTemplate(template, elementName, elementExtends)\n  },\n\n  /**\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   */\n  prepareTemplateDom(template, elementName) {\n    scopingShim.prepareTemplateDom(template, elementName);\n  },\n\n  /**\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} elementExtends\n   */\n  prepareTemplateStyles(template, elementName, elementExtends) {\n    scopingShim.flushCustomStyles();\n    scopingShim.prepareTemplateStyles(template, elementName, elementExtends)\n  },\n  /**\n   * @param {!HTMLElement} element\n   * @param {Object=} properties\n   */\n  styleSubtree(element, properties) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleSubtree(element, properties);\n  },\n\n  /**\n   * @param {!HTMLElement} element\n   */\n  styleElement(element) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleElement(element);\n  },\n\n  /**\n   * @param {Object=} properties\n   */\n  styleDocument(properties) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleDocument(properties);\n  },\n\n  flushCustomStyles() {\n    scopingShim.flushCustomStyles();\n  },\n\n  /**\n   * @param {Element} element\n   * @param {string} property\n   * @return {string}\n   */\n  getComputedStyleValue(element, property) {\n    return scopingShim.getComputedStyleValue(element, property);\n  },\n\n  nativeCss: nativeCssVariables,\n\n  nativeShadow: nativeShadow,\n\n  cssBuild: cssBuild,\n\n  disableRuntime: disableRuntime,\n};\n\nif (ApplyShim) {\n  window.ShadyCSS.ApplyShim = ApplyShim;\n}\n\nif (CustomStyleInterface) {\n  window.ShadyCSS.CustomStyleInterface = CustomStyleInterface;\n}"]}