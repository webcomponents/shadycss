{"version":3,"sources":[" [synthetic:base] "," [synthetic:util/owns] "," [synthetic:util/defineproperty] "," [synthetic:util/global] "," [synthetic:util/polyfill] "," [synthetic:es6/object/assign] "," [synthetic:es6/reflect/apply] "," [synthetic:es6/reflect/construct] ","src/style-settings.js","src/css-parse.js","src/style-util.js","src/template-map.js","src/apply-shim.js","src/style-transformer.js","src/style-info.js","src/style-properties.js","src/style-placeholder.js","src/style-cache.js","src/ShadyCSS.js","src/custom-style.js"],"names":["nativeShadow","window","ShadyDOM","inUse","nativeCssVariables","navigator","userAgent","match","CSS","supports","detectNativeApply$$module$$src$style_settings","detectNativeApply","style","document","createElement","textContent","head","appendChild","nativeCssApply","sheet","cssRules","cssText","indexOf","removeChild","parseSettings$$module$$src$style_settings","parseSettings","settings","shimcssproperties","shimshadow","ShadyCSS","WebComponents","flags","module$$src$style_settings","parse$$module$$src$css_parse","parse","text","clean","parseCss","lex","clean$$module$$src$css_parse","replace","RX","comments","port","lex$$module$$src$css_parse","root","start","end","length","n","i","l","OPEN_BRACE","rules","p","parent","previous","push","CLOSE_BRACE","parseCss$$module$$src$css_parse","node","t","substring","parsedCssText","trim","ss","_expandUnicodeEscapes","multipleSpaces","lastIndexOf","s","parsedSelector","selector","atRule","AT_START","MEDIA_START","type","types","MEDIA_RULE","keyframesRule","KEYFRAMES_RULE","keyframesName","split","pop","VAR_START","MIXIN_RULE","STYLE_RULE","r$","r","_expandUnicodeEscapes$$module$$src$css_parse","code","repeat","stringify$$module$$src$css_parse","stringify","preserveProperties","_hasMixinRules","removeCustomProps","_hasMixinRules$$module$$src$css_parse","removeCustomProps$$module$$src$css_parse","removeCustomPropAssignment","removeCustomPropApply","removeCustomPropAssignment$$module$$src$css_parse","customProp","mixinProp","removeCustomPropApply$$module$$src$css_parse","mixinApply","varApply","module$$src$css_parse","getElementNames$$module$$src$style_util","getElementNames","element","hasAttribute","elementName","getAttribute","typeExtension","localName","toCssText$$module$$src$style_util","toCssText","callback","forEachRule","rulesForStyle$$module$$src$style_util","rulesForStyle","__cssRules","isKeyframesSelector$$module$$src$style_util","isKeyframesSelector","rule","forEachRule$$module$$src$style_util","styleRuleCallback","keyframesRuleCallback","onlyActiveRules","skipRules","matchMedia","rx","MEDIA_MATCH","matches","applyCss$$module$$src$style_util","applyCss","moniker","target","contextNode","createScopeStyle","applyStyle","applyStyle$$module$$src$style_util","after","nextSibling","firstChild","lastHeadApplyNode","insertBefore","createScopeStyle$$module$$src$style_util","setAttribute","applyStylePlaceHolder$$module$$src$style_util","applyStylePlaceHolder","placeHolder","createComment","scope","isTargetedBuild$$module$$src$style_util","isTargetedBuild","buildType","getCssBuildType$$module$$src$style_util","getCssBuildType","findMatchingParen$$module$$src$style_util","findMatchingParen","level","processVariableAndFallback$$module$$src$style_util","processVariableAndFallback","str","inner","prefix","suffix","comma","value","fallback","VAR_ASSIGN","MIXIN_MATCH","VAR_CONSUMED","ANIMATION_MATCH","IS_VAR","BRACKETED","HOST_PREFIX","HOST_SUFFIX","module$$src$style_util","$jscompDefaultExport","module$$src$template_map","default","APPLY_NAME_CLEAN","INITIAL_INHERIT","MIXIN_VAR_SEP","MixinMap","constructor","_map","set","name","props","properties","dependants","get","ApplyShim","_measureElement","_currentTemplate","_separator","_boundProduceCssProperties","this._boundProduceCssProperties","matchText","propertyName","valueProperty","valueMixin","_produceCssProperties","transformStyle","ast","transformRules","transformRule","__applyShimInvalid","transformCssText","_consumeCssProperties","_getInitialValueForProperty","property","all","getComputedStyle","getPropertyValue","m","exec","mixinName","idx","index","applyPos","afterApplyPos","textBeforeApply","slice","textAfterApply","defaults","_cssTextToMap","replacement","_atApplyToCssProperties","join","lastIndex","fallbacks","vars","mixinEntry","f","parts","_replaceInitialOrInherit","out","sp","_invalidateMixinEntry","mixinAsProperties","combinedProps","mixinValues","oldProps","Object","assign","create","v","needToInvalidate","undefined","applyShim","module$$src$apply_shim","StyleTransformer","dom","shouldRemoveScope","__styleScoped","_transformDom","classList","c$","childNodes","content","_content","children","remove","SCOPE_NAME","add","c","CLASS","elementStyles","css","hostScope","_calcHostScope","elementScope","_calcElementScope","isScoped","CSS_CLASS_PREFIX","_transformRule","_transformComplexSelector","transformer","transformedSelector","_transformRuleCss","p$","COMPLEX_SELECTOR_SEP","call","stop","SLOTTED_START","HOST","SIMPLE_SELECTOR_SEP","info","_transformCompoundSelector","combinator","slottedIndex","SLOTTED","_transformHostSelector","_transformSimpleSelector","slotted","SLOTTED_PAREN","paren","DIR_PAREN","before","dir","PSEUDO_PREFIX","HOST_PAREN","SIMPLE_SELECTOR_PREFIX","host","typeSelector","SELECTOR_NO_MATCH","documentRule","normalizeRootSelector","_transformDocumentSelector","ROOT","SCOPE_DOC_SELECTOR","RegExp","module$$src$style_transformer","StyleInfo","placeholder","ownPropertyNames","cssBuild","styleRules","overrideStyleProperties","customStyle","scopeSelector","styleProperties","__styleInfo","styleInfo","module$$src$style_info","Element","prototype","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","IS_IE","StyleProperties","decorateStyles","keyframes","ruleIndex","decorateRule","collectPropertiesInCssText","propertyInfo","_keyframes","names","collectProperties","hasProperties","collectCssText","any","collectConsumingCssText","reify","getOwnPropertyNames","valueForProperty","valueForProperties","self","fn","propertyValue","colon","pp","applyProperties","output","applyKeyframeTransforms","keyframeTransforms","input","hasAnimations","test","keyframeNamesToTransform","keyframe","transform","propertyDataFromStyles","o","selectorToMatch","addToBitMask","key","whenHostOrRootRule","isRoot","isHost","hostAndRootPropertiesForElement","hostProps","rootProps","__cssBuild","transformStyles","hostSelector","rxHostSelector","hostRx","_elementKeyframeTransforms","_scopeSelector","keyframesRules","_scopeKeyframes","_keyframesRuleTransformer","keyframesNameRx","transformedKeyframesName","scopeId","applyElementScopeSelector","old","XSCOPE_NAME","applyElementStyle","_useCount","parentNode","shadowRoot","applyCustomStyle","addToBitMask$$module$$src$style_properties","bits","parseInt","module$$src$style_properties","placeholderMap","ce","customElements","origDefine","define","ce$$module$$src$style_placeholder.define","clazz","options","module$$src$style_placeholder","StyleCache","typeMax","cache","_validate","cacheEntry","pn","store","tagname","styleElement","list","shift","fetch","entry","module$$src$style_cache","styleCache","scopeCounter","nativeCss","_documentOwner","documentElement","_documentOwnerStyleInfo","_generateScopeSelector","id","getStyleAst","styleAstToString","_gatherStyles","template","styles","querySelectorAll","_getCssBuild","querySelector","prepareTemplate","_prepared","_styleAst","_style","_ownPropertyNames","_prepareHost","hostElement","_cssBuild","overrideProps","CustomStyle","CS","_documentDirty","findStyles","_revalidateApplyShim","_updateProperties","applyStyles","_updateNativeProperties","_applyStyleProperties","rootNode","_isRootOwner","_applyToDescendants","_styleOwnerForNode","getRootNode","cachedStyle","oldScopeSelector","owner","ownerStyleInfo","hostAndRootProps","propertiesMatchingHost","propertyData","_mixinOverrideStyles","overrides","removeProperty","setProperty","updateStyles","_transformCustomStyleForDocument","_applyCustomStyleToDocument","getComputedStyleValue","module$$src$ShadyCSS","enqueued$$module$$src$custom_style","customStyles$$module$$src$custom_style","hookFn$$module$$src$custom_style","enqueueDocumentValidation$$module$$src$custom_style$$module$$src$custom_style","enqueueDocumentValidation$$module$$src$custom_style","HTMLImports","whenReady","validateDocument$$module$$src$custom_style","readyState","requestAnimationFrame","addEventListener","validateDocument$$module$$src$custom_style$$module$$src$custom_style","CustomStyle$$module$$src$custom_style$$module$$src$custom_style","CustomStyle$$module$$src$custom_style","Reflect","construct","HTMLElement","defineProperties","processHook","_customStyles","CustomStyle$$module$$src$custom_style$$module$$src$custom_style.findStyles","_findStyle","CustomStyle$$module$$src$custom_style$$module$$src$custom_style._revalidateApplyShim","CustomStyle$$module$$src$custom_style$$module$$src$custom_style.applyStyles","_applyStyle","configurable","writable","CustomStyle$$module$$src$custom_style$$module$$src$custom_style.prototype._findStyle","__appliedElement","attributes","attr","CustomStyle$$module$$src$custom_style$$module$$src$custom_style.prototype._applyStyle"],"mappings":"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","file":"shadycss.min.js","sourcesContent":[null,null,null,null,null,null,null,null,"/**\r\n@license\r\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n\r\n'use strict';\r\n\r\nexport let nativeShadow = !(window.ShadyDOM && window.ShadyDOM.inUse);\r\n// chrome 49 has semi-working css vars, check if box-shadow works\r\n// safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\r\nexport let nativeCssVariables = (!navigator.userAgent.match('AppleWebKit/601') &&\r\nwindow.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)'));\r\n\r\n// experimental support for native @apply\r\nfunction detectNativeApply() {\r\n  let style = document.createElement('style');\r\n  style.textContent = '.foo { @apply --foo }';\r\n  document.head.appendChild(style);\r\n  let nativeCssApply = (style.sheet.cssRules[0].cssText.indexOf('apply') >= 0);\r\n  document.head.removeChild(style);\r\n  return nativeCssApply;\r\n}\r\n\r\nexport let nativeCssApply = false && detectNativeApply();\r\n\r\nfunction parseSettings(settings) {\r\n  if (settings) {\r\n    nativeCssVariables = nativeCssVariables && !settings.shimcssproperties;\r\n    nativeShadow = nativeShadow && !settings.shimshadow;\r\n  }\r\n}\r\n\r\nif (window.ShadyCSS) {\r\n  parseSettings(window.ShadyCSS);\r\n} else if (window.WebComponents) {\r\n  parseSettings(window.WebComponents.flags);\r\n}\r\n","/**\r\n@license\r\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n\r\n/*\r\nExtremely simple css parser. Intended to be not more than what we need\r\nand definitely not necessarily correct =).\r\n*/\r\n\r\n'use strict';\r\n\r\n// given a string of css, return a simple rule tree\r\nexport function parse(text) {\r\n  text = clean(text);\r\n  return parseCss(lex(text), text);\r\n}\r\n\r\n// remove stuff we don't care about that may hinder parsing\r\nfunction clean(cssText) {\r\n  return cssText.replace(RX.comments, '').replace(RX.port, '');\r\n}\r\n\r\n// super simple {...} lexer that returns a node tree\r\nfunction lex(text) {\r\n  let root = {\r\n    start: 0,\r\n    end: text.length\r\n  };\r\n  let n = root;\r\n  for (let i = 0, l = text.length; i < l; i++) {\r\n    if (text[i] === OPEN_BRACE) {\r\n      if (!n.rules) {\r\n        n.rules = [];\r\n      }\r\n      let p = n;\r\n      let previous = p.rules[p.rules.length - 1];\r\n      n = {\r\n        start: i + 1,\r\n        parent: p,\r\n        previous: previous\r\n      };\r\n      p.rules.push(n);\r\n    } else if (text[i] === CLOSE_BRACE) {\r\n      n.end = i + 1;\r\n      n = n.parent || root;\r\n    }\r\n  }\r\n  return root;\r\n}\r\n\r\n// add selectors/cssText to node tree\r\nfunction parseCss(node, text) {\r\n  let t = text.substring(node.start, node.end - 1);\r\n  node.parsedCssText = node.cssText = t.trim();\r\n  if (node.parent) {\r\n    let ss = node.previous ? node.previous.end : node.parent.start;\r\n    t = text.substring(ss, node.start - 1);\r\n    t = _expandUnicodeEscapes(t);\r\n    t = t.replace(RX.multipleSpaces, ' ');\r\n    // TODO(sorvell): ad hoc; make selector include only after last ;\r\n    // helps with mixin syntax\r\n    t = t.substring(t.lastIndexOf(';') + 1);\r\n    let s = node.parsedSelector = node.selector = t.trim();\r\n    node.atRule = (s.indexOf(AT_START) === 0);\r\n    // note, support a subset of rule types...\r\n    if (node.atRule) {\r\n      if (s.indexOf(MEDIA_START) === 0) {\r\n        node.type = types.MEDIA_RULE;\r\n      } else if (s.match(RX.keyframesRule)) {\r\n        node.type = types.KEYFRAMES_RULE;\r\n        node.keyframesName =\r\n          node.selector.split(RX.multipleSpaces).pop();\r\n      }\r\n    } else {\r\n      if (s.indexOf(VAR_START) === 0) {\r\n        node.type = types.MIXIN_RULE;\r\n      } else {\r\n        node.type = types.STYLE_RULE;\r\n      }\r\n    }\r\n  }\r\n  let r$ = node.rules;\r\n  if (r$) {\r\n    for (let i = 0, l = r$.length, r;\r\n      (i < l) && (r = r$[i]); i++) {\r\n      parseCss(r, text);\r\n    }\r\n  }\r\n  return node;\r\n}\r\n\r\n// conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\r\n// expanded form that doesn't require trailing space `\\000033`\r\nfunction _expandUnicodeEscapes(s) {\r\n  return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function() {\r\n    let code = arguments[1],\r\n      repeat = 6 - code.length;\r\n    while (repeat--) {\r\n      code = '0' + code;\r\n    }\r\n    return '\\\\' + code;\r\n  });\r\n}\r\n\r\n// stringify parsed css.\r\nexport function stringify(node, preserveProperties, text) {\r\n  text = text || '';\r\n  // calc rule cssText\r\n  let cssText = '';\r\n  if (node.cssText || node.rules) {\r\n    let r$ = node.rules;\r\n    if (r$ && !_hasMixinRules(r$)) {\r\n      for (let i = 0, l = r$.length, r;\r\n        (i < l) && (r = r$[i]); i++) {\r\n        cssText = stringify(r, preserveProperties, cssText);\r\n      }\r\n    } else {\r\n      cssText = preserveProperties ? node.cssText :\r\n        removeCustomProps(node.cssText);\r\n      cssText = cssText.trim();\r\n      if (cssText) {\r\n        cssText = '  ' + cssText + '\\n';\r\n      }\r\n    }\r\n  }\r\n  // emit rule if there is cssText\r\n  if (cssText) {\r\n    if (node.selector) {\r\n      text += node.selector + ' ' + OPEN_BRACE + '\\n';\r\n    }\r\n    text += cssText;\r\n    if (node.selector) {\r\n      text += CLOSE_BRACE + '\\n\\n';\r\n    }\r\n  }\r\n  return text;\r\n}\r\n\r\nfunction _hasMixinRules(rules) {\r\n  return rules[0].selector.indexOf(VAR_START) === 0;\r\n}\r\n\r\nfunction removeCustomProps(cssText) {\r\n  cssText = removeCustomPropAssignment(cssText);\r\n  return removeCustomPropApply(cssText);\r\n}\r\n\r\nexport function removeCustomPropAssignment(cssText) {\r\n  return cssText\r\n    .replace(RX.customProp, '')\r\n    .replace(RX.mixinProp, '');\r\n}\r\n\r\nfunction removeCustomPropApply(cssText) {\r\n  return cssText\r\n    .replace(RX.mixinApply, '')\r\n    .replace(RX.varApply, '');\r\n}\r\n\r\nexport let types = {\r\n  STYLE_RULE: 1,\r\n  KEYFRAMES_RULE: 7,\r\n  MEDIA_RULE: 4,\r\n  MIXIN_RULE: 1000\r\n}\r\n\r\nlet OPEN_BRACE = '{';\r\nlet CLOSE_BRACE = '}';\r\n\r\n// helper regexp's\r\nlet RX = {\r\n  comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\r\n  port: /@import[^;]*;/gim,\r\n  customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\r\n  mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\r\n  mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\r\n  varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\r\n  keyframesRule: /^@[^\\s]*keyframes/,\r\n  multipleSpaces: /\\s+/g\r\n}\r\n\r\nlet VAR_START = '--';\r\nlet MEDIA_START = '@media';\r\nlet AT_START = '@';\r\n","/**\r\n@license\r\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n\r\n'use strict';\r\n\r\nimport {nativeShadow, nativeCssVariables} from './style-settings'\r\nimport {parse, stringify, types} from './css-parse'\r\n\r\nexport function getElementNames(element) {\r\n  if (element.hasAttribute('is')) {\r\n    return { \r\n      elementName: element.getAttribute('is'),\r\n      typeExtension: element.localName\r\n    };\r\n  } else {\r\n    return {\r\n      elementName: element.localName,\r\n      typeExtension: null\r\n    };\r\n  }\r\n}\r\n\r\nexport function toCssText (rules, callback) {\r\n  if (typeof rules === 'string') {\r\n    rules = parse(rules);\r\n  }\r\n  if (callback) {\r\n    forEachRule(rules, callback);\r\n  }\r\n  return stringify(rules, nativeCssVariables);\r\n}\r\n\r\nexport function rulesForStyle(style) {\r\n  if (!style.__cssRules && style.textContent) {\r\n    style.__cssRules = parse(style.textContent);\r\n  }\r\n  return style.__cssRules;\r\n}\r\n\r\n// Tests if a rule is a keyframes selector, which looks almost exactly\r\n// like a normal selector but is not (it has nothing to do with scoping\r\n// for example).\r\nexport function isKeyframesSelector(rule) {\r\n  return rule.parent &&\r\n  rule.parent.type === types.KEYFRAMES_RULE;\r\n}\r\n\r\nexport function forEachRule(node, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {\r\n  if (!node) {\r\n    return;\r\n  }\r\n  let skipRules = false;\r\n  if (onlyActiveRules) {\r\n    if (node.type === types.MEDIA_RULE) {\r\n      let matchMedia = node.selector.match(rx.MEDIA_MATCH);\r\n      if (matchMedia) {\r\n        // if rule is a non matching @media rule, skip subrules\r\n        if (!window.matchMedia(matchMedia[1]).matches) {\r\n          skipRules = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  if (node.type === types.STYLE_RULE) {\r\n    styleRuleCallback(node);\r\n  } else if (keyframesRuleCallback &&\r\n    node.type === types.KEYFRAMES_RULE) {\r\n    keyframesRuleCallback(node);\r\n  } else if (node.type === types.MIXIN_RULE) {\r\n    skipRules = true;\r\n  }\r\n  let r$ = node.rules;\r\n  if (r$ && !skipRules) {\r\n    for (let i=0, l=r$.length, r; (i<l) && (r=r$[i]); i++) {\r\n      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);\r\n    }\r\n  }\r\n}\r\n\r\n// add a string of cssText to the document.\r\nexport function applyCss(cssText, moniker, target, contextNode) {\r\n  let style = createScopeStyle(cssText, moniker);\r\n  return applyStyle(style, target, contextNode);\r\n}\r\n\r\nexport function applyStyle(style, target, contextNode) {\r\n  target = target || document.head;\r\n  let after = (contextNode && contextNode.nextSibling) ||\r\n  target.firstChild;\r\n  lastHeadApplyNode = style;\r\n  return target.insertBefore(style, after);\r\n}\r\n\r\nexport function createScopeStyle(cssText, moniker) {\r\n  let style = document.createElement('style');\r\n  if (moniker) {\r\n    style.setAttribute('scope', moniker);\r\n  }\r\n  style.textContent = cssText;\r\n  return style;\r\n}\r\n\r\nlet lastHeadApplyNode = null;\r\n\r\n// insert a comment node as a styling position placeholder.\r\nexport function applyStylePlaceHolder(moniker) {\r\n  let placeHolder = document.createComment(' Shady DOM styles for ' +\r\n    moniker + ' ');\r\n  let after = lastHeadApplyNode ?\r\n    lastHeadApplyNode.nextSibling : null;\r\n  let scope = document.head;\r\n  scope.insertBefore(placeHolder, after || scope.firstChild);\r\n  lastHeadApplyNode = placeHolder;\r\n  return placeHolder;\r\n}\r\n\r\nexport function isTargetedBuild(buildType) {\r\n  return nativeShadow ? buildType === 'shadow' : buildType === 'shady';\r\n}\r\n\r\n// cssBuildTypeForModule: function (module) {\r\n//   let dm = Polymer.DomModule.import(module);\r\n//   if (dm) {\r\n//     return getCssBuildType(dm);\r\n//   }\r\n// },\r\n//\r\nexport function getCssBuildType(element) {\r\n  return element.getAttribute('css-build');\r\n}\r\n\r\n// Walk from text[start] matching parens\r\n// returns position of the outer end paren\r\nfunction findMatchingParen(text, start) {\r\n  let level = 0;\r\n  for (let i=start, l=text.length; i < l; i++) {\r\n    if (text[i] === '(') {\r\n      level++;\r\n    } else if (text[i] === ')') {\r\n      if (--level === 0) {\r\n        return i;\r\n      }\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\nexport function processVariableAndFallback(str, callback) {\r\n  // find 'var('\r\n  let start = str.indexOf('var(');\r\n  if (start === -1) {\r\n    // no var?, everything is prefix\r\n    return callback(str, '', '', '');\r\n  }\r\n  //${prefix}var(${inner})${suffix}\r\n  let end = findMatchingParen(str, start + 3);\r\n  let inner = str.substring(start + 4, end);\r\n  let prefix = str.substring(0, start);\r\n  // suffix may have other variables\r\n  let suffix = processVariableAndFallback(str.substring(end + 1), callback);\r\n  let comma = inner.indexOf(',');\r\n  // value and fallback args should be trimmed to match in property lookup\r\n  if (comma === -1) {\r\n    // variable, no fallback\r\n    return callback(prefix, inner.trim(), '', suffix);\r\n  }\r\n  // var(${value},${fallback})\r\n  let value = inner.substring(0, comma).trim();\r\n  let fallback = inner.substring(comma + 1).trim();\r\n  return callback(prefix, value, fallback, suffix);\r\n}\r\n\r\nexport let rx = {\r\n  VAR_ASSIGN: /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:([^;{]*)|{([^}]*)})(?:(?=[;\\s}])|$)/gi,\r\n  MIXIN_MATCH: /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi,\r\n  VAR_CONSUMED: /(--[\\w-]+)\\s*([:,;)]|$)/gi,\r\n  ANIMATION_MATCH: /(animation\\s*:)|(animation-name\\s*:)/,\r\n  MEDIA_MATCH: /@media[^(]*(\\([^)]*\\))/,\r\n  IS_VAR: /^--/,\r\n  BRACKETED: /\\{[^}]*\\}/g,\r\n  HOST_PREFIX: '(?:^|[^.#[:])',\r\n  HOST_SUFFIX: '($|[.:[\\\\s>+~])'\r\n}\r\n","/**\r\n@license\r\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n\r\n'use strict';\r\n\r\nexport default {};\r\n","/**\r\n@license\r\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n/**\r\n * The apply shim simulates the behavior of `@apply` proposed at\r\n * https://tabatkins.github.io/specs/css-apply-rule/.\r\n * The approach is to convert a property like this:\r\n *\r\n *    --foo: {color: red; background: blue;}\r\n *\r\n * to this:\r\n *\r\n *    --foo_-_color: red;\r\n *    --foo_-_background: blue;\r\n *\r\n * Then where `@apply --foo` is used, that is converted to:\r\n *\r\n *    color: var(--foo_-_color);\r\n *    background: var(--foo_-_background);\r\n *\r\n * This approach generally works but there are some issues and limitations.\r\n * Consider, for example, that somewhere *between* where `--foo` is set and used,\r\n * another element sets it to:\r\n *\r\n *    --foo: { border: 2px solid red; }\r\n *\r\n * We must now ensure that the color and background from the previous setting\r\n * do not apply. This is accomplished by changing the property set to this:\r\n *\r\n *    --foo_-_border: 2px solid red;\r\n *    --foo_-_color: initial;\r\n *    --foo_-_background: initial;\r\n *\r\n * This works but introduces one new issue.\r\n * Consider this setup at the point where the `@apply` is used:\r\n *\r\n *    background: orange;\r\n *    @apply --foo;\r\n *\r\n * In this case the background will be unset (initial) rather than the desired\r\n * `orange`. We address this by altering the property set to use a fallback\r\n * value like this:\r\n *\r\n *    color: var(--foo_-_color);\r\n *    background: var(--foo_-_background, orange);\r\n *    border: var(--foo_-_border);\r\n *\r\n * Note that the default is retained in the property set and the `background` is\r\n * the desired `orange`. This leads us to a limitation.\r\n *\r\n * Limitation 1:\r\n\r\n * Only properties in the rule where the `@apply`\r\n * is used are considered as default values.\r\n * If another rule matches the element and sets `background` with\r\n * less specificity than the rule in which `@apply` appears,\r\n * the `background` will not be set.\r\n *\r\n * Limitation 2:\r\n *\r\n * When using Polymer's `updateStyles` api, new properties may not be set for\r\n * `@apply` properties.\r\n\r\n*/\r\n\r\n'use strict';\r\n\r\nimport {rx, forEachRule, processVariableAndFallback, rulesForStyle} from './style-util'\r\nimport templateMap from './template-map'\r\n\r\nlet MIXIN_MATCH = rx.MIXIN_MATCH;\r\nlet VAR_ASSIGN = rx.VAR_ASSIGN;\r\n\r\nlet APPLY_NAME_CLEAN = /;\\s*/m;\r\nlet INITIAL_INHERIT = /^\\s*(initial)|(inherit)\\s*$/;\r\n\r\n// separator used between mixin-name and mixin-property-name when producing properties\r\n// NOTE: plain '-' may cause collisions in user styles\r\nlet MIXIN_VAR_SEP = '_-_';\r\n\r\n// map of mixin to property names\r\n// --foo: {border: 2px} -> {properties: {(--foo, ['border'])}, dependants: {'element-name': proto}}\r\nclass MixinMap {\r\n  constructor() {\r\n    this._map = {};\r\n  }\r\n  set(name, props) {\r\n    name = name.trim();\r\n    this._map[name] = {\r\n      properties: props,\r\n      dependants: {}\r\n    }\r\n  }\r\n  get(name) {\r\n    name = name.trim();\r\n    return this._map[name];\r\n  }\r\n}\r\n\r\nclass ApplyShim {\r\n  constructor() {\r\n    this._currentTemplate = null;\r\n    this._measureElement = null;\r\n    this._map = new MixinMap();\r\n    this._separator = MIXIN_VAR_SEP;\r\n    this._boundProduceCssProperties = (\r\n      matchText, propertyName, valueProperty, valueMixin) =>\r\n        this._produceCssProperties(\r\n          matchText, propertyName, valueProperty, valueMixin);\r\n  }\r\n  transformStyle(style, elementName) {\r\n    let ast = rulesForStyle(style);\r\n    this.transformRules(ast, elementName);\r\n    return ast;\r\n  }\r\n  transformRules(rules, elementName) {\r\n    this._currentTemplate = templateMap[elementName];\r\n    forEachRule(rules, (r) => {\r\n      this.transformRule(r);\r\n    });\r\n    if (this._currentTemplate) {\r\n      this._currentTemplate.__applyShimInvalid = false;\r\n    }\r\n    this._currentTemplate = null;\r\n  }\r\n  transformRule(rule) {\r\n    rule.cssText = this.transformCssText(rule.parsedCssText);\r\n    // :root was only used for variable assignment in property shim,\r\n    // but generates invalid selectors with real properties.\r\n    // replace with `:host > *`, which serves the same effect\r\n    if (rule.selector === ':root') {\r\n      rule.selector = ':host > *';\r\n    }\r\n  }\r\n  transformCssText(cssText) {\r\n    // produce variables\r\n    cssText = cssText.replace(VAR_ASSIGN, this._boundProduceCssProperties);\r\n    // consume mixins\r\n    return this._consumeCssProperties(cssText);\r\n  }\r\n  _getInitialValueForProperty(property) {\r\n    if (!this._measureElement) {\r\n      this._measureElement = document.createElement('meta');\r\n      this._measureElement.style.all = 'initial';\r\n      document.head.appendChild(this._measureElement);\r\n    }\r\n    return window.getComputedStyle(this._measureElement).getPropertyValue(property);\r\n  }\r\n  // replace mixin consumption with variable consumption\r\n  _consumeCssProperties(text) {\r\n    let m;\r\n    // loop over text until all mixins with defintions have been applied\r\n    while((m = MIXIN_MATCH.exec(text))) {\r\n      let matchText = m[0];\r\n      let mixinName = m[1];\r\n      let idx = m.index;\r\n      // collect properties before apply to be \"defaults\" if mixin might override them\r\n      // match includes a \"prefix\", so find the start and end positions of @apply\r\n      let applyPos = idx + matchText.indexOf('@apply');\r\n      let afterApplyPos = idx + matchText.length;\r\n      // find props defined before this @apply\r\n      let textBeforeApply = text.slice(0, applyPos);\r\n      let textAfterApply = text.slice(afterApplyPos);\r\n      let defaults = this._cssTextToMap(textBeforeApply);\r\n      let replacement = this._atApplyToCssProperties(mixinName, defaults);\r\n      // use regex match position to replace mixin, keep linear processing time\r\n      text = [textBeforeApply, replacement, textAfterApply].join('');\r\n      // move regex search to _after_ replacement\r\n      MIXIN_MATCH.lastIndex = idx + replacement.length;\r\n    }\r\n    return text;\r\n  }\r\n  // produce variable consumption at the site of mixin consumption\r\n  // @apply --foo; -> for all props (${propname}: var(--foo_-_${propname}, ${fallback[propname]}}))\r\n  // Example:\r\n  // border: var(--foo_-_border); padding: var(--foo_-_padding, 2px)\r\n  _atApplyToCssProperties(mixinName, fallbacks) {\r\n    mixinName = mixinName.replace(APPLY_NAME_CLEAN, '');\r\n    let vars = [];\r\n    let mixinEntry = this._map.get(mixinName);\r\n    // if we depend on a mixin before it is created\r\n    // make a sentinel entry in the map to add this element as a dependency for when it is defined.\r\n    if (!mixinEntry) {\r\n      this._map.set(mixinName, {});\r\n      mixinEntry = this._map.get(mixinName);\r\n    }\r\n    if (mixinEntry) {\r\n      if (this._currentTemplate) {\r\n        mixinEntry.dependants[this._currentTemplate.name] = this._currentTemplate;\r\n      }\r\n      let p, parts, f;\r\n      for (p in mixinEntry.properties) {\r\n        f = fallbacks && fallbacks[p];\r\n        parts = [p, ': var(', mixinName, MIXIN_VAR_SEP, p];\r\n        if (f) {\r\n          parts.push(',', f);\r\n        }\r\n        parts.push(')');\r\n        vars.push(parts.join(''));\r\n      }\r\n    }\r\n    return vars.join('; ');\r\n  }\r\n\r\n  _replaceInitialOrInherit(property, value) {\r\n    let match = INITIAL_INHERIT.exec(value);\r\n    if (match) {\r\n      if (match[1]) {\r\n        // initial\r\n        // replace `initial` with the concrete initial value for this property\r\n        value = ApplyShim._getInitialValueForProperty(property);\r\n      } else {\r\n        // inherit\r\n        // with this purposfully illegal value, the variable will be invalid at\r\n        // compute time (https://www.w3.org/TR/css-variables/#invalid-at-computed-value-time)\r\n        // and for inheriting values, will behave similarly\r\n        // we cannot support the same behavior for non inheriting values like 'border'\r\n        value = 'apply-shim-inherit';\r\n      }\r\n    }\r\n    return value;\r\n  }\r\n\r\n  // \"parse\" a mixin definition into a map of properties and values\r\n  // cssTextToMap('border: 2px solid black') -> ('border', '2px solid black')\r\n  _cssTextToMap(text) {\r\n    let props = text.split(';');\r\n    let property, value;\r\n    let out = {};\r\n    for (let i = 0, p, sp; i < props.length; i++) {\r\n      p = props[i];\r\n      if (p) {\r\n        sp = p.split(':');\r\n        // ignore lines that aren't definitions like @media\r\n        if (sp.length > 1) {\r\n          property = sp[0].trim();\r\n          // some properties may have ':' in the value, like data urls\r\n          value = this._replaceInitialOrInherit(property, sp.slice(1).join(':'));\r\n          out[property] = value;\r\n        }\r\n      }\r\n    }\r\n    return out;\r\n  }\r\n\r\n  _invalidateMixinEntry(mixinEntry) {\r\n    for (let elementName in mixinEntry.dependants) {\r\n      if (elementName !== this._currentTemplate) {\r\n        mixinEntry.dependants[elementName].__applyShimInvalid = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  _produceCssProperties(matchText, propertyName, valueProperty, valueMixin) {\r\n    // handle case where property value is a mixin\r\n    if (valueProperty) {\r\n      // form: --mixin2: var(--mixin1), where --mixin1 is in the map\r\n      processVariableAndFallback(valueProperty, (prefix, value) => {\r\n        if (value && this._map.get(value)) {\r\n          valueMixin = '@apply ' + value + ';';\r\n        }\r\n      });\r\n    }\r\n    if (!valueMixin) {\r\n      return matchText;\r\n    }\r\n    let mixinAsProperties = this._consumeCssProperties(valueMixin);\r\n    let prefix = matchText.slice(0, matchText.indexOf('--'));\r\n    let mixinValues = this._cssTextToMap(mixinAsProperties);\r\n    let combinedProps = mixinValues;\r\n    let mixinEntry = this._map.get(propertyName);\r\n    let oldProps = mixinEntry && mixinEntry.properties;\r\n    if (oldProps) {\r\n      // NOTE: since we use mixin, the map of properties is updated here\r\n      // and this is what we want.\r\n      combinedProps = Object.assign(Object.create(oldProps), mixinValues);\r\n    } else {\r\n      this._map.set(propertyName, combinedProps);\r\n    }\r\n    let out = [];\r\n    let p, v;\r\n    // set variables defined by current mixin\r\n    let needToInvalidate = false;\r\n    for (p in combinedProps) {\r\n      v = mixinValues[p];\r\n      // if property not defined by current mixin, set initial\r\n      if (v === undefined) {\r\n        v = 'initial';\r\n      }\r\n      if (oldProps && !(p in oldProps)) {\r\n        needToInvalidate = true;\r\n      }\r\n      out.push(propertyName + MIXIN_VAR_SEP + p + ': ' + v);\r\n    }\r\n    if (needToInvalidate) {\r\n      this._invalidateMixinEntry(mixinEntry);\r\n    }\r\n    if (mixinEntry) {\r\n      mixinEntry.properties = combinedProps;\r\n    }\r\n    // because the mixinMap is global, the mixin might conflict with\r\n    // a different scope's simple variable definition:\r\n    // Example:\r\n    // some style somewhere:\r\n    // --mixin1:{ ... }\r\n    // --mixin2: var(--mixin1);\r\n    // some other element:\r\n    // --mixin1: 10px solid red;\r\n    // --foo: var(--mixin1);\r\n    // In this case, we leave the original variable definition in place.\r\n    if (valueProperty) {\r\n      prefix = matchText + ';' + prefix;\r\n    }\r\n    return prefix + out.join('; ') + ';';\r\n  }\r\n}\r\n\r\nlet applyShim = new ApplyShim();\r\nwindow['ApplyShim'] = applyShim;\r\nexport default applyShim;\r\n","/**\r\n@license\r\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n\r\n'use strict';\r\n\r\nimport * as StyleUtil from './style-util'\r\nimport {nativeShadow} from './style-settings'\r\n\r\n/* Transforms ShadowDOM styling into ShadyDOM styling\r\n\r\n* scoping:\r\n\r\n  * elements in scope get scoping selector class=\"x-foo-scope\"\r\n  * selectors re-written as follows:\r\n\r\n    div button -> div.x-foo-scope button.x-foo-scope\r\n\r\n* :host -> scopeName\r\n\r\n* :host(...) -> scopeName...\r\n\r\n* ::slotted(...) -> scopeName > ...\r\n\r\n* ...:dir(ltr|rtl) -> [dir=\"ltr|rtl\"] ..., ...[dir=\"ltr|rtl\"]\r\n\r\n* :host(:dir[rtl]) -> scopeName:dir(rtl) -> [dir=\"rtl\"] scopeName, scopeName[dir=\"rtl\"]\r\n\r\n*/\r\nexport let StyleTransformer = {\r\n\r\n  // Given a node and scope name, add a scoping class to each node\r\n  // in the tree. This facilitates transforming css into scoped rules.\r\n  dom: function(node, scope, shouldRemoveScope) {\r\n    // one time optimization to skip scoping...\r\n    if (node.__styleScoped) {\r\n      node.__styleScoped = null;\r\n    } else {\r\n      this._transformDom(node, scope || '', shouldRemoveScope);\r\n    }\r\n  },\r\n\r\n  _transformDom: function(node, selector, shouldRemoveScope) {\r\n    if (node.classList) {\r\n      this.element(node, selector, shouldRemoveScope);\r\n    }\r\n    let c$ = (node.localName === 'template') ?\r\n      (node.content || node._content).childNodes :\r\n      node.children || node.childNodes;\r\n    if (c$) {\r\n      for (let i=0; i<c$.length; i++) {\r\n        this._transformDom(c$[i], selector, shouldRemoveScope);\r\n      }\r\n    }\r\n  },\r\n\r\n  element: function(element, scope, shouldRemoveScope) {\r\n    // note: if using classes, we add both the general 'style-scope' class\r\n    // as well as the specific scope. This enables easy filtering of all\r\n    // `style-scope` elements\r\n    if (scope) {\r\n      // note: svg on IE does not have classList so fallback to class\r\n      if (element.classList) {\r\n        if (shouldRemoveScope) {\r\n          element.classList.remove(SCOPE_NAME);\r\n          element.classList.remove(scope);\r\n        } else {\r\n          element.classList.add(SCOPE_NAME);\r\n          element.classList.add(scope);\r\n        }\r\n      } else if (element.getAttribute) {\r\n        let c = element.getAttribute(CLASS);\r\n        if (shouldRemoveScope) {\r\n          if (c) {\r\n            element.setAttribute(CLASS, c.replace(SCOPE_NAME, '')\r\n            .replace(scope, ''));\r\n          }\r\n        } else {\r\n          element.setAttribute(CLASS, (c ? c + ' ' : '') +\r\n          SCOPE_NAME + ' ' + scope);\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  elementStyles: function(elementName, typeExtension, buildType, rules, callback) {\r\n    // no need to shim selectors if settings.useNativeShadow, also\r\n    // a shady css build will already have transformed selectors\r\n    // NOTE: This method may be called as part of static or property shimming.\r\n    // When there is a targeted build it will not be called for static shimming,\r\n    // but when the property shim is used it is called and should opt out of\r\n    // static shimming work when a proper build exists.\r\n    let cssText = (nativeShadow || buildType === 'shady') ?\r\n      StyleUtil.toCssText(rules, callback) :\r\n      this.css(elementName, typeExtension, rules, callback) + '\\n\\n';\r\n    return cssText.trim();\r\n  },\r\n\r\n  // Given a string of cssText and a scoping string (scope), returns\r\n  // a string of scoped css where each selector is transformed to include\r\n  // a class created from the scope. ShadowDOM selectors are also transformed\r\n  // (e.g. :host) to use the scoping selector.\r\n  css: function(elementName, typeExtension, rules, callback) {\r\n    let hostScope = this._calcHostScope(elementName, typeExtension);\r\n    let elementScope = this._calcElementScope(elementName);\r\n    return StyleUtil.toCssText(rules, rule => {\r\n      if (!rule.isScoped) {\r\n        this.rule(rule, elementScope, hostScope);\r\n        rule.isScoped = true;\r\n      }\r\n      if (callback) {\r\n        callback(rule, elementScope, hostScope);\r\n      }\r\n    });\r\n  },\r\n\r\n  _calcElementScope: function (elementName) {\r\n    return elementName ? CSS_CLASS_PREFIX + elementName : '';\r\n  },\r\n\r\n  _calcHostScope: function(elementName, typeExtension) {\r\n    return typeExtension ? `[is=${elementName}]` : elementName;\r\n  },\r\n\r\n  rule: function (rule, scope, hostScope) {\r\n    this._transformRule(rule, this._transformComplexSelector,\r\n      scope, hostScope);\r\n  },\r\n\r\n  // transforms a css rule to a scoped rule.\r\n  _transformRule: function(rule, transformer, scope, hostScope) {\r\n    // NOTE: save transformedSelector for subsequent matching of elements\r\n    // against selectors (e.g. when calculating style properties)\r\n    rule.selector = rule.transformedSelector =\r\n      this._transformRuleCss(rule, transformer, scope, hostScope);\r\n  },\r\n\r\n  _transformRuleCss: function(rule, transformer, scope, hostScope) {\r\n    let p$ = rule.selector.split(COMPLEX_SELECTOR_SEP);\r\n    // we want to skip transformation of rules that appear in keyframes,\r\n    // because they are keyframe selectors, not element selectors.\r\n    if (!StyleUtil.isKeyframesSelector(rule)) {\r\n      for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\r\n        p$[i] = transformer.call(this, p, scope, hostScope);\r\n      }\r\n    }\r\n    return p$.join(COMPLEX_SELECTOR_SEP);\r\n  },\r\n\r\n  _transformComplexSelector: function(selector, scope, hostScope) {\r\n    let stop = false;\r\n    selector = selector.trim();\r\n    selector = selector.replace(SLOTTED_START, `${HOST} $1`)\r\n    selector = selector.replace(SIMPLE_SELECTOR_SEP, (m, c, s) => {\r\n      if (!stop) {\r\n        let info = this._transformCompoundSelector(s, c, scope, hostScope);\r\n        stop = stop || info.stop;\r\n        c = info.combinator;\r\n        s = info.value;\r\n      }\r\n      return c + s;\r\n    });\r\n    return selector;\r\n  },\r\n\r\n  _transformCompoundSelector: function(selector, combinator, scope, hostScope) {\r\n    // replace :host with host scoping class\r\n    let slottedIndex = selector.indexOf(SLOTTED);\r\n    if (selector.indexOf(HOST) >= 0) {\r\n      selector = this._transformHostSelector(selector, hostScope);\r\n    // replace other selectors with scoping class\r\n    } else if (slottedIndex !== 0) {\r\n      selector = scope ? this._transformSimpleSelector(selector, scope) :\r\n        selector;\r\n    }\r\n    // mark ::slotted() scope jump to replace with descendant selector + arg\r\n    // also ignore left-side combinator\r\n    let slotted = false;\r\n    if (slottedIndex >= 0) {\r\n      combinator = '';\r\n      slotted = true;\r\n    }\r\n    // process scope jumping selectors up to the scope jump and then stop\r\n    let stop;\r\n    if (slotted) {\r\n      stop = true;\r\n      if (slotted) {\r\n        // .zonk ::slotted(.foo) -> .zonk.scope > .foo\r\n        selector = selector.replace(SLOTTED_PAREN, (m, paren) => ` > ${paren}`);\r\n      }\r\n    }\r\n    selector = selector.replace(DIR_PAREN, (m, before, dir) =>\r\n      `[dir=\"${dir}\"] ${before}, ${before}[dir=\"${dir}\"]`);\r\n    return {value: selector, combinator, stop};\r\n  },\r\n\r\n  _transformSimpleSelector: function(selector, scope) {\r\n    let p$ = selector.split(PSEUDO_PREFIX);\r\n    p$[0] += scope;\r\n    return p$.join(PSEUDO_PREFIX);\r\n  },\r\n\r\n  // :host(...) -> scopeName...\r\n  _transformHostSelector: function(selector, hostScope) {\r\n    let m = selector.match(HOST_PAREN);\r\n    let paren = m && m[2].trim() || '';\r\n    if (paren) {\r\n      if (!paren[0].match(SIMPLE_SELECTOR_PREFIX)) {\r\n        // paren starts with a type selector\r\n        let typeSelector = paren.split(SIMPLE_SELECTOR_PREFIX)[0];\r\n        // if the type selector is our hostScope then avoid pre-pending it\r\n        if (typeSelector === hostScope) {\r\n          return paren;\r\n        // otherwise, this selector should not match in this scope so\r\n        // output a bogus selector.\r\n        } else {\r\n          return SELECTOR_NO_MATCH;\r\n        }\r\n      } else {\r\n        // make sure to do a replace here to catch selectors like:\r\n        // `:host(.foo)::before`\r\n        return selector.replace(HOST_PAREN, function(m, host, paren) {\r\n          return hostScope + paren;\r\n        });\r\n      }\r\n    // if no paren, do a straight :host replacement.\r\n    // TODO(sorvell): this should not strictly be necessary but\r\n    // it's needed to maintain support for `:host[foo]` type selectors\r\n    // which have been improperly used under Shady DOM. This should be\r\n    // deprecated.\r\n    } else {\r\n      return selector.replace(HOST, hostScope);\r\n    }\r\n  },\r\n\r\n  documentRule: function(rule) {\r\n    // reset selector in case this is redone.\r\n    rule.selector = rule.parsedSelector;\r\n    this.normalizeRootSelector(rule);\r\n    this._transformRule(rule, this._transformDocumentSelector);\r\n  },\r\n\r\n  normalizeRootSelector: function(rule) {\r\n    if (rule.selector === ROOT) {\r\n      rule.selector = 'html';\r\n    }\r\n  },\r\n\r\n  _transformDocumentSelector: function(selector) {\r\n    return selector.match(SLOTTED) ?\r\n      this._transformComplexSelector(selector, SCOPE_DOC_SELECTOR) :\r\n      this._transformSimpleSelector(selector.trim(), SCOPE_DOC_SELECTOR);\r\n  }\r\n};\r\n\r\nlet SCOPE_NAME = 'style-scope';\r\nlet SCOPE_DOC_SELECTOR = `:not(.${SCOPE_NAME})`;\r\nlet COMPLEX_SELECTOR_SEP = ',';\r\nlet SIMPLE_SELECTOR_SEP = /(^|[\\s>+~]+)((?:\\[.+?\\]|[^\\s>+~=\\[])+)/g;\r\nlet SIMPLE_SELECTOR_PREFIX = /[[.:#*]/;\r\nlet HOST = ':host';\r\nlet ROOT = ':root';\r\nlet SLOTTED = '::slotted';\r\nlet SLOTTED_START = new RegExp(`^(${SLOTTED})`);\r\n// NOTE: this supports 1 nested () pair for things like\r\n// :host(:not([selected]), more general support requires\r\n// parsing which seems like overkill\r\nlet HOST_PAREN = /(:host)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\r\n// similar to HOST_PAREN\r\nlet SLOTTED_PAREN = /(?:::slotted)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\r\nlet DIR_PAREN = /(.*):dir\\((?:(ltr|rtl))\\)/;\r\nlet CSS_CLASS_PREFIX = '.';\r\nlet PSEUDO_PREFIX = ':';\r\nlet CLASS = 'class';\r\nlet SELECTOR_NO_MATCH = 'should_not_match';\r\n","/**\r\n@license\r\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n\r\n'use strict';\r\n\r\nexport default class StyleInfo {\r\n  static get(node) {\r\n    return node.__styleInfo;\r\n  }\r\n  static set(node, styleInfo) {\r\n    node.__styleInfo = styleInfo;\r\n    return styleInfo;\r\n  }\r\n  constructor(ast, placeholder, ownPropertyNames, elementName, typeExtension, cssBuild) {\r\n    this.styleRules = ast || null;\r\n    this.placeholder = placeholder || null;\r\n    this.ownPropertyNames = ownPropertyNames || [];\r\n    this.overrideStyleProperties = {};\r\n    this.elementName = elementName || '';\r\n    this.cssBuild = cssBuild || '';\r\n    this.typeExtension = typeExtension || '';\r\n    this.styleProperties = null;\r\n    this.scopeSelector = null;\r\n    this.customStyle = null;\r\n  }\r\n}\r\n","/**\r\n@license\r\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n\r\n'use strict';\r\n\r\nimport {removeCustomPropAssignment} from './css-parse'\r\nimport {nativeShadow} from './style-settings'\r\nimport {StyleTransformer} from './style-transformer'\r\nimport * as StyleUtil from './style-util'\r\nimport StyleInfo from './style-info'\r\n\r\n// TODO: dedupe with shady\r\nlet p = window.Element.prototype;\r\nlet matchesSelector = p.matches || p.matchesSelector ||\r\n  p.mozMatchesSelector || p.msMatchesSelector ||\r\n  p.oMatchesSelector || p.webkitMatchesSelector;\r\n\r\nlet IS_IE = navigator.userAgent.match('Trident');\r\n\r\nexport let StyleProperties = {\r\n\r\n  // decorates styles with rule info and returns an array of used style\r\n  // property names\r\n  decorateStyles: function(rules) {\r\n    let properties = {}, keyframes = [], ruleIndex = 0;\r\n    StyleUtil.forEachRule(rules, rule => {\r\n      this.decorateRule(rule);\r\n      // mark in-order position of ast rule in styles block, used for cache key\r\n      rule.index = ruleIndex++;\r\n      this.collectPropertiesInCssText(rule.propertyInfo.cssText, properties);\r\n    }, rule => keyframes.push(rule));\r\n    // Cache all found keyframes rules for later reference:\r\n    rules._keyframes = keyframes;\r\n    // return this list of property names *consumes* in these styles.\r\n    let names = [];\r\n    for (let name in properties) {\r\n      names.push(name);\r\n    }\r\n    return names;\r\n  },\r\n\r\n  // decorate a single rule with property info\r\n  decorateRule: function(rule) {\r\n    if (rule.propertyInfo) {\r\n      return rule.propertyInfo;\r\n    }\r\n    let info = {}, properties = {};\r\n    let hasProperties = this.collectProperties(rule, properties);\r\n    if (hasProperties) {\r\n      info.properties = properties;\r\n      // TODO(sorvell): workaround parser seeing mixins as additional rules\r\n      rule.rules = null;\r\n    }\r\n    info.cssText = this.collectCssText(rule);\r\n    rule.propertyInfo = info;\r\n    return info;\r\n  },\r\n\r\n  // collects the custom properties from a rule's cssText\r\n  collectProperties: function(rule, properties) {\r\n    let info = rule.propertyInfo;\r\n    if (info) {\r\n      if (info.properties) {\r\n        Object.assign(properties, info.properties);\r\n        return true;\r\n      }\r\n    } else {\r\n      let m, rx = this.rx.VAR_ASSIGN;\r\n      let cssText = rule.parsedCssText;\r\n      let value;\r\n      let any;\r\n      while ((m = rx.exec(cssText))) {\r\n        // note: group 2 is var, 3 is mixin\r\n        value = (m[2] || m[3]).trim();\r\n        // value of 'inherit' or 'unset' is equivalent to not setting the property here\r\n        if (value !== 'inherit' || value !== 'unset') {\r\n          properties[m[1].trim()] = value;\r\n        }\r\n        any = true;\r\n      }\r\n      return any;\r\n    }\r\n\r\n  },\r\n\r\n  // returns cssText of properties that consume variables/mixins\r\n  collectCssText: function(rule) {\r\n    return this.collectConsumingCssText(rule.parsedCssText);\r\n  },\r\n\r\n  // NOTE: we support consumption inside mixin assignment\r\n  // but not production, so strip out {...}\r\n  collectConsumingCssText: function(cssText) {\r\n    return cssText.replace(this.rx.BRACKETED, '')\r\n      .replace(this.rx.VAR_ASSIGN, '');\r\n  },\r\n\r\n  collectPropertiesInCssText: function(cssText, props) {\r\n    let m;\r\n    while ((m = this.rx.VAR_CONSUMED.exec(cssText))) {\r\n      let name = m[1];\r\n      // This regex catches all variable names, and following non-whitespace char\r\n      // If next char is not ':', then variable is a consumer\r\n      if (m[2] !== ':') {\r\n        props[name] = true;\r\n      }\r\n    }\r\n  },\r\n\r\n  // turns custom properties into realized values.\r\n  reify: function(props) {\r\n    // big perf optimization here: reify only *own* properties\r\n    // since this object has __proto__ of the element's scope properties\r\n    let names = Object.getOwnPropertyNames(props);\r\n    for (let i=0, n; i < names.length; i++) {\r\n      n = names[i];\r\n      props[n] = this.valueForProperty(props[n], props);\r\n    }\r\n  },\r\n\r\n  // given a property value, returns the reified value\r\n  // a property value may be:\r\n  // (1) a literal value like: red or 5px;\r\n  // (2) a variable value like: var(--a), var(--a, red), or var(--a, --b) or\r\n  // var(--a, var(--b));\r\n  // (3) a literal mixin value like { properties }. Each of these properties\r\n  // can have values that are: (a) literal, (b) variables, (c) @apply mixins.\r\n  valueForProperty: function(property, props) {\r\n    // case (1) default\r\n    // case (3) defines a mixin and we have to reify the internals\r\n    if (property) {\r\n      if (property.indexOf(';') >=0) {\r\n        property = this.valueForProperties(property, props);\r\n      } else {\r\n        // case (2) variable\r\n        let self = this;\r\n        let fn = function(prefix, value, fallback, suffix) {\r\n          if (!value) {\r\n            return prefix + suffix;\r\n          }\r\n          let propertyValue = self.valueForProperty(props[value], props);\r\n          // if value is \"initial\", then the variable should be treated as unset\r\n          if (!propertyValue || propertyValue === 'initial') {\r\n            // fallback may be --a or var(--a) or literal\r\n            propertyValue = self.valueForProperty(props[fallback] || fallback, props) ||\r\n            fallback;\r\n          } else if (propertyValue === 'apply-shim-inherit') {\r\n            // CSS build will replace `inherit` with `apply-shim-inherit`\r\n            // for use with native css variables.\r\n            // Since we have full control, we can use `inherit` directly.\r\n            propertyValue = 'inherit';\r\n          }\r\n          return prefix + (propertyValue || '') + suffix;\r\n        };\r\n        property = StyleUtil.processVariableAndFallback(property, fn);\r\n      }\r\n    }\r\n    return property && property.trim() || '';\r\n  },\r\n\r\n  // note: we do not yet support mixin within mixin\r\n  valueForProperties: function(property, props) {\r\n    let parts = property.split(';');\r\n    for (let i=0, p, m; i<parts.length; i++) {\r\n      if ((p = parts[i])) {\r\n        this.rx.MIXIN_MATCH.lastIndex = 0;\r\n        m = this.rx.MIXIN_MATCH.exec(p);\r\n        if (m) {\r\n          p = this.valueForProperty(props[m[1]], props);\r\n        } else {\r\n          let colon = p.indexOf(':');\r\n          if (colon !== -1) {\r\n            let pp = p.substring(colon);\r\n            pp = pp.trim();\r\n            pp = this.valueForProperty(pp, props) || pp;\r\n            p = p.substring(0, colon) + pp;\r\n          }\r\n        }\r\n        parts[i] = (p && p.lastIndexOf(';') === p.length - 1) ?\r\n          // strip trailing ;\r\n          p.slice(0, -1) :\r\n          p || '';\r\n      }\r\n    }\r\n    return parts.join(';');\r\n  },\r\n\r\n  applyProperties: function(rule, props) {\r\n    let output = '';\r\n    // dynamically added sheets may not be decorated so ensure they are.\r\n    if (!rule.propertyInfo) {\r\n      this.decorateRule(rule);\r\n    }\r\n    if (rule.propertyInfo.cssText) {\r\n      output = this.valueForProperties(rule.propertyInfo.cssText, props);\r\n    }\r\n    rule.cssText = output;\r\n  },\r\n\r\n  // Apply keyframe transformations to the cssText of a given rule. The\r\n  // keyframeTransforms object is a map of keyframe names to transformer\r\n  // functions which take in cssText and spit out transformed cssText.\r\n  applyKeyframeTransforms: function(rule, keyframeTransforms) {\r\n    let input = rule.cssText;\r\n    let output = rule.cssText;\r\n    if (rule.hasAnimations == null) {\r\n      // Cache whether or not the rule has any animations to begin with:\r\n      rule.hasAnimations = this.rx.ANIMATION_MATCH.test(input);\r\n    }\r\n    // If there are no animations referenced, we can skip transforms:\r\n    if (rule.hasAnimations) {\r\n      let transform;\r\n      // If we haven't transformed this rule before, we iterate over all\r\n      // transforms:\r\n      if (rule.keyframeNamesToTransform == null) {\r\n        rule.keyframeNamesToTransform = [];\r\n        for (let keyframe in keyframeTransforms) {\r\n          transform = keyframeTransforms[keyframe];\r\n          output = transform(input);\r\n          // If the transform actually changed the CSS text, we cache the\r\n          // transform name for future use:\r\n          if (input !== output) {\r\n            input = output;\r\n            rule.keyframeNamesToTransform.push(keyframe);\r\n          }\r\n        }\r\n      } else {\r\n        // If we already have a list of keyframe names that apply to this\r\n        // rule, we apply only those keyframe name transforms:\r\n        for (let i = 0; i < rule.keyframeNamesToTransform.length; ++i) {\r\n          transform = keyframeTransforms[rule.keyframeNamesToTransform[i]];\r\n          input = transform(input);\r\n        }\r\n        output = input;\r\n      }\r\n    }\r\n    rule.cssText = output;\r\n  },\r\n\r\n  // Test if the rules in these styles matches the given `element` and if so,\r\n  // collect any custom properties into `props`.\r\n  propertyDataFromStyles: function(rules, element) {\r\n    let props = {}, self = this;\r\n    // generates a unique key for these matches\r\n    let o = [];\r\n    // note: active rules excludes non-matching @media rules\r\n    StyleUtil.forEachRule(rules, function(rule) {\r\n      // TODO(sorvell): we could trim the set of rules at declaration\r\n      // time to only include ones that have properties\r\n      if (!rule.propertyInfo) {\r\n        self.decorateRule(rule);\r\n      }\r\n      // match element against transformedSelector: selector may contain\r\n      // unwanted uniquification and parsedSelector does not directly match\r\n      // for :host selectors.\r\n      let selectorToMatch = rule.transformedSelector || rule.parsedSelector;\r\n      if (element && rule.propertyInfo.properties && selectorToMatch) {\r\n        if (matchesSelector.call(element, selectorToMatch)) {\r\n          self.collectProperties(rule, props);\r\n          // produce numeric key for these matches for lookup\r\n          addToBitMask(rule.index, o);\r\n        }\r\n      }\r\n    }, null, true);\r\n    return {properties: props, key: o};\r\n  },\r\n\r\n  whenHostOrRootRule: function(element, rule, cssBuild, callback) {\r\n    if (!rule.propertyInfo) {\r\n      this.decorateRule(rule);\r\n    }\r\n    if (!rule.propertyInfo.properties) {\r\n      return;\r\n    }\r\n    const { elementName, typeExtension } = StyleUtil.getElementNames(element);\r\n    let hostScope = StyleTransformer._calcHostScope(elementName, typeExtension);\r\n    let parsedSelector = rule.parsedSelector;\r\n    let isRoot = (parsedSelector === ':host > *' || parsedSelector === 'html');\r\n    let isHost = parsedSelector.indexOf(':host') === 0 && !isRoot;\r\n    // build info is either in scope (when scope is an element) or in the style\r\n    // when scope is the default scope; note: this allows default scope to have\r\n    // mixed mode built and unbuilt styles.\r\n    if (cssBuild === 'shady') {\r\n      // :root -> x-foo > *.x-foo for elements and html for custom-style\r\n      isRoot = parsedSelector === (hostScope + ' > *.' + hostScope) || parsedSelector.indexOf('html') !== -1;\r\n      // :host -> x-foo for elements, but sub-rules have .x-foo in them\r\n      isHost = !isRoot && parsedSelector.indexOf(hostScope) === 0;\r\n    }\r\n    if (cssBuild === 'shadow') {\r\n      isRoot = parsedSelector === ':host > *' || parsedSelector === 'html';\r\n      isHost = isHost && !isRoot;\r\n    }\r\n    if (!isRoot && !isHost) {\r\n      return;\r\n    }\r\n    let selectorToMatch = hostScope;\r\n    if (isHost) {\r\n      // need to transform :host under ShadowDOM because `:host` does not work with `matches`\r\n      if (nativeShadow && !rule.transformedSelector) {\r\n        // transform :host into a matchable selector\r\n        rule.transformedSelector =\r\n          StyleTransformer._transformRuleCss(\r\n            rule,\r\n            StyleTransformer._transformComplexSelector,\r\n            StyleTransformer._calcElementScope(elementName),\r\n            hostScope);\r\n      }\r\n      selectorToMatch = rule.transformedSelector || hostScope;\r\n    }\r\n    callback({\r\n      selector: selectorToMatch,\r\n      isHost: isHost,\r\n      isRoot: isRoot\r\n    });\r\n  },\r\n\r\n  hostAndRootPropertiesForElement: function(element, rules) {\r\n    let hostProps = {}, rootProps = {}, self = this;\r\n    // note: active rules excludes non-matching @media rules\r\n    let cssBuild = rules && rules.__cssBuild;\r\n    StyleUtil.forEachRule(rules, function(rule) {\r\n      self.whenHostOrRootRule(element, rule, cssBuild, function(info) {\r\n        if (matchesSelector.call(element, info.selector)) {\r\n          if (info.isHost) {\r\n            self.collectProperties(rule, hostProps);\r\n          } else {\r\n            self.collectProperties(rule, rootProps);\r\n          }\r\n        }\r\n      });\r\n    }, null, true);\r\n    return { rootProps, hostProps };\r\n  },\r\n\r\n  transformStyles: function(element, properties, scopeSelector) {\r\n    let { elementName, typeExtension } = StyleUtil.getElementNames(element);\r\n    let hostSelector = StyleTransformer._calcHostScope(elementName, typeExtension);\r\n    let rxHostSelector = typeExtension ? '\\\\' + hostSelector.slice(0, -1) + '\\\\]' : hostSelector;\r\n    let hostRx = new RegExp(this.rx.HOST_PREFIX + rxHostSelector + this.rx.HOST_SUFFIX);\r\n    let rules = StyleInfo.get(element).styleRules;\r\n    let keyframeTransforms = this._elementKeyframeTransforms(rules, scopeSelector);\r\n    return StyleTransformer.elementStyles(elementName, typeExtension, null, rules, rule => {\r\n      this.applyProperties(rule, properties);\r\n      if (!nativeShadow &&\r\n          !StyleUtil.isKeyframesSelector(rule) &&\r\n          rule.cssText) {\r\n        // NOTE: keyframe transforms only scope munge animation names, so it\r\n        // is not necessary to apply them in ShadowDOM.\r\n        this.applyKeyframeTransforms(rule, keyframeTransforms);\r\n        this._scopeSelector(rule, hostRx, hostSelector, scopeSelector);\r\n      }\r\n    });\r\n  },\r\n\r\n  _elementKeyframeTransforms: function(rules, scopeSelector) {\r\n    let keyframesRules = rules._keyframes;\r\n    let keyframeTransforms = {};\r\n    if (!nativeShadow && keyframesRules) {\r\n      // For non-ShadowDOM, we transform all known keyframes rules in\r\n      // advance for the current scope. This allows us to catch keyframes\r\n      // rules that appear anywhere in the stylesheet:\r\n      for (let i = 0, keyframesRule = keyframesRules[i];\r\n           i < keyframesRules.length;\r\n           keyframesRule = keyframesRules[++i]) {\r\n        this._scopeKeyframes(keyframesRule, scopeSelector);\r\n        keyframeTransforms[keyframesRule.keyframesName] =\r\n            this._keyframesRuleTransformer(keyframesRule);\r\n      }\r\n    }\r\n    return keyframeTransforms;\r\n  },\r\n\r\n  // Generate a factory for transforming a chunk of CSS text to handle a\r\n  // particular scoped keyframes rule.\r\n  _keyframesRuleTransformer: function(keyframesRule) {\r\n    return function(cssText) {\r\n      return cssText.replace(\r\n          keyframesRule.keyframesNameRx,\r\n          keyframesRule.transformedKeyframesName);\r\n    };\r\n  },\r\n\r\n  // Transforms `@keyframes` names to be unique for the current host.\r\n  // Example: @keyframes foo-anim -> @keyframes foo-anim-x-foo-0\r\n  _scopeKeyframes: function(rule, scopeId) {\r\n    rule.keyframesNameRx = new RegExp(rule.keyframesName, 'g');\r\n    rule.transformedKeyframesName = rule.keyframesName + '-' + scopeId;\r\n    rule.transformedSelector = rule.transformedSelector || rule.selector;\r\n    rule.selector = rule.transformedSelector.replace(\r\n        rule.keyframesName, rule.transformedKeyframesName);\r\n  },\r\n\r\n  // Strategy: x scope shim a selector e.g. to scope `.x-foo-42` (via classes):\r\n  // non-host selector: .a.x-foo -> .x-foo-42 .a.x-foo\r\n  // host selector: x-foo.wide -> .x-foo-42.wide\r\n  // note: we use only the scope class (.x-foo-42) and not the hostSelector\r\n  // (x-foo) to scope :host rules; this helps make property host rules\r\n  // have low specificity. They are overrideable by class selectors but,\r\n  // unfortunately, not by type selectors (e.g. overriding via\r\n  // `.special` is ok, but not by `x-foo`).\r\n  _scopeSelector: function(rule, hostRx, hostSelector, scopeId) {\r\n    rule.transformedSelector = rule.transformedSelector || rule.selector;\r\n    let selector = rule.transformedSelector;\r\n    let scope = '.' + scopeId;\r\n    let parts = selector.split(',');\r\n    for (let i=0, l=parts.length, p; (i<l) && (p=parts[i]); i++) {\r\n      parts[i] = p.match(hostRx) ?\r\n        p.replace(hostSelector, scope) :\r\n        scope + ' ' + p;\r\n    }\r\n    rule.selector = parts.join(',');\r\n  },\r\n\r\n  applyElementScopeSelector: function(element, selector, old) {\r\n    let c = element.getAttribute('class') || '';\r\n    let v = old ? c.replace(old, selector) :\r\n      (c ? c + ' ' : '') + this.XSCOPE_NAME + ' ' + selector;\r\n    if (c !== v) {\r\n      element.setAttribute('class', v);\r\n    }\r\n  },\r\n\r\n  applyElementStyle: function(element, properties, selector, style) {\r\n    // calculate cssText to apply\r\n    let cssText = style ? style.textContent || '' :\r\n      this.transformStyles(element, properties, selector);\r\n    // if shady and we have a cached style that is not style, decrement\r\n    let styleInfo = StyleInfo.get(element);\r\n    let s = styleInfo.customStyle;\r\n    if (s && !nativeShadow && (s !== style)) {\r\n      s._useCount--;\r\n      if (s._useCount <= 0 && s.parentNode) {\r\n        s.parentNode.removeChild(s);\r\n      }\r\n    }\r\n    // apply styling always under native or if we generated style\r\n    // or the cached style is not in document(!)\r\n    if (nativeShadow) {\r\n      // update existing style only under native\r\n      if (styleInfo.customStyle) {\r\n        styleInfo.customStyle.textContent = cssText;\r\n        style = styleInfo.customStyle;\r\n      // otherwise, if we have css to apply, do so\r\n      } else if (cssText) {\r\n        // apply css after the scope style of the element to help with\r\n        // style precedence rules.\r\n        style = StyleUtil.applyCss(cssText, selector, element.shadowRoot, \r\n          styleInfo.placeholder);\r\n      }\r\n    } else {\r\n      // shady and no cache hit\r\n      if (!style) {\r\n        // apply css after the scope style of the element to help with\r\n        // style precedence rules.\r\n        if (cssText) {\r\n          style = StyleUtil.applyCss(cssText, selector, null,\r\n            styleInfo.placeholder);\r\n        }\r\n      // shady and cache hit but not in document\r\n      } else if (!style.parentNode) {\r\n        StyleUtil.applyStyle(style, null, styleInfo.placeholder);\r\n      }\r\n\r\n    }\r\n    // ensure this style is our custom style and increment its use count.\r\n    if (style) {\r\n      style._useCount = style._useCount || 0;\r\n      // increment use count if we changed styles\r\n      if (styleInfo.customStyle != style) {\r\n        style._useCount++;\r\n      }\r\n      styleInfo.customStyle = style;\r\n    }\r\n    // @media rules may be stale in IE 10 and 11\r\n    if (IS_IE) {\r\n      style.textContent = style.textContent;\r\n    }\r\n    return style;\r\n  },\r\n\r\n  applyCustomStyle: function(style, properties) {\r\n    let rules = StyleUtil.rulesForStyle(style);\r\n    let self = this;\r\n    style.textContent = StyleUtil.toCssText(rules, function(rule) {\r\n      let css = rule.cssText = rule.parsedCssText;\r\n      if (rule.propertyInfo && rule.propertyInfo.cssText) {\r\n        // remove property assignments\r\n        // so next function isn't confused\r\n        // NOTE: we have 3 categories of css:\r\n        // (1) normal properties,\r\n        // (2) custom property assignments (--foo: red;),\r\n        // (3) custom property usage: border: var(--foo); @apply(--foo);\r\n        // In elements, 1 and 3 are separated for efficiency; here they\r\n        // are not and this makes this case unique.\r\n        css = removeCustomPropAssignment(css);\r\n        // replace with reified properties, scenario is same as mixin\r\n        rule.cssText = self.valueForProperties(css, properties);\r\n      }\r\n    });\r\n  },\r\n\r\n  rx: StyleUtil.rx,\r\n  XSCOPE_NAME: 'x-scope'\r\n};\r\n\r\nfunction addToBitMask(n, bits) {\r\n  let o = parseInt(n / 32);\r\n  let v = 1 << (n % 32);\r\n  bits[o] = (bits[o] || 0) | v;\r\n}\r\n","/**\r\n@license\r\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n\r\n'use strict';\r\n\r\nimport {applyStylePlaceHolder} from './style-util'\r\nimport {nativeShadow} from './style-settings'\r\n\r\nlet placeholderMap = {};\r\n\r\nconst ce = window.customElements;\r\nif (ce && !nativeShadow) {\r\n  const origDefine = ce.define;\r\n  ce.define = function(name, clazz, options) {\r\n    placeholderMap[name] = applyStylePlaceHolder(name);\r\n    return origDefine.call(ce, name, clazz, options);\r\n  };\r\n}\r\n\r\nexport default placeholderMap;\r\n","/**\r\n@license\r\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n'use strict';\r\n\r\nexport default class StyleCache {\r\n  constructor(typeMax = 100) {\r\n    // map element name -> [{properties, styleElement, scopeSelector}]\r\n    this.cache = {};\r\n    this.typeMax = typeMax;\r\n  }\r\n\r\n  _validate(cacheEntry, properties, ownPropertyNames) {\r\n    for (let idx = 0; idx < ownPropertyNames.length; idx++) {\r\n      let pn = ownPropertyNames[idx];\r\n      if (cacheEntry.properties[pn] !== properties[pn]) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  store(tagname, properties, styleElement, scopeSelector) {\r\n    let list = this.cache[tagname] || [];\r\n    list.push({properties, styleElement, scopeSelector});\r\n    if (list.length > this.typeMax) {\r\n      list.shift();\r\n    }\r\n    this.cache[tagname] = list;\r\n  }\r\n\r\n  fetch(tagname, properties, ownPropertyNames) {\r\n    let list = this.cache[tagname];\r\n    if (!list) {\r\n      return;\r\n    }\r\n    // reverse list for most-recent lookups\r\n    for (let idx = list.length - 1; idx >= 0; idx--) {\r\n      let entry = list[idx];\r\n      if (this._validate(entry, properties, ownPropertyNames)) {\r\n        return entry;\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n@license\r\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n\r\n'use strict';\r\n\r\nimport {parse} from './css-parse'\r\nimport {nativeShadow, nativeCssVariables, nativeCssApply} from './style-settings'\r\nimport {StyleTransformer} from './style-transformer'\r\nimport * as StyleUtil from './style-util'\r\nimport {StyleProperties} from './style-properties'\r\nimport templateMap from './template-map'\r\nimport placeholderMap from './style-placeholder'\r\nimport StyleInfo from './style-info'\r\nimport StyleCache from './style-cache'\r\n\r\n// TODO(dfreedm): consider spliting into separate global\r\nimport ApplyShim from './apply-shim'\r\n\r\nlet styleCache = new StyleCache();\r\n\r\nexport let ShadyCSS = {\r\n  scopeCounter: {},\r\n  nativeShadow: nativeShadow,\r\n  nativeCss: nativeCssVariables,\r\n  nativeCssApply: nativeCssApply,\r\n  _documentOwner: document.documentElement,\r\n  _documentOwnerStyleInfo: StyleInfo.set(document.documentElement, new StyleInfo({rules: []})),\r\n  _generateScopeSelector(name) {\r\n    let id = this.scopeCounter[name] = (this.scopeCounter[name] || 0) + 1;\r\n    return name + '-' + id;\r\n  },\r\n  getStyleAst(style) {\r\n    return StyleUtil.rulesForStyle(style);\r\n  },\r\n  styleAstToString(ast) {\r\n    return StyleUtil.toCssText(ast);\r\n  },\r\n  _gatherStyles(template) {\r\n    let styles = template.content.querySelectorAll('style');\r\n    let cssText = [];\r\n    for (let i = 0; i < styles.length; i++) {\r\n      let s = styles[i];\r\n      cssText.push(s.textContent);\r\n      s.parentNode.removeChild(s);\r\n    }\r\n    return cssText.join('').trim();\r\n  },\r\n  _getCssBuild(template) {\r\n    let style = template.content.querySelector('style');\r\n    if (!style) {\r\n      return '';\r\n    }\r\n    return style.getAttribute('css-build') || '';\r\n  },\r\n  prepareTemplate(template, elementName, typeExtension) {\r\n    if (template._prepared) {\r\n      return;\r\n    }\r\n    template._prepared = true;\r\n    template.name = elementName;\r\n    templateMap[elementName] = template;\r\n    let cssText = this._gatherStyles(template);\r\n    if (!this.nativeShadow) {\r\n      StyleTransformer.dom(template.content, elementName);\r\n    }\r\n    let ast = parse(cssText);\r\n    if (this.nativeCss && !this.nativeCssApply) {\r\n      ApplyShim.transformRules(ast, elementName);\r\n    }\r\n    template._styleAst = ast;\r\n\r\n    let ownPropertyNames = [];\r\n    if (!this.nativeCss) {\r\n      ownPropertyNames = StyleProperties.decorateStyles(template._styleAst);\r\n    }\r\n    if (!ownPropertyNames.length || this.nativeCss) {\r\n      let style = StyleTransformer.elementStyles(elementName, typeExtension, this._getCssBuild(template), template._styleAst);\r\n      if (style.length) {\r\n        let root = this.nativeShadow ? template.content : null;\r\n        let placeholder = placeholderMap[elementName];\r\n        style = StyleUtil.applyCss(style, elementName, root, placeholder);\r\n      }\r\n      template._style = style;\r\n    }\r\n    template._ownPropertyNames = ownPropertyNames;\r\n  },\r\n  _prepareHost(hostElement) {\r\n    let { elementName, typeExtension } = StyleUtil.getElementNames(hostElement);\r\n    let placeholder = placeholderMap[elementName];\r\n    let template = templateMap[elementName];\r\n    let ast;\r\n    let ownPropertyNames;\r\n    let cssBuild;\r\n    if (template) {\r\n      ast = template._styleAst;\r\n      ownPropertyNames = template._ownPropertyNames;\r\n      cssBuild = template._cssBuild;\r\n    }\r\n    return StyleInfo.set(hostElement,\r\n      new StyleInfo(\r\n        ast,\r\n        placeholder,\r\n        ownPropertyNames,\r\n        elementName,\r\n        typeExtension,\r\n        cssBuild\r\n      )\r\n    );\r\n  },\r\n  applyStyle(hostElement, overrideProps) {    \r\n    let { elementName, typeExtension } = StyleUtil.getElementNames(hostElement);\r\n    if (window.CustomStyle) {\r\n      let CS = window.CustomStyle;\r\n      if (CS._documentDirty) {\r\n        CS.findStyles();\r\n        if (!this.nativeCss) {\r\n          this._updateProperties(this._documentOwner, this._documentOwnerStyleInfo);\r\n        } else if (!this.nativeCssApply) {\r\n          CS._revalidateApplyShim();\r\n        }\r\n        CS.applyStyles();\r\n        CS._documentDirty = false;\r\n      }\r\n    }\r\n    let styleInfo = StyleInfo.get(hostElement);\r\n    if (!styleInfo) {\r\n      styleInfo = this._prepareHost(hostElement);\r\n    }\r\n    Object.assign(styleInfo.overrideStyleProperties, overrideProps);\r\n    if (this.nativeCss) {\r\n      let template = templateMap[elementName];\r\n      if (template && template.__applyShimInvalid && template._style) {\r\n        // update template\r\n        ApplyShim.transformRules(template._styleAst, elementName);\r\n        template._style.textContent = StyleTransformer.elementStyles(elementName, typeExtension, null, styleInfo.styleRules);\r\n        // update instance if native shadowdom\r\n        if (this.nativeShadow) {\r\n          let style = hostElement.shadowRoot.querySelector('style');\r\n          style.textContent = StyleTransformer.elementStyles(elementName, typeExtension, null, styleInfo.styleRules);\r\n        }\r\n        styleInfo.styleRules = template._styleAst;\r\n      }\r\n      this._updateNativeProperties(hostElement, styleInfo.overrideStyleProperties);\r\n    } else {\r\n      this._updateProperties(hostElement, styleInfo);\r\n      if (styleInfo.ownPropertyNames && styleInfo.ownPropertyNames.length) {\r\n        // TODO: use caching\r\n        this._applyStyleProperties(hostElement, styleInfo);\r\n      }\r\n    }\r\n    let rootNode = this._isRootOwner(hostElement) ? hostElement : hostElement.shadowRoot;\r\n    // note: some elements may not have a root!\r\n    if (rootNode) {\r\n      this._applyToDescendants(rootNode);\r\n    }\r\n  },\r\n  _applyToDescendants(root) {\r\n    let c$ = root.children;\r\n    for (let i = 0, c; i < c$.length; i++) {\r\n      c = c$[i];\r\n      if (c.shadowRoot) {\r\n        this.applyStyle(c);\r\n      }\r\n      this._applyToDescendants(c);\r\n    }\r\n  },\r\n  _styleOwnerForNode(node) {\r\n    let root = node.getRootNode();\r\n    let host = root.host;\r\n    if (host) {\r\n      if (StyleInfo.get(host)) {\r\n        return host;\r\n      } else {\r\n        return this._styleOwnerForNode(host);\r\n      }\r\n    }\r\n    return this._documentOwner;\r\n  },\r\n  _isRootOwner(node) {\r\n    return (node === this._documentOwner);\r\n  },\r\n  _applyStyleProperties(hostElement, styleInfo) {    \r\n    let { elementName } = StyleUtil.getElementNames(hostElement);\r\n    let cacheEntry = styleCache.fetch(elementName, styleInfo.styleProperties, styleInfo.ownPropertyNames);\r\n    let cachedScopeSelector = cacheEntry && cacheEntry.scopeSelector;\r\n    let cachedStyle = cacheEntry ? cacheEntry.styleElement : null;\r\n    let oldScopeSelector = styleInfo.scopeSelector;\r\n    // only generate new scope if cached style is not found\r\n    styleInfo.scopeSelector = cachedScopeSelector || this._generateScopeSelector(elementName);\r\n    let style = StyleProperties.applyElementStyle(hostElement, styleInfo.styleProperties, styleInfo.scopeSelector, cachedStyle);\r\n    if (!this.nativeShadow) {\r\n      StyleProperties.applyElementScopeSelector(hostElement, styleInfo.scopeSelector, oldScopeSelector);\r\n    }\r\n    if (!cacheEntry) {\r\n      styleCache.store(elementName, styleInfo.styleProperties, style, styleInfo.scopeSelector);\r\n    }\r\n    return style;\r\n  },\r\n  _updateProperties(hostElement, styleInfo) {\r\n    let owner = this._styleOwnerForNode(hostElement);\r\n    let ownerStyleInfo = StyleInfo.get(owner);\r\n    let ownerProperties = ownerStyleInfo.styleProperties;\r\n    let props = Object.create(ownerProperties || null);\r\n    let hostAndRootProps = StyleProperties.hostAndRootPropertiesForElement(hostElement, styleInfo.styleRules);\r\n    let propertyData = StyleProperties.propertyDataFromStyles(ownerStyleInfo.styleRules, hostElement);\r\n    let propertiesMatchingHost = propertyData.properties\r\n    Object.assign(\r\n      props,\r\n      hostAndRootProps.hostProps,\r\n      propertiesMatchingHost,\r\n      hostAndRootProps.rootProps\r\n    );\r\n    this._mixinOverrideStyles(props, styleInfo.overrideStyleProperties);\r\n    StyleProperties.reify(props);\r\n    styleInfo.styleProperties = props;\r\n  },\r\n  _mixinOverrideStyles(props, overrides) {\r\n    for (let p in overrides) {\r\n      let v = overrides[p];\r\n      // skip override props if they are not truthy or 0\r\n      // in order to fall back to inherited values\r\n      if (v || v === 0) {\r\n        props[p] = v;\r\n      }\r\n    }\r\n  },\r\n  _updateNativeProperties(element, properties) {\r\n    // remove previous properties\r\n    for (let p in properties) {\r\n      // NOTE: for bc with shim, don't apply null values.\r\n      if (p === null) {\r\n        element.style.removeProperty(p);\r\n      } else {\r\n        element.style.setProperty(p, properties[p]);\r\n      }\r\n    }\r\n  },\r\n  updateStyles(properties) {\r\n    if (window.CustomStyle) {\r\n      window.CustomStyle._documentDirty = true;\r\n    }\r\n    this.applyStyle(this._documentOwner, properties);\r\n  },\r\n  /* Custom Style operations */\r\n  _transformCustomStyleForDocument(style) {\r\n    let ast = StyleUtil.rulesForStyle(style);\r\n    StyleUtil.forEachRule(ast, (rule) => {\r\n      if (nativeShadow) {\r\n        StyleTransformer.normalizeRootSelector(rule);\r\n      } else {\r\n        StyleTransformer.documentRule(rule);\r\n      }\r\n      if (this.nativeCss && !this.nativeCssApply) {\r\n        ApplyShim.transformRule(rule);\r\n      }\r\n    });\r\n    if (this.nativeCss) {\r\n      style.textContent = StyleUtil.toCssText(ast);\r\n    } else {\r\n      this._documentOwnerStyleInfo.styleRules.rules.push(ast);\r\n    }\r\n  },\r\n  _revalidateApplyShim(style) {\r\n    if (this.nativeCss && !this.nativeCssApply) {\r\n      let ast = StyleUtil.rulesForStyle(style);\r\n      ApplyShim.transformRules(ast);\r\n      style.textContent = StyleUtil.toCssText(ast);\r\n    }\r\n  },\r\n  _applyCustomStyleToDocument(style) {\r\n    if (!this.nativeCss) {\r\n      StyleProperties.applyCustomStyle(style, this._documentOwnerStyleInfo.styleProperties);\r\n    }\r\n  },\r\n  getComputedStyleValue(element, property) {\r\n    let value;\r\n    if (!this.nativeCss) {\r\n      // element is either a style host, or an ancestor of a style host\r\n      let styleInfo = StyleInfo.get(element) || StyleInfo.get(this._styleOwnerForNode(element));\r\n      value = styleInfo.styleProperties[property];\r\n    }\r\n    // fall back to the property value from the computed styling\r\n    value = value || window.getComputedStyle(element).getPropertyValue(property);\r\n    // trim whitespace that can come after the `:` in css\r\n    // example: padding: 2px -> \" 2px\"\r\n    return value.trim();\r\n  }\r\n}\r\n\r\nwindow['ShadyCSS'] = ShadyCSS;\r\n","/**\r\n@license\r\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n\r\n/*\r\nWrapper over <style> elements to co-operate with ShadyCSS\r\n\r\nExample:\r\n<shady-style>\r\n  <style>\r\n  ...\r\n  </style>\r\n</shady-style>\r\n*/\r\n\r\n'use strict';\r\n\r\nimport { ShadyCSS } from './ShadyCSS';\r\n\r\nlet enqueued = false;\r\n\r\nlet customStyles = [];\r\n\r\nlet hookFn = null;\r\n\r\n/*\r\nIf a page only has <custom-style> elements, it will flash unstyled content,\r\nas all the instances will boot asynchronously after page load.\r\n\r\nCalling ShadyCSS.updateStyles() will force the work to happen synchronously\r\n*/\r\nfunction enqueueDocumentValidation() {\r\n  if (enqueued) {\r\n    return;\r\n  }\r\n  enqueued = true;\r\n  if (window.HTMLImports) {\r\n    window.HTMLImports.whenReady(validateDocument);\r\n  } else if (document.readyState === 'complete') {\r\n    requestAnimationFrame(validateDocument);\r\n  } else {\r\n    document.addEventListener('readystatechange', function() {\r\n      if (document.readyState === 'complete') {\r\n        validateDocument();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n// NOTE: Make sure to enqueue eagerly. This is an optimization that\r\n// helps ensure that the first run of validateDocument will actually\r\n// have access to all the custom-style's created via loading imports.\r\n// If the first created custom-style calls enqueue and HTMLImports.ready\r\n// is true at that time (which is the case when HTMLImports are polyfilled),\r\n// then the enqueue immediately calls validateDocument and work that could be\r\n// batched is not.\r\nenqueueDocumentValidation();\r\n\r\nfunction validateDocument() {\r\n  if (enqueued) {\r\n    ShadyCSS.updateStyles();\r\n    enqueued = false;\r\n  }\r\n}\r\n\r\nfunction CustomStyle() {\r\n  /*\r\n  Use Reflect to invoke the HTMLElement constructor, or rely on the\r\n  CustomElement polyfill replacement that can be `.call`ed\r\n  */\r\n  const self = (window.Reflect && Reflect.construct)\r\n    ? Reflect.construct(HTMLElement, [], this.constructor || CustomStyle)\r\n    : HTMLElement.call(this);\r\n  customStyles.push(self);\r\n  enqueueDocumentValidation();\r\n  return self;\r\n}\r\n\r\nObject.defineProperties(CustomStyle, {\r\n  /*\r\n  CustomStyle.processHook is provided to customize the <style> element child of\r\n  a <custom-style> element before the <style> is processed by ShadyCSS\r\n\r\n  The function must take a <style> element as input, and return nothing.\r\n  */\r\n  processHook: {\r\n    get() {\r\n      return hookFn;\r\n    },\r\n    set(fn) {\r\n      hookFn = fn;\r\n      return fn;\r\n    }\r\n  },\r\n  _customStyles: {\r\n    get() {\r\n      return customStyles;\r\n    }\r\n  },\r\n  _documentDirty: {\r\n    get() {\r\n      return enqueued;\r\n    },\r\n    set(value) {\r\n      enqueued = value;\r\n      return value;\r\n    }\r\n  }\r\n});\r\n\r\nCustomStyle.findStyles = function() {\r\n  for (let i = 0; i < customStyles.length; i++) {\r\n    customStyles[i]._findStyle();\r\n  }\r\n};\r\n\r\nCustomStyle._revalidateApplyShim = function() {\r\n  for (let i = 0; i < customStyles.length; i++) {\r\n    let s = customStyles[i];\r\n    if (s._style) {\r\n      ShadyCSS._revalidateApplyShim(s._style);\r\n    }\r\n  }\r\n}\r\n\r\nCustomStyle.applyStyles = function() {\r\n  for (let i = 0; i < customStyles.length; i++) {\r\n    customStyles[i]._applyStyle();\r\n  }\r\n};\r\n\r\nCustomStyle.prototype = Object.create(HTMLElement.prototype, {\r\n  'constructor': {\r\n    value: CustomStyle,\r\n    configurable: true,\r\n    writable: true\r\n  }\r\n});\r\n\r\nCustomStyle.prototype._findStyle = function() {\r\n  if (!this._style) {\r\n    let style = this.querySelector('style');\r\n    if (!style) {\r\n      return;\r\n    }\r\n    // HTMLImports polyfill may have cloned the style into the main document,\r\n    // which is referenced with __appliedElement.\r\n    // Also, we must copy over the attributes.\r\n    if (style.__appliedElement) {\r\n      for (let i = 0; i < style.attributes.length; i++) {\r\n        let attr = style.attributes[i];\r\n        style.__appliedElement.setAttribute(attr.name, attr.value);\r\n      }\r\n    }\r\n    this._style = style.__appliedElement || style;\r\n    if (hookFn) {\r\n      hookFn(this._style);\r\n    }\r\n    ShadyCSS._transformCustomStyleForDocument(this._style);\r\n  }\r\n};\r\n\r\nCustomStyle.prototype._applyStyle = function() {\r\n  if (this._style) {\r\n    ShadyCSS._applyCustomStyleToDocument(this._style);\r\n  }\r\n};\r\n\r\nwindow.customElements.define('custom-style', CustomStyle);\r\nwindow['CustomStyle'] = CustomStyle;\r\n"]}